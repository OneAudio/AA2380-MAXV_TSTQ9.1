/*
WARNING: Do NOT edit the input and output ports in this file in a text
editor if you plan to continue editing the block that represents it in
the Block Editor! File corruption is VERY likely to occur.
*/

/*
Copyright (C) 1991-2010 Altera Corporation
Your use of Altera Corporation's design tools, logic functions 
and other software and tools, and its AMPP partner logic 
functions, and any output files from any of the foregoing 
(including device programming or simulation files), and any 
associated documentation or information are expressly subject 
to the terms and conditions of the Altera Program License 
Subscription Agreement, Altera MegaCore Function License 
Agreement, or other applicable license agreement, including, 
without limitation, that your use is for the sole purpose of 
programming logic devices manufactured by Altera and sold by 
Altera or its authorized distributors.  Please refer to the 
applicable agreement for further details.
*/

HEADER
{
	VERSION = 1;
	TIME_UNIT = ns;
	DATA_OFFSET = 0.0;
	DATA_DURATION = 2400000.0;
	SIMULATION_TIME = 2400000.0;
	GRID_PHASE = 0.0;
	GRID_PERIOD = 10.0;
	GRID_DUTY_CYCLE = 50;
}

SIGNAL("AVG")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 3;
	LSB_INDEX = 0;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("AVG[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "AVG";
}

SIGNAL("AVG[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "AVG";
}

SIGNAL("AVG[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "AVG";
}

SIGNAL("BUSYL")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("BUSYR")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("CK128FS")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("CLOCK")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("DOUTL")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 24;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("DOUTL[23]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DOUTL";
}

SIGNAL("DOUTL[22]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DOUTL";
}

SIGNAL("DOUTL[21]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DOUTL";
}

SIGNAL("DOUTL[20]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DOUTL";
}

SIGNAL("DOUTL[19]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DOUTL";
}

SIGNAL("DOUTL[18]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DOUTL";
}

SIGNAL("DOUTL[17]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DOUTL";
}

SIGNAL("DOUTL[16]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DOUTL";
}

SIGNAL("DOUTL[15]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DOUTL";
}

SIGNAL("DOUTL[14]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DOUTL";
}

SIGNAL("DOUTL[13]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DOUTL";
}

SIGNAL("DOUTL[12]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DOUTL";
}

SIGNAL("DOUTL[11]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DOUTL";
}

SIGNAL("DOUTL[10]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DOUTL";
}

SIGNAL("DOUTL[9]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DOUTL";
}

SIGNAL("DOUTL[8]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DOUTL";
}

SIGNAL("DOUTL[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DOUTL";
}

SIGNAL("DOUTL[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DOUTL";
}

SIGNAL("DOUTL[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DOUTL";
}

SIGNAL("DOUTL[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DOUTL";
}

SIGNAL("DOUTL[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DOUTL";
}

SIGNAL("DOUTL[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DOUTL";
}

SIGNAL("DOUTL[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DOUTL";
}

SIGNAL("DOUTL[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DOUTL";
}

SIGNAL("DOUTR")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 24;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("DOUTR[23]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DOUTR";
}

SIGNAL("DOUTR[22]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DOUTR";
}

SIGNAL("DOUTR[21]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DOUTR";
}

SIGNAL("DOUTR[20]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DOUTR";
}

SIGNAL("DOUTR[19]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DOUTR";
}

SIGNAL("DOUTR[18]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DOUTR";
}

SIGNAL("DOUTR[17]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DOUTR";
}

SIGNAL("DOUTR[16]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DOUTR";
}

SIGNAL("DOUTR[15]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DOUTR";
}

SIGNAL("DOUTR[14]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DOUTR";
}

SIGNAL("DOUTR[13]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DOUTR";
}

SIGNAL("DOUTR[12]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DOUTR";
}

SIGNAL("DOUTR[11]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DOUTR";
}

SIGNAL("DOUTR[10]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DOUTR";
}

SIGNAL("DOUTR[9]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DOUTR";
}

SIGNAL("DOUTR[8]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DOUTR";
}

SIGNAL("DOUTR[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DOUTR";
}

SIGNAL("DOUTR[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DOUTR";
}

SIGNAL("DOUTR[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DOUTR";
}

SIGNAL("DOUTR[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DOUTR";
}

SIGNAL("DOUTR[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DOUTR";
}

SIGNAL("DOUTR[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DOUTR";
}

SIGNAL("DOUTR[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DOUTR";
}

SIGNAL("DOUTR[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DOUTR";
}

SIGNAL("enable")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("Fso")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("nCNVL")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("nCNVR")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("nFS")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("nSINC")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("SCK")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("SDOL")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("SDOR")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("SR")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 2;
	LSB_INDEX = 0;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("SR[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "SR";
}

SIGNAL("SR[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "SR";
}

TRANSITION_LIST("AVG[2]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 200000.0;
			LEVEL 1 FOR 100000.0;
			LEVEL 0 FOR 200000.0;
			LEVEL 1 FOR 100000.0;
			LEVEL 0 FOR 200000.0;
			LEVEL 1 FOR 100000.0;
			LEVEL 0 FOR 200000.0;
			LEVEL 1 FOR 100000.0;
		}
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 200000.0;
			LEVEL 1 FOR 100000.0;
			LEVEL 0 FOR 200000.0;
			LEVEL 1 FOR 100000.0;
			LEVEL 0 FOR 200000.0;
			LEVEL 1 FOR 100000.0;
			LEVEL 0 FOR 200000.0;
			LEVEL 1 FOR 100000.0;
		}
	}
}

TRANSITION_LIST("AVG[1]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 100000.0;
			LEVEL 1 FOR 100000.0;
		}
		LEVEL 0 FOR 200000.0;
		LEVEL 1 FOR 100000.0;
		LEVEL 0 FOR 200000.0;
		LEVEL 1 FOR 100000.0;
		LEVEL 0 FOR 200000.0;
		LEVEL 1 FOR 100000.0;
		LEVEL 0 FOR 200000.0;
		LEVEL 1 FOR 100000.0;
		LEVEL 0 FOR 200000.0;
		LEVEL 1 FOR 100000.0;
		LEVEL 0 FOR 200000.0;
		LEVEL 1 FOR 100000.0;
		LEVEL 0 FOR 200000.0;
		LEVEL 1 FOR 100000.0;
		LEVEL 0 FOR 100000.0;
	}
}

TRANSITION_LIST("AVG[0]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 50000.0;
			LEVEL 1 FOR 50000.0;
		}
		LEVEL 0 FOR 50000.0;
		LEVEL 1 FOR 50000.0;
		LEVEL 0 FOR 50000.0;
		LEVEL 1 FOR 50000.0;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 50000.0;
			LEVEL 1 FOR 50000.0;
		}
		LEVEL 0 FOR 50000.0;
		LEVEL 1 FOR 50000.0;
		LEVEL 0 FOR 50000.0;
		LEVEL 1 FOR 50000.0;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 50000.0;
			LEVEL 1 FOR 50000.0;
		}
		LEVEL 0 FOR 50000.0;
		LEVEL 1 FOR 50000.0;
		LEVEL 0 FOR 50000.0;
		LEVEL 1 FOR 50000.0;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 50000.0;
			LEVEL 1 FOR 50000.0;
		}
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 50000.0;
		}
		NODE
		{
			REPEAT = 1;
			LEVEL 1 FOR 50000.0;
		}
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 50000.0;
			LEVEL 1 FOR 50000.0;
			NODE
			{
				REPEAT = 1;
				LEVEL 0 FOR 50000.0;
				LEVEL 1 FOR 50000.0;
			}
			LEVEL 0 FOR 50000.0;
			LEVEL 1 FOR 50000.0;
			LEVEL 0 FOR 50000.0;
			LEVEL 1 FOR 50000.0;
			NODE
			{
				REPEAT = 1;
				LEVEL 0 FOR 50000.0;
				LEVEL 1 FOR 50000.0;
			}
			LEVEL 0 FOR 50000.0;
			LEVEL 1 FOR 50000.0;
			LEVEL 0 FOR 50000.0;
			LEVEL 1 FOR 50000.0;
			NODE
			{
				REPEAT = 1;
				LEVEL 0 FOR 50000.0;
				LEVEL 1 FOR 50000.0;
			}
			LEVEL 0 FOR 50000.0;
			LEVEL 1 FOR 50000.0;
			LEVEL 0 FOR 50000.0;
			LEVEL 1 FOR 50000.0;
			NODE
			{
				REPEAT = 1;
				LEVEL 0 FOR 50000.0;
				LEVEL 1 FOR 50000.0;
			}
			NODE
			{
				REPEAT = 1;
				LEVEL 0 FOR 50000.0;
			}
			NODE
			{
				REPEAT = 1;
				LEVEL 1 FOR 50000.0;
			}
		}
	}
}

TRANSITION_LIST("BUSYL")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2400000.0;
	}
}

TRANSITION_LIST("BUSYR")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2400000.0;
	}
}

TRANSITION_LIST("CK128FS")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 95.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 80.0;
			LEVEL 0 FOR 80.0;
		}
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 7110.0;
		NODE
		{
			REPEAT = 1826;
			LEVEL 1 FOR 80.0;
			LEVEL 0 FOR 80.0;
		}
		LEVEL 1 FOR 80.0;
		NODE
		{
			REPEAT = 3750;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
		}
		NODE
		{
			REPEAT = 7500;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		NODE
		{
			REPEAT = 15000;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
		}
		NODE
		{
			REPEAT = 1875;
			LEVEL 0 FOR 80.0;
			LEVEL 1 FOR 80.0;
		}
		NODE
		{
			REPEAT = 3750;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
		}
		NODE
		{
			REPEAT = 7500;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		NODE
		{
			REPEAT = 14999;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
		}
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 5.0;
	}
}

TRANSITION_LIST("CLOCK")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 240000;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
		}
	}
}

TRANSITION_LIST("DOUTL[23]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2400000.0;
	}
}

TRANSITION_LIST("DOUTL[22]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2400000.0;
	}
}

TRANSITION_LIST("DOUTL[21]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2400000.0;
	}
}

TRANSITION_LIST("DOUTL[20]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2400000.0;
	}
}

TRANSITION_LIST("DOUTL[19]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2400000.0;
	}
}

TRANSITION_LIST("DOUTL[18]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2400000.0;
	}
}

TRANSITION_LIST("DOUTL[17]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2400000.0;
	}
}

TRANSITION_LIST("DOUTL[16]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2400000.0;
	}
}

TRANSITION_LIST("DOUTL[15]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2400000.0;
	}
}

TRANSITION_LIST("DOUTL[14]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2400000.0;
	}
}

TRANSITION_LIST("DOUTL[13]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2400000.0;
	}
}

TRANSITION_LIST("DOUTL[12]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2400000.0;
	}
}

TRANSITION_LIST("DOUTL[11]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2400000.0;
	}
}

TRANSITION_LIST("DOUTL[10]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2400000.0;
	}
}

TRANSITION_LIST("DOUTL[9]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2400000.0;
	}
}

TRANSITION_LIST("DOUTL[8]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2400000.0;
	}
}

TRANSITION_LIST("DOUTL[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2400000.0;
	}
}

TRANSITION_LIST("DOUTL[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2400000.0;
	}
}

TRANSITION_LIST("DOUTL[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2400000.0;
	}
}

TRANSITION_LIST("DOUTL[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2400000.0;
	}
}

TRANSITION_LIST("DOUTL[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2400000.0;
	}
}

TRANSITION_LIST("DOUTL[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2400000.0;
	}
}

TRANSITION_LIST("DOUTL[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2400000.0;
	}
}

TRANSITION_LIST("DOUTL[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2400000.0;
	}
}

TRANSITION_LIST("DOUTR[23]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2400000.0;
	}
}

TRANSITION_LIST("DOUTR[22]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2400000.0;
	}
}

TRANSITION_LIST("DOUTR[21]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2400000.0;
	}
}

TRANSITION_LIST("DOUTR[20]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2400000.0;
	}
}

TRANSITION_LIST("DOUTR[19]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2400000.0;
	}
}

TRANSITION_LIST("DOUTR[18]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2400000.0;
	}
}

TRANSITION_LIST("DOUTR[17]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2400000.0;
	}
}

TRANSITION_LIST("DOUTR[16]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2400000.0;
	}
}

TRANSITION_LIST("DOUTR[15]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2400000.0;
	}
}

TRANSITION_LIST("DOUTR[14]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2400000.0;
	}
}

TRANSITION_LIST("DOUTR[13]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2400000.0;
	}
}

TRANSITION_LIST("DOUTR[12]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2400000.0;
	}
}

TRANSITION_LIST("DOUTR[11]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2400000.0;
	}
}

TRANSITION_LIST("DOUTR[10]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2400000.0;
	}
}

TRANSITION_LIST("DOUTR[9]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2400000.0;
	}
}

TRANSITION_LIST("DOUTR[8]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2400000.0;
	}
}

TRANSITION_LIST("DOUTR[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2400000.0;
	}
}

TRANSITION_LIST("DOUTR[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2400000.0;
	}
}

TRANSITION_LIST("DOUTR[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2400000.0;
	}
}

TRANSITION_LIST("DOUTR[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2400000.0;
	}
}

TRANSITION_LIST("DOUTR[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2400000.0;
	}
}

TRANSITION_LIST("DOUTR[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2400000.0;
	}
}

TRANSITION_LIST("DOUTR[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2400000.0;
	}
}

TRANSITION_LIST("DOUTR[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2400000.0;
	}
}

TRANSITION_LIST("enable")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 696.864;
		LEVEL 0 FOR 6968.641;
		LEVEL 1 FOR 2392334.495;
	}
}

TRANSITION_LIST("Fso")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 17205.0;
		NODE
		{
			REPEAT = 13;
			LEVEL 1 FOR 10240.0;
			LEVEL 0 FOR 10240.0;
		}
		LEVEL 1 FOR 10240.0;
		LEVEL 0 FOR 8280.0;
		NODE
		{
			REPEAT = 29;
			LEVEL 1 FOR 5120.0;
			LEVEL 0 FOR 5120.0;
		}
		LEVEL 1 FOR 3100.0;
		NODE
		{
			REPEAT = 58;
			LEVEL 0 FOR 2560.0;
			LEVEL 1 FOR 2560.0;
		}
		LEVEL 0 FOR 1790.0;
		NODE
		{
			REPEAT = 116;
			LEVEL 1 FOR 1280.0;
			LEVEL 0 FOR 1280.0;
		}
		LEVEL 1 FOR 1280.0;
		LEVEL 0 FOR 3310.0;
		NODE
		{
			REPEAT = 14;
			LEVEL 1 FOR 10240.0;
			LEVEL 0 FOR 10240.0;
		}
		LEVEL 1 FOR 10240.0;
		LEVEL 0 FOR 5480.0;
		NODE
		{
			REPEAT = 28;
			LEVEL 1 FOR 5120.0;
			LEVEL 0 FOR 5120.0;
		}
		LEVEL 1 FOR 5120.0;
		LEVEL 0 FOR 4260.0;
		NODE
		{
			REPEAT = 58;
			LEVEL 1 FOR 2560.0;
			LEVEL 0 FOR 2560.0;
		}
		LEVEL 1 FOR 2370.0;
		NODE
		{
			REPEAT = 117;
			LEVEL 0 FOR 1280.0;
			LEVEL 1 FOR 1280.0;
		}
		LEVEL 0 FOR 285.0;
	}
}

TRANSITION_LIST("nCNVL")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 17215.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20440.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 15320.0;
		NODE
		{
			REPEAT = 4;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 10200.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 7640.0;
		NODE
		{
			REPEAT = 9;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 5080.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 23000.0;
		NODE
		{
			REPEAT = 11;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 2520.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 21720.0;
		NODE
		{
			REPEAT = 22;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 1240.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 21400.0;
		NODE
		{
			REPEAT = 46;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 600.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 10320.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 10200.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 17880.0;
		NODE
		{
			REPEAT = 8;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 5080.0;
		}
		NODE
		{
			REPEAT = 19;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 2520.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 1880.0;
		NODE
		{
			REPEAT = 38;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 1240.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 11160.0;
		NODE
		{
			REPEAT = 62;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 600.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 10520.0;
		NODE
		{
			REPEAT = 123;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 280.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 2760.0;
		NODE
		{
			REPEAT = 9;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 5080.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 7640.0;
		NODE
		{
			REPEAT = 17;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 2520.0;
		}
		NODE
		{
			REPEAT = 39;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 1240.0;
		}
		NODE
		{
			REPEAT = 78;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 600.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 440.0;
		NODE
		{
			REPEAT = 155;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 280.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 5320.0;
		NODE
		{
			REPEAT = 280;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 120.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 1360.0;
		NODE
		{
			REPEAT = 19;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 2520.0;
		}
		NODE
		{
			REPEAT = 39;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 1240.0;
		}
		NODE
		{
			REPEAT = 78;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 600.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 2840.0;
		NODE
		{
			REPEAT = 148;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 280.0;
		}
		NODE
		{
			REPEAT = 312;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 120.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 80.0;
		NODE
		{
			REPEAT = 624;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 1040.0;
		NODE
		{
			REPEAT = 116;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 2520.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 2240.0;
		NODE
		{
			REPEAT = 234;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 1240.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 720.0;
		NODE
		{
			REPEAT = 467;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 600.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 560.0;
		NODE
		{
			REPEAT = 937;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 280.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 65.0;
	}
}

TRANSITION_LIST("nCNVR")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 17215.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 20440.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 15320.0;
		NODE
		{
			REPEAT = 4;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 10200.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 7640.0;
		NODE
		{
			REPEAT = 9;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 5080.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 23000.0;
		NODE
		{
			REPEAT = 11;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 2520.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 21720.0;
		NODE
		{
			REPEAT = 22;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 1240.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 21400.0;
		NODE
		{
			REPEAT = 46;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 600.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 10320.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 10200.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 17880.0;
		NODE
		{
			REPEAT = 8;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 5080.0;
		}
		NODE
		{
			REPEAT = 19;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 2520.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 1880.0;
		NODE
		{
			REPEAT = 38;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 1240.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 11160.0;
		NODE
		{
			REPEAT = 62;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 600.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 10520.0;
		NODE
		{
			REPEAT = 123;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 280.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 2760.0;
		NODE
		{
			REPEAT = 9;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 5080.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 7640.0;
		NODE
		{
			REPEAT = 17;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 2520.0;
		}
		NODE
		{
			REPEAT = 39;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 1240.0;
		}
		NODE
		{
			REPEAT = 78;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 600.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 440.0;
		NODE
		{
			REPEAT = 155;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 280.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 5320.0;
		NODE
		{
			REPEAT = 280;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 120.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 1360.0;
		NODE
		{
			REPEAT = 19;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 2520.0;
		}
		NODE
		{
			REPEAT = 39;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 1240.0;
		}
		NODE
		{
			REPEAT = 78;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 600.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 2840.0;
		NODE
		{
			REPEAT = 148;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 280.0;
		}
		NODE
		{
			REPEAT = 312;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 120.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 80.0;
		NODE
		{
			REPEAT = 624;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 1040.0;
		NODE
		{
			REPEAT = 116;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 2520.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 2240.0;
		NODE
		{
			REPEAT = 234;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 1240.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 720.0;
		NODE
		{
			REPEAT = 467;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 600.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 560.0;
		NODE
		{
			REPEAT = 937;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 280.0;
		}
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 65.0;
	}
}

TRANSITION_LIST("nFS")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 17205.0;
		LEVEL 1 FOR 10240.0;
		LEVEL 0 FOR 10240.0;
		LEVEL 1 FOR 10240.0;
		NODE
		{
			REPEAT = 5;
			LEVEL 0 FOR 5120.0;
			LEVEL 1 FOR 5120.0;
		}
		NODE
		{
			REPEAT = 9;
			LEVEL 0 FOR 2560.0;
			LEVEL 1 FOR 2560.0;
		}
		LEVEL 0 FOR 2560.0;
		LEVEL 1 FOR 21760.0;
		NODE
		{
			REPEAT = 11;
			LEVEL 0 FOR 1280.0;
			LEVEL 1 FOR 1280.0;
		}
		LEVEL 0 FOR 1280.0;
		LEVEL 1 FOR 21120.0;
		NODE
		{
			REPEAT = 23;
			LEVEL 0 FOR 640.0;
			LEVEL 1 FOR 640.0;
		}
		LEVEL 0 FOR 20800.0;
		NODE
		{
			REPEAT = 46;
			LEVEL 1 FOR 320.0;
			LEVEL 0 FOR 320.0;
		}
		LEVEL 1 FOR 5240.0;
		NODE
		{
			REPEAT = 4;
			LEVEL 0 FOR 5120.0;
			LEVEL 1 FOR 5120.0;
		}
		LEVEL 0 FOR 12800.0;
		NODE
		{
			REPEAT = 8;
			LEVEL 1 FOR 2560.0;
			LEVEL 0 FOR 2560.0;
		}
		NODE
		{
			REPEAT = 19;
			LEVEL 1 FOR 1280.0;
			LEVEL 0 FOR 1280.0;
		}
		LEVEL 1 FOR 1280.0;
		NODE
		{
			REPEAT = 39;
			LEVEL 0 FOR 640.0;
			LEVEL 1 FOR 640.0;
		}
		LEVEL 0 FOR 10560.0;
		NODE
		{
			REPEAT = 62;
			LEVEL 1 FOR 320.0;
			LEVEL 0 FOR 320.0;
		}
		LEVEL 1 FOR 10400.0;
		NODE
		{
			REPEAT = 124;
			LEVEL 0 FOR 160.0;
			LEVEL 1 FOR 160.0;
		}
		LEVEL 0 FOR 2620.0;
		NODE
		{
			REPEAT = 9;
			LEVEL 1 FOR 2560.0;
			LEVEL 0 FOR 2560.0;
		}
		LEVEL 1 FOR 6400.0;
		NODE
		{
			REPEAT = 17;
			LEVEL 0 FOR 1280.0;
			LEVEL 1 FOR 1280.0;
		}
		LEVEL 0 FOR 1280.0;
		NODE
		{
			REPEAT = 39;
			LEVEL 1 FOR 640.0;
			LEVEL 0 FOR 640.0;
		}
		NODE
		{
			REPEAT = 78;
			LEVEL 1 FOR 320.0;
			LEVEL 0 FOR 320.0;
		}
		LEVEL 1 FOR 320.0;
		NODE
		{
			REPEAT = 156;
			LEVEL 0 FOR 160.0;
			LEVEL 1 FOR 160.0;
		}
		LEVEL 0 FOR 5200.0;
		NODE
		{
			REPEAT = 280;
			LEVEL 1 FOR 80.0;
			LEVEL 0 FOR 80.0;
		}
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 1310.0;
		NODE
		{
			REPEAT = 19;
			LEVEL 1 FOR 1280.0;
			LEVEL 0 FOR 1280.0;
		}
		NODE
		{
			REPEAT = 39;
			LEVEL 1 FOR 640.0;
			LEVEL 0 FOR 640.0;
		}
		NODE
		{
			REPEAT = 78;
			LEVEL 1 FOR 320.0;
			LEVEL 0 FOR 320.0;
		}
		LEVEL 1 FOR 2720.0;
		NODE
		{
			REPEAT = 148;
			LEVEL 0 FOR 160.0;
			LEVEL 1 FOR 160.0;
		}
		LEVEL 0 FOR 160.0;
		NODE
		{
			REPEAT = 312;
			LEVEL 1 FOR 80.0;
			LEVEL 0 FOR 80.0;
		}
		LEVEL 1 FOR 80.0;
		NODE
		{
			REPEAT = 625;
			LEVEL 0 FOR 40.0;
			LEVEL 1 FOR 40.0;
		}
		LEVEL 0 FOR 1070.0;
		NODE
		{
			REPEAT = 116;
			LEVEL 1 FOR 1280.0;
			LEVEL 0 FOR 1280.0;
		}
		LEVEL 1 FOR 1280.0;
		LEVEL 0 FOR 1000.0;
		NODE
		{
			REPEAT = 234;
			LEVEL 1 FOR 640.0;
			LEVEL 0 FOR 640.0;
		}
		LEVEL 1 FOR 420.0;
		NODE
		{
			REPEAT = 468;
			LEVEL 0 FOR 320.0;
			LEVEL 1 FOR 320.0;
		}
		LEVEL 0 FOR 290.0;
		NODE
		{
			REPEAT = 937;
			LEVEL 1 FOR 160.0;
			LEVEL 0 FOR 160.0;
		}
		LEVEL 1 FOR 125.0;
	}
}

TRANSITION_LIST("nSINC")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1200000.0;
		LEVEL 1 FOR 1200000.0;
	}
}

TRANSITION_LIST("SCK")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 17225.0;
		NODE
		{
			REPEAT = 24;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
		}
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 2382530.0;
	}
}

TRANSITION_LIST("SDOL")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2400000.0;
	}
}

TRANSITION_LIST("SDOR")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2400000.0;
	}
}

TRANSITION_LIST("SR[1]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 600000.0;
			LEVEL 1 FOR 600000.0;
		}
	}
}

TRANSITION_LIST("SR[0]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 4;
			LEVEL 0 FOR 300000.0;
			LEVEL 1 FOR 300000.0;
		}
	}
}

DISPLAY_LINE
{
	CHANNEL = "CLOCK";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 0;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "enable";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 1;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "AVG";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 2;
	TREE_LEVEL = 0;
	CHILDREN = 3, 4, 5;
}

DISPLAY_LINE
{
	CHANNEL = "AVG[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 3;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "AVG[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 4;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "AVG[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 5;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "SR";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 6;
	TREE_LEVEL = 0;
	CHILDREN = 7, 8;
}

DISPLAY_LINE
{
	CHANNEL = "SR[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 7;
	TREE_LEVEL = 1;
	PARENT = 6;
}

DISPLAY_LINE
{
	CHANNEL = "SR[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 8;
	TREE_LEVEL = 1;
	PARENT = 6;
}

DISPLAY_LINE
{
	CHANNEL = "nSINC";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 9;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "CK128FS";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 10;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "DOUTL";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 11;
	TREE_LEVEL = 0;
	CHILDREN = 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35;
}

DISPLAY_LINE
{
	CHANNEL = "DOUTL[23]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 12;
	TREE_LEVEL = 1;
	PARENT = 11;
}

DISPLAY_LINE
{
	CHANNEL = "DOUTL[22]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 13;
	TREE_LEVEL = 1;
	PARENT = 11;
}

DISPLAY_LINE
{
	CHANNEL = "DOUTL[21]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 14;
	TREE_LEVEL = 1;
	PARENT = 11;
}

DISPLAY_LINE
{
	CHANNEL = "DOUTL[20]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 15;
	TREE_LEVEL = 1;
	PARENT = 11;
}

DISPLAY_LINE
{
	CHANNEL = "DOUTL[19]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 16;
	TREE_LEVEL = 1;
	PARENT = 11;
}

DISPLAY_LINE
{
	CHANNEL = "DOUTL[18]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 17;
	TREE_LEVEL = 1;
	PARENT = 11;
}

DISPLAY_LINE
{
	CHANNEL = "DOUTL[17]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 18;
	TREE_LEVEL = 1;
	PARENT = 11;
}

DISPLAY_LINE
{
	CHANNEL = "DOUTL[16]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 19;
	TREE_LEVEL = 1;
	PARENT = 11;
}

DISPLAY_LINE
{
	CHANNEL = "DOUTL[15]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 20;
	TREE_LEVEL = 1;
	PARENT = 11;
}

DISPLAY_LINE
{
	CHANNEL = "DOUTL[14]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 21;
	TREE_LEVEL = 1;
	PARENT = 11;
}

DISPLAY_LINE
{
	CHANNEL = "DOUTL[13]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 22;
	TREE_LEVEL = 1;
	PARENT = 11;
}

DISPLAY_LINE
{
	CHANNEL = "DOUTL[12]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 23;
	TREE_LEVEL = 1;
	PARENT = 11;
}

DISPLAY_LINE
{
	CHANNEL = "DOUTL[11]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 24;
	TREE_LEVEL = 1;
	PARENT = 11;
}

DISPLAY_LINE
{
	CHANNEL = "DOUTL[10]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 25;
	TREE_LEVEL = 1;
	PARENT = 11;
}

DISPLAY_LINE
{
	CHANNEL = "DOUTL[9]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 26;
	TREE_LEVEL = 1;
	PARENT = 11;
}

DISPLAY_LINE
{
	CHANNEL = "DOUTL[8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 27;
	TREE_LEVEL = 1;
	PARENT = 11;
}

DISPLAY_LINE
{
	CHANNEL = "DOUTL[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 28;
	TREE_LEVEL = 1;
	PARENT = 11;
}

DISPLAY_LINE
{
	CHANNEL = "DOUTL[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 29;
	TREE_LEVEL = 1;
	PARENT = 11;
}

DISPLAY_LINE
{
	CHANNEL = "DOUTL[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 30;
	TREE_LEVEL = 1;
	PARENT = 11;
}

DISPLAY_LINE
{
	CHANNEL = "DOUTL[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 31;
	TREE_LEVEL = 1;
	PARENT = 11;
}

DISPLAY_LINE
{
	CHANNEL = "DOUTL[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 32;
	TREE_LEVEL = 1;
	PARENT = 11;
}

DISPLAY_LINE
{
	CHANNEL = "DOUTL[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 33;
	TREE_LEVEL = 1;
	PARENT = 11;
}

DISPLAY_LINE
{
	CHANNEL = "DOUTL[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 34;
	TREE_LEVEL = 1;
	PARENT = 11;
}

DISPLAY_LINE
{
	CHANNEL = "DOUTL[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 35;
	TREE_LEVEL = 1;
	PARENT = 11;
}

DISPLAY_LINE
{
	CHANNEL = "DOUTR";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 36;
	TREE_LEVEL = 0;
	CHILDREN = 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60;
}

DISPLAY_LINE
{
	CHANNEL = "DOUTR[23]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 37;
	TREE_LEVEL = 1;
	PARENT = 36;
}

DISPLAY_LINE
{
	CHANNEL = "DOUTR[22]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 38;
	TREE_LEVEL = 1;
	PARENT = 36;
}

DISPLAY_LINE
{
	CHANNEL = "DOUTR[21]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 39;
	TREE_LEVEL = 1;
	PARENT = 36;
}

DISPLAY_LINE
{
	CHANNEL = "DOUTR[20]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 40;
	TREE_LEVEL = 1;
	PARENT = 36;
}

DISPLAY_LINE
{
	CHANNEL = "DOUTR[19]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 41;
	TREE_LEVEL = 1;
	PARENT = 36;
}

DISPLAY_LINE
{
	CHANNEL = "DOUTR[18]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 42;
	TREE_LEVEL = 1;
	PARENT = 36;
}

DISPLAY_LINE
{
	CHANNEL = "DOUTR[17]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 43;
	TREE_LEVEL = 1;
	PARENT = 36;
}

DISPLAY_LINE
{
	CHANNEL = "DOUTR[16]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 44;
	TREE_LEVEL = 1;
	PARENT = 36;
}

DISPLAY_LINE
{
	CHANNEL = "DOUTR[15]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 45;
	TREE_LEVEL = 1;
	PARENT = 36;
}

DISPLAY_LINE
{
	CHANNEL = "DOUTR[14]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 46;
	TREE_LEVEL = 1;
	PARENT = 36;
}

DISPLAY_LINE
{
	CHANNEL = "DOUTR[13]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 47;
	TREE_LEVEL = 1;
	PARENT = 36;
}

DISPLAY_LINE
{
	CHANNEL = "DOUTR[12]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 48;
	TREE_LEVEL = 1;
	PARENT = 36;
}

DISPLAY_LINE
{
	CHANNEL = "DOUTR[11]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 49;
	TREE_LEVEL = 1;
	PARENT = 36;
}

DISPLAY_LINE
{
	CHANNEL = "DOUTR[10]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 50;
	TREE_LEVEL = 1;
	PARENT = 36;
}

DISPLAY_LINE
{
	CHANNEL = "DOUTR[9]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 51;
	TREE_LEVEL = 1;
	PARENT = 36;
}

DISPLAY_LINE
{
	CHANNEL = "DOUTR[8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 52;
	TREE_LEVEL = 1;
	PARENT = 36;
}

DISPLAY_LINE
{
	CHANNEL = "DOUTR[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 53;
	TREE_LEVEL = 1;
	PARENT = 36;
}

DISPLAY_LINE
{
	CHANNEL = "DOUTR[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 54;
	TREE_LEVEL = 1;
	PARENT = 36;
}

DISPLAY_LINE
{
	CHANNEL = "DOUTR[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 55;
	TREE_LEVEL = 1;
	PARENT = 36;
}

DISPLAY_LINE
{
	CHANNEL = "DOUTR[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 56;
	TREE_LEVEL = 1;
	PARENT = 36;
}

DISPLAY_LINE
{
	CHANNEL = "DOUTR[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 57;
	TREE_LEVEL = 1;
	PARENT = 36;
}

DISPLAY_LINE
{
	CHANNEL = "DOUTR[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 58;
	TREE_LEVEL = 1;
	PARENT = 36;
}

DISPLAY_LINE
{
	CHANNEL = "DOUTR[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 59;
	TREE_LEVEL = 1;
	PARENT = 36;
}

DISPLAY_LINE
{
	CHANNEL = "DOUTR[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 60;
	TREE_LEVEL = 1;
	PARENT = 36;
}

DISPLAY_LINE
{
	CHANNEL = "Fso";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 61;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "nCNVL";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 62;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "nCNVR";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 63;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "nFS";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 64;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "SCK";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 65;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "SDOL";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 66;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "SDOR";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 67;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "BUSYL";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 68;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "BUSYR";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 69;
	TREE_LEVEL = 0;
}

TIME_BAR
{
	TIME = 30900;
	MASTER = TRUE;
}
;
