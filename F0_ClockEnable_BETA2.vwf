/*
WARNING: Do NOT edit the input and output ports in this file in a text
editor if you plan to continue editing the block that represents it in
the Block Editor! File corruption is VERY likely to occur.
*/

/*
Copyright (C) 1991-2010 Altera Corporation
Your use of Altera Corporation's design tools, logic functions 
and other software and tools, and its AMPP partner logic 
functions, and any output files from any of the foregoing 
(including device programming or simulation files), and any 
associated documentation or information are expressly subject 
to the terms and conditions of the Altera Program License 
Subscription Agreement, Altera MegaCore Function License 
Agreement, or other applicable license agreement, including, 
without limitation, that your use is for the sole purpose of 
programming logic devices manufactured by Altera and sold by 
Altera or its authorized distributors.  Please refer to the 
applicable agreement for further details.
*/

HEADER
{
	VERSION = 1;
	TIME_UNIT = ns;
	DATA_OFFSET = 0.0;
	DATA_DURATION = 160000.0;
	SIMULATION_TIME = 160000.0;
	GRID_PHASE = 0.0;
	GRID_PERIOD = 10.0;
	GRID_DUTY_CYCLE = 50;
}

SIGNAL("AQMODE")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("AVG")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 3;
	LSB_INDEX = 0;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("AVG[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "AVG";
}

SIGNAL("AVG[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "AVG";
}

SIGNAL("AVG[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "AVG";
}

SIGNAL("CK64FS")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("CK64FSR")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("CK98M304")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("CLKBypass")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("Fso")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("LRCK_Fso")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("nFS")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("ReadCLK")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("SR")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 3;
	LSB_INDEX = 0;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("SR[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "SR";
}

SIGNAL("SR[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "SR";
}

SIGNAL("SR[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "SR";
}

SIGNAL("XclearAll")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("CK8FSR")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

TRANSITION_LIST("AQMODE")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 160000.0;
	}
}

TRANSITION_LIST("AVG[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 160000.0;
	}
}

TRANSITION_LIST("AVG[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 160000.0;
	}
}

TRANSITION_LIST("AVG[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 160000.0;
	}
}

TRANSITION_LIST("CK64FS")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 95.0;
		LEVEL 1 FOR 160.0;
		NODE
		{
			REPEAT = 124;
			LEVEL 0 FOR 630.0;
			LEVEL 1 FOR 10.0;
		}
		LEVEL 0 FOR 640.0;
		LEVEL 1 FOR 160.0;
		NODE
		{
			REPEAT = 248;
			LEVEL 0 FOR 310.0;
			LEVEL 1 FOR 10.0;
		}
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 65.0;
	}
}

TRANSITION_LIST("CK64FSR")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 15.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 160.0;
		NODE
		{
			REPEAT = 124;
			LEVEL 1 FOR 320.0;
			LEVEL 0 FOR 320.0;
		}
		LEVEL 1 FOR 320.0;
		LEVEL 0 FOR 480.0;
		NODE
		{
			REPEAT = 248;
			LEVEL 1 FOR 160.0;
			LEVEL 0 FOR 160.0;
		}
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 65.0;
	}
}

TRANSITION_LIST("CK98M304")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 16000;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
		}
	}
}

TRANSITION_LIST("CLKBypass")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 160000.0;
	}
}

TRANSITION_LIST("Fso")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 15.0;
		LEVEL 1 FOR 70.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 230.0;
		LEVEL 0 FOR 40880.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 38970.0;
		LEVEL 1 FOR 230.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 20400.0;
			LEVEL 1 FOR 80.0;
		}
		LEVEL 0 FOR 18010.0;
		LEVEL 1 FOR 65.0;
	}
}

TRANSITION_LIST("LRCK_Fso")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 5.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 20480.0;
		LEVEL 0 FOR 20480.0;
		LEVEL 1 FOR 20480.0;
		LEVEL 0 FOR 18720.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 10240.0;
			LEVEL 0 FOR 10240.0;
		}
		LEVEL 1 FOR 10240.0;
		LEVEL 0 FOR 7810.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 75.0;
	}
}

TRANSITION_LIST("nFS")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 15.0;
		LEVEL 1 FOR 70.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 230.0;
		LEVEL 0 FOR 40880.0;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 38970.0;
		LEVEL 1 FOR 230.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 20400.0;
			LEVEL 1 FOR 80.0;
		}
		LEVEL 0 FOR 18010.0;
		LEVEL 1 FOR 65.0;
	}
}

TRANSITION_LIST("ReadCLK")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 15.0;
		LEVEL 1 FOR 550.0;
		NODE
		{
			REPEAT = 124;
			LEVEL 0 FOR 320.0;
			LEVEL 1 FOR 320.0;
		}
		LEVEL 0 FOR 330.0;
		LEVEL 1 FOR 310.0;
		NODE
		{
			REPEAT = 247;
			LEVEL 0 FOR 160.0;
			LEVEL 1 FOR 160.0;
		}
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 235.0;
	}
}

TRANSITION_LIST("SR[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 160000.0;
	}
}

TRANSITION_LIST("SR[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 80160.0;
		LEVEL 1 FOR 79735.0;
		LEVEL 0 FOR 105.0;
	}
}

TRANSITION_LIST("SR[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 80160.0;
		LEVEL 0 FOR 79735.0;
		LEVEL 1 FOR 105.0;
	}
}

TRANSITION_LIST("XclearAll")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 75.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 80000.0;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 79520.0;
		LEVEL 1 FOR 85.0;
	}
}

TRANSITION_LIST("CK8FSR")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 95.0;
		LEVEL 1 FOR 160.0;
		NODE
		{
			REPEAT = 15;
			LEVEL 0 FOR 2560.0;
			LEVEL 1 FOR 2560.0;
		}
		LEVEL 0 FOR 2560.0;
		LEVEL 1 FOR 800.0;
		NODE
		{
			REPEAT = 31;
			LEVEL 0 FOR 1280.0;
			LEVEL 1 FOR 1280.0;
		}
		LEVEL 0 FOR 160.0;
		LEVEL 1 FOR 65.0;
	}
}

DISPLAY_LINE
{
	CHANNEL = "CK98M304";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 0;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "SR";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1;
	TREE_LEVEL = 0;
	CHILDREN = 2, 3, 4;
}

DISPLAY_LINE
{
	CHANNEL = "SR[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 2;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "SR[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 3;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "SR[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 4;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "AVG";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 5;
	TREE_LEVEL = 0;
	CHILDREN = 6, 7, 8;
}

DISPLAY_LINE
{
	CHANNEL = "AVG[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 6;
	TREE_LEVEL = 1;
	PARENT = 5;
}

DISPLAY_LINE
{
	CHANNEL = "AVG[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 7;
	TREE_LEVEL = 1;
	PARENT = 5;
}

DISPLAY_LINE
{
	CHANNEL = "AVG[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 8;
	TREE_LEVEL = 1;
	PARENT = 5;
}

DISPLAY_LINE
{
	CHANNEL = "AQMODE";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 9;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "CK64FS";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 10;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "CK64FSR";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 11;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "CLKBypass";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 12;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Fso";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 13;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "LRCK_Fso";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 14;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "nFS";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 15;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "ReadCLK";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 16;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "XclearAll";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 17;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "CK8FSR";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 18;
	TREE_LEVEL = 0;
}

TIME_BAR
{
	TIME = 29800;
	MASTER = FALSE;
}

TIME_BAR
{
	TIME = 10335000;
	MASTER = FALSE;
}

TIME_BAR
{
	TIME = 10975000;
	MASTER = FALSE;
}

TIME_BAR
{
	TIME = 40735000;
	MASTER = FALSE;
}

TIME_BAR
{
	TIME = 40815000;
	MASTER = FALSE;
}

TIME_BAR
{
	TIME = 60635000;
	MASTER = TRUE;
}

TIME_BAR
{
	TIME = 60645000;
	MASTER = FALSE;
}
;
