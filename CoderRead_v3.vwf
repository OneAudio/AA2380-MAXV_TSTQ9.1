/*
WARNING: Do NOT edit the input and output ports in this file in a text
editor if you plan to continue editing the block that represents it in
the Block Editor! File corruption is VERY likely to occur.
*/

/*
Copyright (C) 1991-2010 Altera Corporation
Your use of Altera Corporation's design tools, logic functions 
and other software and tools, and its AMPP partner logic 
functions, and any output files from any of the foregoing 
(including device programming or simulation files), and any 
associated documentation or information are expressly subject 
to the terms and conditions of the Altera Program License 
Subscription Agreement, Altera MegaCore Function License 
Agreement, or other applicable license agreement, including, 
without limitation, that your use is for the sole purpose of 
programming logic devices manufactured by Altera and sold by 
Altera or its authorized distributors.  Please refer to the 
applicable agreement for further details.
*/

HEADER
{
	VERSION = 1;
	TIME_UNIT = ns;
	DATA_OFFSET = 0.0;
	DATA_DURATION = 3000000000.0;
	SIMULATION_TIME = 3000000000.0;
	GRID_PHASE = 0.0;
	GRID_PERIOD = 10.0;
	GRID_DUTY_CYCLE = 50;
}

SIGNAL("BP1s")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("BP_AND")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("BP_out")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("Clk50k")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("Clk400")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("DblPush")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("DIR")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("nPush")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("nTa")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("nTb")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("Pbip")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("Pulses")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("Push_ext1")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("Push_ext2")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("Push_Out")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("Raz_BP")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("ROT_Speed")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

TRANSITION_LIST("BP1s")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 3000000000.0;
	}
}

TRANSITION_LIST("BP_AND")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1250007.147;
		LEVEL 1 FOR 637500000.0;
		LEVEL 0 FOR 2361249992.853;
	}
}

TRANSITION_LIST("BP_out")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 851250013.029;
		LEVEL 1 FOR 17500000.0;
		LEVEL 0 FOR 932500000.0;
		LEVEL 1 FOR 485000000.0;
		LEVEL 0 FOR 713749986.971;
	}
}

TRANSITION_LIST("Clk50k")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 150000;
			LEVEL 0 FOR 10000.0;
			LEVEL 1 FOR 10000.0;
		}
	}
}

TRANSITION_LIST("Clk400")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1200;
			LEVEL 0 FOR 1250000.0;
			LEVEL 1 FOR 1250000.0;
		}
	}
}

TRANSITION_LIST("DblPush")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 236250009.693;
		LEVEL 1 FOR 632500000.0;
		LEVEL 0 FOR 1367500000.0;
		LEVEL 1 FOR 763749990.307;
	}
}

TRANSITION_LIST("DIR")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 3000000000.0;
	}
}

TRANSITION_LIST("nPush")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 146090534.979;
		LEVEL 0 FOR 26748971.193;
		LEVEL 1 FOR 59670781.893;
		LEVEL 0 FOR 22633744.856;
		LEVEL 1 FOR 590534979.423;
		LEVEL 0 FOR 5208333.333;
		LEVEL 1 FOR 12988683.127;
		LEVEL 0 FOR 4693930.041;
		LEVEL 1 FOR 891332304.529;
		LEVEL 0 FOR 39094650.205;
		LEVEL 1 FOR 433127572.017;
		LEVEL 0 FOR 53497942.387;
		LEVEL 1 FOR 714377572.017;
	}
}

TRANSITION_LIST("nTa")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 3000000000.0;
	}
}

TRANSITION_LIST("nTb")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 3000000000.0;
	}
}

TRANSITION_LIST("Pbip")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 30008.259;
		LEVEL 1 FOR 2999969991.741;
	}
}

TRANSITION_LIST("Pulses")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 30007.199;
		LEVEL 1 FOR 2999969992.801;
	}
}

TRANSITION_LIST("Push_ext1")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 3000000000.0;
	}
}

TRANSITION_LIST("Push_ext2")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 3000000000.0;
	}
}

TRANSITION_LIST("Push_Out")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 146250007.167;
		LEVEL 1 FOR 27500000.0;
		LEVEL 0 FOR 60000000.0;
		LEVEL 1 FOR 22500000.0;
		LEVEL 0 FOR 590000000.0;
		LEVEL 1 FOR 5000000.0;
		LEVEL 0 FOR 15000000.0;
		LEVEL 1 FOR 2500000.0;
		LEVEL 0 FOR 892500000.0;
		LEVEL 1 FOR 40000000.0;
		LEVEL 0 FOR 432500000.0;
		LEVEL 1 FOR 52500000.0;
		LEVEL 0 FOR 713749992.833;
	}
}

TRANSITION_LIST("Raz_BP")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 3000000000.0;
	}
}

TRANSITION_LIST("ROT_Speed")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1250007.152;
		LEVEL 1 FOR 162500000.0;
		LEVEL 0 FOR 2836249992.848;
	}
}

DISPLAY_LINE
{
	CHANNEL = "Clk50k";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 0;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Clk400";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 1;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Raz_BP";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 2;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Push_ext1";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 3;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Push_ext2";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 4;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "ROT_Speed";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 5;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "BP_AND";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 6;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "BP_out";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 7;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "DIR";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 8;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "nTa";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 9;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "nTb";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 10;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Pbip";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 11;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Pulses";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 12;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Push_Out";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 13;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "BP1s";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 14;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "nPush";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 15;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "DblPush";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 16;
	TREE_LEVEL = 0;
}

TIME_BAR
{
	TIME = 30275;
	MASTER = TRUE;
}
;
