/*
WARNING: Do NOT edit the input and output ports in this file in a text
editor if you plan to continue editing the block that represents it in
the Block Editor! File corruption is VERY likely to occur.
*/

/*
Copyright (C) 1991-2010 Altera Corporation
Your use of Altera Corporation's design tools, logic functions 
and other software and tools, and its AMPP partner logic 
functions, and any output files from any of the foregoing 
(including device programming or simulation files), and any 
associated documentation or information are expressly subject 
to the terms and conditions of the Altera Program License 
Subscription Agreement, Altera MegaCore Function License 
Agreement, or other applicable license agreement, including, 
without limitation, that your use is for the sole purpose of 
programming logic devices manufactured by Altera and sold by 
Altera or its authorized distributors.  Please refer to the 
applicable agreement for further details.
*/

HEADER
{
	VERSION = 1;
	TIME_UNIT = ns;
	DATA_OFFSET = 0.0;
	DATA_DURATION = 2400000.0;
	SIMULATION_TIME = 2400000.0;
	GRID_PHASE = 0.0;
	GRID_PERIOD = 10.0;
	GRID_DUTY_CYCLE = 50;
}

SIGNAL("clock")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("cpha")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("cpol")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("RXenable")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("RXout")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 24;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("RXout[23]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "RXout";
}

SIGNAL("RXout[22]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "RXout";
}

SIGNAL("RXout[21]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "RXout";
}

SIGNAL("RXout[20]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "RXout";
}

SIGNAL("RXout[19]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "RXout";
}

SIGNAL("RXout[18]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "RXout";
}

SIGNAL("RXout[17]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "RXout";
}

SIGNAL("RXout[16]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "RXout";
}

SIGNAL("RXout[15]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "RXout";
}

SIGNAL("RXout[14]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "RXout";
}

SIGNAL("RXout[13]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "RXout";
}

SIGNAL("RXout[12]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "RXout";
}

SIGNAL("RXout[11]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "RXout";
}

SIGNAL("RXout[10]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "RXout";
}

SIGNAL("RXout[9]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "RXout";
}

SIGNAL("RXout[8]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "RXout";
}

SIGNAL("RXout[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "RXout";
}

SIGNAL("RXout[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "RXout";
}

SIGNAL("RXout[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "RXout";
}

SIGNAL("RXout[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "RXout";
}

SIGNAL("RXout[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "RXout";
}

SIGNAL("RXout[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "RXout";
}

SIGNAL("RXout[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "RXout";
}

SIGNAL("RXout[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "RXout";
}

SIGNAL("RXreset_n")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("SPI_clock")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("SPI_miso")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("SPI_mosi")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("SPI_nCS")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("TX")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 24;
	LSB_INDEX = 0;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("TX[23]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "TX";
}

SIGNAL("TX[22]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "TX";
}

SIGNAL("TX[21]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "TX";
}

SIGNAL("TX[20]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "TX";
}

SIGNAL("TX[19]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "TX";
}

SIGNAL("TX[18]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "TX";
}

SIGNAL("TX[17]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "TX";
}

SIGNAL("TX[16]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "TX";
}

SIGNAL("TX[15]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "TX";
}

SIGNAL("TX[14]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "TX";
}

SIGNAL("TX[13]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "TX";
}

SIGNAL("TX[12]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "TX";
}

SIGNAL("TX[11]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "TX";
}

SIGNAL("TX[10]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "TX";
}

SIGNAL("TX[9]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "TX";
}

SIGNAL("TX[8]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "TX";
}

SIGNAL("TX[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "TX";
}

SIGNAL("TX[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "TX";
}

SIGNAL("TX[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "TX";
}

SIGNAL("TX[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "TX";
}

SIGNAL("TX[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "TX";
}

SIGNAL("TX[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "TX";
}

SIGNAL("TX[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "TX";
}

SIGNAL("TX[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "TX";
}

SIGNAL("TXenable")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("TXreset_n")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

TRANSITION_LIST("clock")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 2400;
			LEVEL 0 FOR 500.0;
			LEVEL 1 FOR 500.0;
		}
	}
}

TRANSITION_LIST("cpha")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 2400000.0;
	}
}

TRANSITION_LIST("cpol")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 2400000.0;
	}
}

TRANSITION_LIST("RXenable")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 310500.0;
		LEVEL 0 FOR 5500.0;
		LEVEL 1 FOR 2084000.0;
	}
}

TRANSITION_LIST("RXout[23]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 1000.0;
		LEVEL 0 FOR 2250000.0;
		LEVEL 1 FOR 100000.0;
		LEVEL 0 FOR 49000.0;
	}
}

TRANSITION_LIST("RXout[22]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 1000.0;
		LEVEL 0 FOR 2150000.0;
		LEVEL 1 FOR 100000.0;
		LEVEL 0 FOR 149000.0;
	}
}

TRANSITION_LIST("RXout[21]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 1000.0;
		LEVEL 0 FOR 2050000.0;
		LEVEL 1 FOR 100000.0;
		LEVEL 0 FOR 249000.0;
	}
}

TRANSITION_LIST("RXout[20]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 1000.0;
		LEVEL 0 FOR 1950000.0;
		LEVEL 1 FOR 100000.0;
		LEVEL 0 FOR 349000.0;
	}
}

TRANSITION_LIST("RXout[19]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 1000.0;
		LEVEL 0 FOR 1850000.0;
		LEVEL 1 FOR 100000.0;
		LEVEL 0 FOR 449000.0;
	}
}

TRANSITION_LIST("RXout[18]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 1000.0;
		LEVEL 0 FOR 1750000.0;
		LEVEL 1 FOR 100000.0;
		LEVEL 0 FOR 549000.0;
	}
}

TRANSITION_LIST("RXout[17]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 1000.0;
		LEVEL 0 FOR 1650000.0;
		LEVEL 1 FOR 100000.0;
		LEVEL 0 FOR 649000.0;
	}
}

TRANSITION_LIST("RXout[16]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 1000.0;
		LEVEL 0 FOR 1550000.0;
		LEVEL 1 FOR 100000.0;
		LEVEL 0 FOR 749000.0;
	}
}

TRANSITION_LIST("RXout[15]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 1000.0;
		LEVEL 0 FOR 1450000.0;
		LEVEL 1 FOR 100000.0;
		LEVEL 0 FOR 849000.0;
	}
}

TRANSITION_LIST("RXout[14]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 1000.0;
		LEVEL 0 FOR 1350000.0;
		LEVEL 1 FOR 100000.0;
		LEVEL 0 FOR 949000.0;
	}
}

TRANSITION_LIST("RXout[13]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 1000.0;
		LEVEL 0 FOR 1250000.0;
		LEVEL 1 FOR 100000.0;
		LEVEL 0 FOR 1049000.0;
	}
}

TRANSITION_LIST("RXout[12]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 1000.0;
		LEVEL 0 FOR 1150000.0;
		LEVEL 1 FOR 100000.0;
		LEVEL 0 FOR 1149000.0;
	}
}

TRANSITION_LIST("RXout[11]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 1000.0;
		LEVEL 0 FOR 1050000.0;
		LEVEL 1 FOR 100000.0;
		LEVEL 0 FOR 1249000.0;
	}
}

TRANSITION_LIST("RXout[10]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 1000.0;
		LEVEL 0 FOR 950000.0;
		LEVEL 1 FOR 100000.0;
		LEVEL 0 FOR 1349000.0;
	}
}

TRANSITION_LIST("RXout[9]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 1000.0;
		LEVEL 0 FOR 850000.0;
		LEVEL 1 FOR 100000.0;
		LEVEL 0 FOR 1449000.0;
	}
}

TRANSITION_LIST("RXout[8]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 1000.0;
		LEVEL 0 FOR 750000.0;
		LEVEL 1 FOR 100000.0;
		LEVEL 0 FOR 1549000.0;
	}
}

TRANSITION_LIST("RXout[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 1000.0;
		LEVEL 0 FOR 650000.0;
		LEVEL 1 FOR 100000.0;
		LEVEL 0 FOR 1649000.0;
	}
}

TRANSITION_LIST("RXout[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 1000.0;
		LEVEL 0 FOR 550000.0;
		LEVEL 1 FOR 100000.0;
		LEVEL 0 FOR 1749000.0;
	}
}

TRANSITION_LIST("RXout[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 1000.0;
		LEVEL 0 FOR 450000.0;
		LEVEL 1 FOR 100000.0;
		LEVEL 0 FOR 1849000.0;
	}
}

TRANSITION_LIST("RXout[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 1000.0;
		LEVEL 0 FOR 2399000.0;
	}
}

TRANSITION_LIST("RXout[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 1000.0;
		LEVEL 0 FOR 250000.0;
		LEVEL 1 FOR 100000.0;
		LEVEL 0 FOR 2049000.0;
	}
}

TRANSITION_LIST("RXout[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 1000.0;
		LEVEL 0 FOR 150000.0;
		LEVEL 1 FOR 100000.0;
		LEVEL 0 FOR 2149000.0;
	}
}

TRANSITION_LIST("RXout[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 1000.0;
		LEVEL 0 FOR 50000.0;
		LEVEL 1 FOR 100000.0;
		LEVEL 0 FOR 200000.0;
		LEVEL 1 FOR 100000.0;
		LEVEL 0 FOR 1949000.0;
	}
}

TRANSITION_LIST("RXout[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 2400000.0;
	}
}

TRANSITION_LIST("RXreset_n")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 2400000.0;
	}
}

TRANSITION_LIST("SPI_clock")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 3000.0;
		NODE
		{
			REPEAT = 22;
			NODE
			{
				REPEAT = 23;
				LEVEL 1 FOR 1000.0;
				LEVEL 0 FOR 1000.0;
			}
			LEVEL 1 FOR 1000.0;
			LEVEL 0 FOR 53000.0;
		}
		NODE
		{
			REPEAT = 23;
			LEVEL 1 FOR 1000.0;
			LEVEL 0 FOR 1000.0;
		}
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 53000.0;
		NODE
		{
			REPEAT = 23;
			LEVEL 1 FOR 1000.0;
			LEVEL 0 FOR 1000.0;
		}
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 50000.0;
	}
}

TRANSITION_LIST("SPI_miso")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 2000.0;
		NODE
		{
			REPEAT = 23;
			LEVEL X FOR 49000.0;
			LEVEL Z FOR 51000.0;
		}
		LEVEL X FOR 49000.0;
		LEVEL Z FOR 49000.0;
	}
}

TRANSITION_LIST("SPI_mosi")
{
	NODE
	{
		REPEAT = 1;
		LEVEL Z FOR 3000.0;
		LEVEL 0 FOR 46000.0;
		LEVEL 1 FOR 2000.0;
		LEVEL Z FOR 52000.0;
		LEVEL 0 FOR 44000.0;
		LEVEL 1 FOR 2000.0;
		LEVEL 0 FOR 2000.0;
		LEVEL Z FOR 52000.0;
		LEVEL 0 FOR 42000.0;
		LEVEL 1 FOR 2000.0;
		LEVEL 0 FOR 4000.0;
		LEVEL Z FOR 52000.0;
		LEVEL 0 FOR 46000.0;
		LEVEL 1 FOR 2000.0;
		LEVEL Z FOR 52000.0;
		LEVEL 0 FOR 38000.0;
		LEVEL 1 FOR 2000.0;
		LEVEL 0 FOR 8000.0;
		LEVEL Z FOR 52000.0;
		LEVEL 0 FOR 36000.0;
		LEVEL 1 FOR 2000.0;
		LEVEL 0 FOR 10000.0;
		LEVEL Z FOR 52000.0;
		LEVEL 0 FOR 34000.0;
		LEVEL 1 FOR 2000.0;
		LEVEL 0 FOR 12000.0;
		LEVEL Z FOR 52000.0;
		LEVEL 0 FOR 32000.0;
		LEVEL 1 FOR 2000.0;
		LEVEL 0 FOR 14000.0;
		LEVEL Z FOR 52000.0;
		LEVEL 0 FOR 30000.0;
		LEVEL 1 FOR 2000.0;
		LEVEL 0 FOR 16000.0;
		LEVEL Z FOR 52000.0;
		LEVEL 0 FOR 28000.0;
		LEVEL 1 FOR 2000.0;
		LEVEL 0 FOR 18000.0;
		LEVEL Z FOR 52000.0;
		LEVEL 0 FOR 26000.0;
		LEVEL 1 FOR 2000.0;
		LEVEL 0 FOR 20000.0;
		LEVEL Z FOR 52000.0;
		LEVEL 0 FOR 24000.0;
		LEVEL 1 FOR 2000.0;
		LEVEL 0 FOR 22000.0;
		LEVEL Z FOR 52000.0;
		LEVEL 0 FOR 22000.0;
		LEVEL 1 FOR 2000.0;
		LEVEL 0 FOR 24000.0;
		LEVEL Z FOR 52000.0;
		LEVEL 0 FOR 20000.0;
		LEVEL 1 FOR 2000.0;
		LEVEL 0 FOR 26000.0;
		LEVEL Z FOR 52000.0;
		LEVEL 0 FOR 18000.0;
		LEVEL 1 FOR 2000.0;
		LEVEL 0 FOR 28000.0;
		LEVEL Z FOR 52000.0;
		LEVEL 0 FOR 16000.0;
		LEVEL 1 FOR 2000.0;
		LEVEL 0 FOR 30000.0;
		LEVEL Z FOR 52000.0;
		LEVEL 0 FOR 14000.0;
		LEVEL 1 FOR 2000.0;
		LEVEL 0 FOR 32000.0;
		LEVEL Z FOR 52000.0;
		LEVEL 0 FOR 12000.0;
		LEVEL 1 FOR 2000.0;
		LEVEL 0 FOR 34000.0;
		LEVEL Z FOR 52000.0;
		LEVEL 0 FOR 10000.0;
		LEVEL 1 FOR 2000.0;
		LEVEL 0 FOR 36000.0;
		LEVEL Z FOR 52000.0;
		LEVEL 0 FOR 8000.0;
		LEVEL 1 FOR 2000.0;
		LEVEL 0 FOR 38000.0;
		LEVEL Z FOR 52000.0;
		LEVEL 0 FOR 6000.0;
		LEVEL 1 FOR 2000.0;
		LEVEL 0 FOR 40000.0;
		LEVEL Z FOR 52000.0;
		LEVEL 0 FOR 4000.0;
		LEVEL 1 FOR 2000.0;
		LEVEL 0 FOR 42000.0;
		LEVEL Z FOR 52000.0;
		LEVEL 0 FOR 2000.0;
		LEVEL 1 FOR 2000.0;
		LEVEL 0 FOR 44000.0;
		LEVEL Z FOR 52000.0;
		LEVEL 1 FOR 2000.0;
		LEVEL 0 FOR 46000.0;
		LEVEL Z FOR 49000.0;
	}
}

TRANSITION_LIST("SPI_nCS")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
		LEVEL 1 FOR 1000.0;
		NODE
		{
			REPEAT = 23;
			LEVEL 0 FOR 49000.0;
			LEVEL 1 FOR 51000.0;
		}
		LEVEL 0 FOR 49000.0;
		LEVEL 1 FOR 49000.0;
	}
}

TRANSITION_LIST("TX[23]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2300000.0;
		LEVEL 1 FOR 100000.0;
	}
}

TRANSITION_LIST("TX[22]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2200000.0;
		LEVEL 1 FOR 100000.0;
		LEVEL 0 FOR 100000.0;
	}
}

TRANSITION_LIST("TX[21]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2100000.0;
		LEVEL 1 FOR 100000.0;
		LEVEL 0 FOR 200000.0;
	}
}

TRANSITION_LIST("TX[20]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2000000.0;
		LEVEL 1 FOR 100000.0;
		LEVEL 0 FOR 300000.0;
	}
}

TRANSITION_LIST("TX[19]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1900000.0;
		LEVEL 1 FOR 100000.0;
		LEVEL 0 FOR 400000.0;
	}
}

TRANSITION_LIST("TX[18]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1800000.0;
		LEVEL 1 FOR 100000.0;
		LEVEL 0 FOR 500000.0;
	}
}

TRANSITION_LIST("TX[17]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1700000.0;
		LEVEL 1 FOR 100000.0;
		LEVEL 0 FOR 600000.0;
	}
}

TRANSITION_LIST("TX[16]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1600000.0;
		LEVEL 1 FOR 100000.0;
		LEVEL 0 FOR 700000.0;
	}
}

TRANSITION_LIST("TX[15]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1500000.0;
		LEVEL 1 FOR 100000.0;
		LEVEL 0 FOR 800000.0;
	}
}

TRANSITION_LIST("TX[14]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1400000.0;
		LEVEL 1 FOR 100000.0;
		LEVEL 0 FOR 900000.0;
	}
}

TRANSITION_LIST("TX[13]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1300000.0;
		LEVEL 1 FOR 100000.0;
		LEVEL 0 FOR 1000000.0;
	}
}

TRANSITION_LIST("TX[12]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1200000.0;
		LEVEL 1 FOR 100000.0;
		LEVEL 0 FOR 1100000.0;
	}
}

TRANSITION_LIST("TX[11]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1100000.0;
		LEVEL 1 FOR 100000.0;
		LEVEL 0 FOR 1200000.0;
	}
}

TRANSITION_LIST("TX[10]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000000.0;
		LEVEL 1 FOR 100000.0;
		LEVEL 0 FOR 1300000.0;
	}
}

TRANSITION_LIST("TX[9]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 900000.0;
		LEVEL 1 FOR 100000.0;
		LEVEL 0 FOR 1400000.0;
	}
}

TRANSITION_LIST("TX[8]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 800000.0;
		LEVEL 1 FOR 100000.0;
		LEVEL 0 FOR 1500000.0;
	}
}

TRANSITION_LIST("TX[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 700000.0;
		LEVEL 1 FOR 100000.0;
		LEVEL 0 FOR 1600000.0;
	}
}

TRANSITION_LIST("TX[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 600000.0;
		LEVEL 1 FOR 100000.0;
		LEVEL 0 FOR 1700000.0;
	}
}

TRANSITION_LIST("TX[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 500000.0;
		LEVEL 1 FOR 100000.0;
		LEVEL 0 FOR 1800000.0;
	}
}

TRANSITION_LIST("TX[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 400000.0;
		LEVEL 1 FOR 100000.0;
		LEVEL 0 FOR 1900000.0;
	}
}

TRANSITION_LIST("TX[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2400000.0;
	}
}

TRANSITION_LIST("TX[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 200000.0;
		LEVEL 1 FOR 100000.0;
		LEVEL 0 FOR 2100000.0;
	}
}

TRANSITION_LIST("TX[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 100000.0;
		LEVEL 1 FOR 100000.0;
		LEVEL 0 FOR 2200000.0;
	}
}

TRANSITION_LIST("TX[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 100000.0;
		LEVEL 0 FOR 200000.0;
		LEVEL 1 FOR 100000.0;
		LEVEL 0 FOR 2000000.0;
	}
}

TRANSITION_LIST("TXenable")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 500.0;
		NODE
		{
			REPEAT = 23;
			LEVEL 1 FOR 1000.0;
			LEVEL 0 FOR 99000.0;
		}
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 98500.0;
	}
}

TRANSITION_LIST("TXreset_n")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 2400000.0;
	}
}

DISPLAY_LINE
{
	CHANNEL = "clock";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 0;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "cpha";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 1;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "cpol";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 2;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "TXreset_n";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 3;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "RXenable";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 4;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "RXreset_n";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 5;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "TX";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 6;
	TREE_LEVEL = 0;
	CHILDREN = 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30;
}

DISPLAY_LINE
{
	CHANNEL = "TX[23]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 7;
	TREE_LEVEL = 1;
	PARENT = 6;
}

DISPLAY_LINE
{
	CHANNEL = "TX[22]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 8;
	TREE_LEVEL = 1;
	PARENT = 6;
}

DISPLAY_LINE
{
	CHANNEL = "TX[21]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 9;
	TREE_LEVEL = 1;
	PARENT = 6;
}

DISPLAY_LINE
{
	CHANNEL = "TX[20]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 10;
	TREE_LEVEL = 1;
	PARENT = 6;
}

DISPLAY_LINE
{
	CHANNEL = "TX[19]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 11;
	TREE_LEVEL = 1;
	PARENT = 6;
}

DISPLAY_LINE
{
	CHANNEL = "TX[18]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 12;
	TREE_LEVEL = 1;
	PARENT = 6;
}

DISPLAY_LINE
{
	CHANNEL = "TX[17]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 13;
	TREE_LEVEL = 1;
	PARENT = 6;
}

DISPLAY_LINE
{
	CHANNEL = "TX[16]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 14;
	TREE_LEVEL = 1;
	PARENT = 6;
}

DISPLAY_LINE
{
	CHANNEL = "TX[15]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 15;
	TREE_LEVEL = 1;
	PARENT = 6;
}

DISPLAY_LINE
{
	CHANNEL = "TX[14]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 16;
	TREE_LEVEL = 1;
	PARENT = 6;
}

DISPLAY_LINE
{
	CHANNEL = "TX[13]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 17;
	TREE_LEVEL = 1;
	PARENT = 6;
}

DISPLAY_LINE
{
	CHANNEL = "TX[12]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 18;
	TREE_LEVEL = 1;
	PARENT = 6;
}

DISPLAY_LINE
{
	CHANNEL = "TX[11]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 19;
	TREE_LEVEL = 1;
	PARENT = 6;
}

DISPLAY_LINE
{
	CHANNEL = "TX[10]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 20;
	TREE_LEVEL = 1;
	PARENT = 6;
}

DISPLAY_LINE
{
	CHANNEL = "TX[9]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 21;
	TREE_LEVEL = 1;
	PARENT = 6;
}

DISPLAY_LINE
{
	CHANNEL = "TX[8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 22;
	TREE_LEVEL = 1;
	PARENT = 6;
}

DISPLAY_LINE
{
	CHANNEL = "TX[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 23;
	TREE_LEVEL = 1;
	PARENT = 6;
}

DISPLAY_LINE
{
	CHANNEL = "TX[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 24;
	TREE_LEVEL = 1;
	PARENT = 6;
}

DISPLAY_LINE
{
	CHANNEL = "TX[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 25;
	TREE_LEVEL = 1;
	PARENT = 6;
}

DISPLAY_LINE
{
	CHANNEL = "TX[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 26;
	TREE_LEVEL = 1;
	PARENT = 6;
}

DISPLAY_LINE
{
	CHANNEL = "TX[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 27;
	TREE_LEVEL = 1;
	PARENT = 6;
}

DISPLAY_LINE
{
	CHANNEL = "TX[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 28;
	TREE_LEVEL = 1;
	PARENT = 6;
}

DISPLAY_LINE
{
	CHANNEL = "TX[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 29;
	TREE_LEVEL = 1;
	PARENT = 6;
}

DISPLAY_LINE
{
	CHANNEL = "TX[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 30;
	TREE_LEVEL = 1;
	PARENT = 6;
}

DISPLAY_LINE
{
	CHANNEL = "RXout";
	EXPAND_STATUS = EXPANDED;
	RADIX = Unsigned;
	TREE_INDEX = 31;
	TREE_LEVEL = 0;
	CHILDREN = 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55;
}

DISPLAY_LINE
{
	CHANNEL = "RXout[23]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 32;
	TREE_LEVEL = 1;
	PARENT = 31;
}

DISPLAY_LINE
{
	CHANNEL = "RXout[22]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 33;
	TREE_LEVEL = 1;
	PARENT = 31;
}

DISPLAY_LINE
{
	CHANNEL = "RXout[21]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 34;
	TREE_LEVEL = 1;
	PARENT = 31;
}

DISPLAY_LINE
{
	CHANNEL = "RXout[20]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 35;
	TREE_LEVEL = 1;
	PARENT = 31;
}

DISPLAY_LINE
{
	CHANNEL = "RXout[19]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 36;
	TREE_LEVEL = 1;
	PARENT = 31;
}

DISPLAY_LINE
{
	CHANNEL = "RXout[18]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 37;
	TREE_LEVEL = 1;
	PARENT = 31;
}

DISPLAY_LINE
{
	CHANNEL = "RXout[17]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 38;
	TREE_LEVEL = 1;
	PARENT = 31;
}

DISPLAY_LINE
{
	CHANNEL = "RXout[16]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 39;
	TREE_LEVEL = 1;
	PARENT = 31;
}

DISPLAY_LINE
{
	CHANNEL = "RXout[15]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 40;
	TREE_LEVEL = 1;
	PARENT = 31;
}

DISPLAY_LINE
{
	CHANNEL = "RXout[14]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 41;
	TREE_LEVEL = 1;
	PARENT = 31;
}

DISPLAY_LINE
{
	CHANNEL = "RXout[13]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 42;
	TREE_LEVEL = 1;
	PARENT = 31;
}

DISPLAY_LINE
{
	CHANNEL = "RXout[12]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 43;
	TREE_LEVEL = 1;
	PARENT = 31;
}

DISPLAY_LINE
{
	CHANNEL = "RXout[11]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 44;
	TREE_LEVEL = 1;
	PARENT = 31;
}

DISPLAY_LINE
{
	CHANNEL = "RXout[10]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 45;
	TREE_LEVEL = 1;
	PARENT = 31;
}

DISPLAY_LINE
{
	CHANNEL = "RXout[9]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 46;
	TREE_LEVEL = 1;
	PARENT = 31;
}

DISPLAY_LINE
{
	CHANNEL = "RXout[8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 47;
	TREE_LEVEL = 1;
	PARENT = 31;
}

DISPLAY_LINE
{
	CHANNEL = "RXout[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 48;
	TREE_LEVEL = 1;
	PARENT = 31;
}

DISPLAY_LINE
{
	CHANNEL = "RXout[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 49;
	TREE_LEVEL = 1;
	PARENT = 31;
}

DISPLAY_LINE
{
	CHANNEL = "RXout[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 50;
	TREE_LEVEL = 1;
	PARENT = 31;
}

DISPLAY_LINE
{
	CHANNEL = "RXout[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 51;
	TREE_LEVEL = 1;
	PARENT = 31;
}

DISPLAY_LINE
{
	CHANNEL = "RXout[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 52;
	TREE_LEVEL = 1;
	PARENT = 31;
}

DISPLAY_LINE
{
	CHANNEL = "RXout[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 53;
	TREE_LEVEL = 1;
	PARENT = 31;
}

DISPLAY_LINE
{
	CHANNEL = "RXout[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 54;
	TREE_LEVEL = 1;
	PARENT = 31;
}

DISPLAY_LINE
{
	CHANNEL = "RXout[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 55;
	TREE_LEVEL = 1;
	PARENT = 31;
}

DISPLAY_LINE
{
	CHANNEL = "SPI_clock";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 56;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "SPI_miso";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 57;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "SPI_mosi";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 58;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "SPI_nCS";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 59;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "TXenable";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 60;
	TREE_LEVEL = 0;
}

TIME_BAR
{
	TIME = 29800;
	MASTER = TRUE;
}
;
