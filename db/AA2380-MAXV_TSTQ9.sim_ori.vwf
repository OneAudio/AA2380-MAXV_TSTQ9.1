/*
WARNING: Do NOT edit the input and output ports in this file in a text
editor if you plan to continue editing the block that represents it in
the Block Editor! File corruption is VERY likely to occur.
*/

/*
Copyright (C) 1991-2010 Altera Corporation
Your use of Altera Corporation's design tools, logic functions 
and other software and tools, and its AMPP partner logic 
functions, and any output files from any of the foregoing 
(including device programming or simulation files), and any 
associated documentation or information are expressly subject 
to the terms and conditions of the Altera Program License 
Subscription Agreement, Altera MegaCore Function License 
Agreement, or other applicable license agreement, including, 
without limitation, that your use is for the sole purpose of 
programming logic devices manufactured by Altera and sold by 
Altera or its authorized distributors.  Please refer to the 
applicable agreement for further details.
*/

HEADER
{
	VERSION = 1;
	TIME_UNIT = ns;
	DATA_OFFSET = 0.0;
	DATA_DURATION = 10000.0;
	SIMULATION_TIME = 10000.0;
	GRID_PHASE = 0.0;
	GRID_PERIOD = 10.0;
	GRID_DUTY_CYCLE = 50;
}

SIGNAL("BUSYL")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("CLEAR")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("CLKFS")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("MCLK")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("nCNVL")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("SCKL")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("SDOL")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("BUSYR")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("DINL")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 24;
	LSB_INDEX = 0;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("DINL[23]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "DINL";
}

SIGNAL("DINL[22]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "DINL";
}

SIGNAL("DINL[21]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "DINL";
}

SIGNAL("DINL[20]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "DINL";
}

SIGNAL("DINL[19]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "DINL";
}

SIGNAL("DINL[18]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "DINL";
}

SIGNAL("DINL[17]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "DINL";
}

SIGNAL("DINL[16]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "DINL";
}

SIGNAL("DINL[15]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "DINL";
}

SIGNAL("DINL[14]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "DINL";
}

SIGNAL("DINL[13]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "DINL";
}

SIGNAL("DINL[12]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "DINL";
}

SIGNAL("DINL[11]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "DINL";
}

SIGNAL("DINL[10]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "DINL";
}

SIGNAL("DINL[9]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "DINL";
}

SIGNAL("DINL[8]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "DINL";
}

SIGNAL("DINL[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "DINL";
}

SIGNAL("DINL[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "DINL";
}

SIGNAL("DINL[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "DINL";
}

SIGNAL("DINL[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "DINL";
}

SIGNAL("DINL[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "DINL";
}

SIGNAL("DINL[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "DINL";
}

SIGNAL("DINL[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "DINL";
}

SIGNAL("DINL[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "DINL";
}

SIGNAL("DINR")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 24;
	LSB_INDEX = 0;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("DINR[23]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "DINR";
}

SIGNAL("DINR[22]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "DINR";
}

SIGNAL("DINR[21]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "DINR";
}

SIGNAL("DINR[20]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "DINR";
}

SIGNAL("DINR[19]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "DINR";
}

SIGNAL("DINR[18]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "DINR";
}

SIGNAL("DINR[17]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "DINR";
}

SIGNAL("DINR[16]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "DINR";
}

SIGNAL("DINR[15]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "DINR";
}

SIGNAL("DINR[14]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "DINR";
}

SIGNAL("DINR[13]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "DINR";
}

SIGNAL("DINR[12]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "DINR";
}

SIGNAL("DINR[11]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "DINR";
}

SIGNAL("DINR[10]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "DINR";
}

SIGNAL("DINR[9]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "DINR";
}

SIGNAL("DINR[8]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "DINR";
}

SIGNAL("DINR[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "DINR";
}

SIGNAL("DINR[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "DINR";
}

SIGNAL("DINR[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "DINR";
}

SIGNAL("DINR[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "DINR";
}

SIGNAL("DINR[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "DINR";
}

SIGNAL("DINR[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "DINR";
}

SIGNAL("DINR[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "DINR";
}

SIGNAL("DINR[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "DINR";
}

SIGNAL("DOUTL")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 24;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("DOUTL[23]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DOUTL";
}

SIGNAL("DOUTL[22]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DOUTL";
}

SIGNAL("DOUTL[21]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DOUTL";
}

SIGNAL("DOUTL[20]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DOUTL";
}

SIGNAL("DOUTL[19]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DOUTL";
}

SIGNAL("DOUTL[18]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DOUTL";
}

SIGNAL("DOUTL[17]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DOUTL";
}

SIGNAL("DOUTL[16]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DOUTL";
}

SIGNAL("DOUTL[15]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DOUTL";
}

SIGNAL("DOUTL[14]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DOUTL";
}

SIGNAL("DOUTL[13]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DOUTL";
}

SIGNAL("DOUTL[12]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DOUTL";
}

SIGNAL("DOUTL[11]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DOUTL";
}

SIGNAL("DOUTL[10]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DOUTL";
}

SIGNAL("DOUTL[9]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DOUTL";
}

SIGNAL("DOUTL[8]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DOUTL";
}

SIGNAL("DOUTL[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DOUTL";
}

SIGNAL("DOUTL[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DOUTL";
}

SIGNAL("DOUTL[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DOUTL";
}

SIGNAL("DOUTL[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DOUTL";
}

SIGNAL("DOUTL[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DOUTL";
}

SIGNAL("DOUTL[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DOUTL";
}

SIGNAL("DOUTL[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DOUTL";
}

SIGNAL("DOUTL[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DOUTL";
}

SIGNAL("DOUTR")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 24;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("DOUTR[23]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DOUTR";
}

SIGNAL("DOUTR[22]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DOUTR";
}

SIGNAL("DOUTR[21]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DOUTR";
}

SIGNAL("DOUTR[20]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DOUTR";
}

SIGNAL("DOUTR[19]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DOUTR";
}

SIGNAL("DOUTR[18]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DOUTR";
}

SIGNAL("DOUTR[17]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DOUTR";
}

SIGNAL("DOUTR[16]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DOUTR";
}

SIGNAL("DOUTR[15]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DOUTR";
}

SIGNAL("DOUTR[14]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DOUTR";
}

SIGNAL("DOUTR[13]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DOUTR";
}

SIGNAL("DOUTR[12]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DOUTR";
}

SIGNAL("DOUTR[11]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DOUTR";
}

SIGNAL("DOUTR[10]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DOUTR";
}

SIGNAL("DOUTR[9]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DOUTR";
}

SIGNAL("DOUTR[8]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DOUTR";
}

SIGNAL("DOUTR[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DOUTR";
}

SIGNAL("DOUTR[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DOUTR";
}

SIGNAL("DOUTR[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DOUTR";
}

SIGNAL("DOUTR[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DOUTR";
}

SIGNAL("DOUTR[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DOUTR";
}

SIGNAL("DOUTR[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DOUTR";
}

SIGNAL("DOUTR[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DOUTR";
}

SIGNAL("DOUTR[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DOUTR";
}

SIGNAL("nCNVR")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("SCKR")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("SDOR")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

TRANSITION_LIST("BUSYL")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 651.0;
		LEVEL 1 FOR 364.0;
		LEVEL 0 FOR 287.0;
		LEVEL 1 FOR 363.0;
		LEVEL 0 FOR 288.0;
		LEVEL 1 FOR 362.0;
		LEVEL 0 FOR 289.0;
		LEVEL 1 FOR 361.0;
		LEVEL 0 FOR 290.0;
		LEVEL 1 FOR 370.0;
		LEVEL 0 FOR 281.0;
		LEVEL 1 FOR 369.0;
		LEVEL 0 FOR 282.0;
		LEVEL 1 FOR 368.0;
		LEVEL 0 FOR 283.0;
		LEVEL 1 FOR 367.0;
		LEVEL 0 FOR 284.0;
		LEVEL 1 FOR 366.0;
		LEVEL 0 FOR 285.0;
		LEVEL 1 FOR 365.0;
		LEVEL 0 FOR 286.0;
		LEVEL 1 FOR 364.0;
		LEVEL 0 FOR 287.0;
		LEVEL 1 FOR 363.0;
		LEVEL 0 FOR 288.0;
		LEVEL 1 FOR 362.0;
		LEVEL 0 FOR 289.0;
		LEVEL 1 FOR 361.0;
		LEVEL 0 FOR 290.0;
		LEVEL 1 FOR 235.0;
	}
}

TRANSITION_LIST("CLEAR")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 8625.0;
		LEVEL 1 FOR 1370.0;
		LEVEL 0 FOR 5.0;
	}
}

TRANSITION_LIST("CLKFS")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 325.5;
		LEVEL 0 FOR 325.5;
		NODE
		{
			REPEAT = 14;
			LEVEL 1 FOR 325.5;
			LEVEL 0 FOR 325.5;
		}
		LEVEL 1 FOR 235.0;
	}
}

TRANSITION_LIST("MCLK")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1000;
			LEVEL 0 FOR 5.0;
			LEVEL 1 FOR 5.0;
		}
	}
}

TRANSITION_LIST("nCNVL")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 15.0;
		LEVEL 1 FOR 636.0;
		LEVEL 0 FOR 14.0;
		LEVEL 1 FOR 637.0;
		LEVEL 0 FOR 13.0;
		LEVEL 1 FOR 638.0;
		LEVEL 0 FOR 12.0;
		LEVEL 1 FOR 639.0;
		LEVEL 0 FOR 11.0;
		LEVEL 1 FOR 640.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 641.0;
		LEVEL 0 FOR 19.0;
		LEVEL 1 FOR 632.0;
		LEVEL 0 FOR 18.0;
		LEVEL 1 FOR 633.0;
		LEVEL 0 FOR 17.0;
		LEVEL 1 FOR 634.0;
		LEVEL 0 FOR 16.0;
		LEVEL 1 FOR 635.0;
		LEVEL 0 FOR 15.0;
		LEVEL 1 FOR 636.0;
		LEVEL 0 FOR 14.0;
		LEVEL 1 FOR 637.0;
		LEVEL 0 FOR 13.0;
		LEVEL 1 FOR 638.0;
		LEVEL 0 FOR 12.0;
		LEVEL 1 FOR 639.0;
		LEVEL 0 FOR 11.0;
		LEVEL 1 FOR 640.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 225.0;
	}
}

TRANSITION_LIST("SCKL")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 25.0;
		NODE
		{
			REPEAT = 23;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
		}
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 785.0;
		NODE
		{
			REPEAT = 2;
			NODE
			{
				REPEAT = 23;
				LEVEL 1 FOR 5.0;
				LEVEL 0 FOR 5.0;
			}
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 415.0;
		}
		NODE
		{
			REPEAT = 23;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
		}
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 415.0;
		NODE
		{
			REPEAT = 23;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
		}
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 425.0;
		NODE
		{
			REPEAT = 8;
			NODE
			{
				REPEAT = 23;
				LEVEL 1 FOR 5.0;
				LEVEL 0 FOR 5.0;
			}
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 415.0;
		}
		NODE
		{
			REPEAT = 23;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
		}
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 415.0;
		NODE
		{
			REPEAT = 23;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
		}
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 260.0;
	}
}

TRANSITION_LIST("SDOL")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 35.0;
		LEVEL 1 FOR 60.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 790.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 30.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 30.0;
			LEVEL 1 FOR 10.0;
		}
		LEVEL 0 FOR 27.0;
		LEVEL 1 FOR 413.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 20.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
		}
		LEVEL 0 FOR 28.0;
		LEVEL 1 FOR 392.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 420.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
		}
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 50.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
		}
		LEVEL 0 FOR 430.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 30.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 480.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
		}
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 72.0;
		LEVEL 1 FOR 398.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 23.0;
		LEVEL 1 FOR 417.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 420.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 10.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 40.0;
		}
		LEVEL 0 FOR 35.0;
		LEVEL 1 FOR 435.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 36.0;
		LEVEL 1 FOR 434.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 430.0;
		LEVEL 1 FOR 30.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 40.0;
		}
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 460.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 450.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 50.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 20.0;
		}
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 275.0;
	}
}

TRANSITION_LIST("BUSYR")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 651.0;
		LEVEL 1 FOR 364.0;
		LEVEL 0 FOR 287.0;
		LEVEL 1 FOR 363.0;
		LEVEL 0 FOR 288.0;
		LEVEL 1 FOR 362.0;
		LEVEL 0 FOR 289.0;
		LEVEL 1 FOR 361.0;
		LEVEL 0 FOR 290.0;
		LEVEL 1 FOR 370.0;
		LEVEL 0 FOR 281.0;
		LEVEL 1 FOR 369.0;
		LEVEL 0 FOR 282.0;
		LEVEL 1 FOR 368.0;
		LEVEL 0 FOR 283.0;
		LEVEL 1 FOR 367.0;
		LEVEL 0 FOR 284.0;
		LEVEL 1 FOR 366.0;
		LEVEL 0 FOR 285.0;
		LEVEL 1 FOR 365.0;
		LEVEL 0 FOR 286.0;
		LEVEL 1 FOR 364.0;
		LEVEL 0 FOR 287.0;
		LEVEL 1 FOR 363.0;
		LEVEL 0 FOR 288.0;
		LEVEL 1 FOR 362.0;
		LEVEL 0 FOR 289.0;
		LEVEL 1 FOR 361.0;
		LEVEL 0 FOR 290.0;
		LEVEL 1 FOR 235.0;
	}
}

TRANSITION_LIST("DINL[23]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1302.0;
		LEVEL 1 FOR 1302.0;
		LEVEL 0 FOR 1953.0;
		LEVEL 1 FOR 1302.0;
		LEVEL 0 FOR 651.0;
		LEVEL 1 FOR 1302.0;
		LEVEL 0 FOR 2188.0;
	}
}

TRANSITION_LIST("DINL[22]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 651.0;
		LEVEL 1 FOR 1302.0;
		LEVEL 0 FOR 651.0;
		LEVEL 1 FOR 1302.0;
		LEVEL 0 FOR 1302.0;
		LEVEL 1 FOR 3906.0;
		LEVEL 0 FOR 886.0;
	}
}

TRANSITION_LIST("DINL[21]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 651.0;
		LEVEL 0 FOR 651.0;
		LEVEL 1 FOR 1302.0;
		LEVEL 0 FOR 1953.0;
		LEVEL 1 FOR 1302.0;
		LEVEL 0 FOR 651.0;
		LEVEL 1 FOR 3490.0;
	}
}

TRANSITION_LIST("DINL[20]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 651.0;
		LEVEL 0 FOR 1953.0;
		LEVEL 1 FOR 651.0;
		LEVEL 0 FOR 2604.0;
		LEVEL 1 FOR 3255.0;
		LEVEL 0 FOR 886.0;
	}
}

TRANSITION_LIST("DINL[19]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 2604.0;
		LEVEL 0 FOR 651.0;
		LEVEL 1 FOR 651.0;
		LEVEL 0 FOR 651.0;
		LEVEL 1 FOR 651.0;
		LEVEL 0 FOR 651.0;
		LEVEL 1 FOR 1953.0;
		LEVEL 0 FOR 1953.0;
		LEVEL 1 FOR 235.0;
	}
}

TRANSITION_LIST("DINL[18]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 3255.0;
		LEVEL 0 FOR 1302.0;
		LEVEL 1 FOR 651.0;
		LEVEL 0 FOR 651.0;
		LEVEL 1 FOR 651.0;
		LEVEL 0 FOR 1302.0;
		LEVEL 1 FOR 651.0;
		LEVEL 0 FOR 1302.0;
		LEVEL 1 FOR 235.0;
	}
}

TRANSITION_LIST("DINL[17]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 651.0;
		LEVEL 0 FOR 651.0;
		LEVEL 1 FOR 1953.0;
		LEVEL 0 FOR 1953.0;
		LEVEL 1 FOR 651.0;
		LEVEL 0 FOR 651.0;
		LEVEL 1 FOR 651.0;
		LEVEL 0 FOR 2839.0;
	}
}

TRANSITION_LIST("DINL[16]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 1302.0;
		LEVEL 0 FOR 1302.0;
		LEVEL 1 FOR 651.0;
		LEVEL 0 FOR 651.0;
		LEVEL 1 FOR 1302.0;
		LEVEL 0 FOR 651.0;
		LEVEL 1 FOR 651.0;
		LEVEL 0 FOR 651.0;
		LEVEL 1 FOR 1302.0;
		LEVEL 0 FOR 1537.0;
	}
}

TRANSITION_LIST("DINL[15]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2604.0;
		LEVEL 1 FOR 1302.0;
		LEVEL 0 FOR 651.0;
		LEVEL 1 FOR 651.0;
		LEVEL 0 FOR 2604.0;
		LEVEL 1 FOR 651.0;
		LEVEL 0 FOR 651.0;
		LEVEL 1 FOR 886.0;
	}
}

TRANSITION_LIST("DINL[14]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 1302.0;
		LEVEL 0 FOR 651.0;
		LEVEL 1 FOR 2604.0;
		LEVEL 0 FOR 3255.0;
		LEVEL 1 FOR 1302.0;
		LEVEL 0 FOR 651.0;
		LEVEL 1 FOR 235.0;
	}
}

TRANSITION_LIST("DINL[13]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 651.0;
		LEVEL 1 FOR 1302.0;
		LEVEL 0 FOR 1302.0;
		LEVEL 1 FOR 651.0;
		LEVEL 0 FOR 651.0;
		LEVEL 1 FOR 651.0;
		LEVEL 0 FOR 1302.0;
		LEVEL 1 FOR 2604.0;
		LEVEL 0 FOR 886.0;
	}
}

TRANSITION_LIST("DINL[12]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 651.0;
		LEVEL 0 FOR 3255.0;
		LEVEL 1 FOR 651.0;
		LEVEL 0 FOR 651.0;
		LEVEL 1 FOR 651.0;
		LEVEL 0 FOR 651.0;
		LEVEL 1 FOR 1302.0;
		LEVEL 0 FOR 1302.0;
		LEVEL 1 FOR 886.0;
	}
}

TRANSITION_LIST("DINL[11]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 651.0;
		LEVEL 0 FOR 1302.0;
		LEVEL 1 FOR 651.0;
		LEVEL 0 FOR 651.0;
		LEVEL 1 FOR 651.0;
		LEVEL 0 FOR 1302.0;
		LEVEL 1 FOR 3255.0;
		LEVEL 0 FOR 1302.0;
		LEVEL 1 FOR 235.0;
	}
}

TRANSITION_LIST("DINL[10]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 1302.0;
		LEVEL 0 FOR 651.0;
		LEVEL 1 FOR 651.0;
		LEVEL 0 FOR 651.0;
		LEVEL 1 FOR 651.0;
		LEVEL 0 FOR 1302.0;
		LEVEL 1 FOR 651.0;
		LEVEL 0 FOR 651.0;
		LEVEL 1 FOR 651.0;
		LEVEL 0 FOR 1302.0;
		LEVEL 1 FOR 651.0;
		LEVEL 0 FOR 886.0;
	}
}

TRANSITION_LIST("DINL[9]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 2604.0;
		LEVEL 0 FOR 1953.0;
		LEVEL 1 FOR 2604.0;
		LEVEL 0 FOR 651.0;
		LEVEL 1 FOR 1953.0;
		LEVEL 0 FOR 235.0;
	}
}

TRANSITION_LIST("DINL[8]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 1953.0;
		LEVEL 0 FOR 651.0;
		LEVEL 1 FOR 1302.0;
		LEVEL 0 FOR 651.0;
		LEVEL 1 FOR 651.0;
		LEVEL 0 FOR 651.0;
		LEVEL 1 FOR 651.0;
		LEVEL 0 FOR 651.0;
		LEVEL 1 FOR 1953.0;
		LEVEL 0 FOR 651.0;
		LEVEL 1 FOR 235.0;
	}
}

TRANSITION_LIST("DINL[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1302.0;
		LEVEL 1 FOR 651.0;
		LEVEL 0 FOR 651.0;
		LEVEL 1 FOR 1302.0;
		LEVEL 0 FOR 651.0;
		LEVEL 1 FOR 2604.0;
		LEVEL 0 FOR 651.0;
		LEVEL 1 FOR 2188.0;
	}
}

TRANSITION_LIST("DINL[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1953.0;
		LEVEL 1 FOR 1302.0;
		LEVEL 0 FOR 651.0;
		LEVEL 1 FOR 3255.0;
		LEVEL 0 FOR 651.0;
		LEVEL 1 FOR 2188.0;
	}
}

TRANSITION_LIST("DINL[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1302.0;
		LEVEL 1 FOR 651.0;
		LEVEL 0 FOR 651.0;
		LEVEL 1 FOR 651.0;
		LEVEL 0 FOR 651.0;
		LEVEL 1 FOR 651.0;
		LEVEL 0 FOR 651.0;
		LEVEL 1 FOR 651.0;
		LEVEL 0 FOR 651.0;
		LEVEL 1 FOR 1302.0;
		LEVEL 0 FOR 1302.0;
		LEVEL 1 FOR 651.0;
		LEVEL 0 FOR 235.0;
	}
}

TRANSITION_LIST("DINL[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 1953.0;
		LEVEL 0 FOR 651.0;
		LEVEL 1 FOR 651.0;
		LEVEL 0 FOR 1302.0;
		LEVEL 1 FOR 651.0;
		LEVEL 0 FOR 651.0;
		LEVEL 1 FOR 3906.0;
		LEVEL 0 FOR 235.0;
	}
}

TRANSITION_LIST("DINL[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 651.0;
		LEVEL 0 FOR 3906.0;
		LEVEL 1 FOR 1953.0;
		LEVEL 0 FOR 651.0;
		LEVEL 1 FOR 651.0;
		LEVEL 0 FOR 651.0;
		LEVEL 1 FOR 651.0;
		LEVEL 0 FOR 651.0;
		LEVEL 1 FOR 235.0;
	}
}

TRANSITION_LIST("DINL[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1302.0;
		LEVEL 1 FOR 651.0;
		LEVEL 0 FOR 651.0;
		LEVEL 1 FOR 651.0;
		LEVEL 0 FOR 1302.0;
		LEVEL 1 FOR 651.0;
		LEVEL 0 FOR 651.0;
		LEVEL 1 FOR 651.0;
		LEVEL 0 FOR 651.0;
		LEVEL 1 FOR 651.0;
		LEVEL 0 FOR 651.0;
		LEVEL 1 FOR 1537.0;
	}
}

TRANSITION_LIST("DINL[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 3255.0;
		LEVEL 1 FOR 651.0;
		LEVEL 0 FOR 1302.0;
		LEVEL 1 FOR 2604.0;
		LEVEL 0 FOR 1302.0;
		LEVEL 1 FOR 651.0;
		LEVEL 0 FOR 235.0;
	}
}

TRANSITION_LIST("DINL[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 3906.0;
		LEVEL 0 FOR 651.0;
		LEVEL 1 FOR 1302.0;
		LEVEL 0 FOR 4141.0;
	}
}

TRANSITION_LIST("DINR[23]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1302.0;
		LEVEL 1 FOR 651.0;
		LEVEL 0 FOR 651.0;
		LEVEL 1 FOR 1953.0;
		LEVEL 0 FOR 651.0;
		LEVEL 1 FOR 1302.0;
		LEVEL 0 FOR 1302.0;
		LEVEL 1 FOR 2188.0;
	}
}

TRANSITION_LIST("DINR[22]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1302.0;
		LEVEL 1 FOR 2604.0;
		LEVEL 0 FOR 1302.0;
		LEVEL 1 FOR 651.0;
		LEVEL 0 FOR 1302.0;
		LEVEL 1 FOR 1302.0;
		LEVEL 0 FOR 651.0;
		LEVEL 1 FOR 651.0;
		LEVEL 0 FOR 235.0;
	}
}

TRANSITION_LIST("DINR[21]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 651.0;
		LEVEL 1 FOR 651.0;
		LEVEL 0 FOR 5859.0;
		LEVEL 1 FOR 1302.0;
		LEVEL 0 FOR 1302.0;
		LEVEL 1 FOR 235.0;
	}
}

TRANSITION_LIST("DINR[20]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 651.0;
		LEVEL 0 FOR 1953.0;
		LEVEL 1 FOR 2604.0;
		LEVEL 0 FOR 651.0;
		LEVEL 1 FOR 651.0;
		LEVEL 0 FOR 2604.0;
		LEVEL 1 FOR 886.0;
	}
}

TRANSITION_LIST("DINR[19]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2604.0;
		LEVEL 1 FOR 1302.0;
		LEVEL 0 FOR 651.0;
		LEVEL 1 FOR 1302.0;
		LEVEL 0 FOR 651.0;
		LEVEL 1 FOR 651.0;
		LEVEL 0 FOR 1302.0;
		LEVEL 1 FOR 651.0;
		LEVEL 0 FOR 651.0;
		LEVEL 1 FOR 235.0;
	}
}

TRANSITION_LIST("DINR[18]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 651.0;
		LEVEL 0 FOR 651.0;
		LEVEL 1 FOR 1302.0;
		LEVEL 0 FOR 1953.0;
		LEVEL 1 FOR 2604.0;
		LEVEL 0 FOR 1302.0;
		LEVEL 1 FOR 1302.0;
		LEVEL 0 FOR 235.0;
	}
}

TRANSITION_LIST("DINR[17]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1953.0;
		LEVEL 1 FOR 651.0;
		LEVEL 0 FOR 3906.0;
		LEVEL 1 FOR 3490.0;
	}
}

TRANSITION_LIST("DINR[16]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 651.0;
		LEVEL 1 FOR 651.0;
		LEVEL 0 FOR 2604.0;
		LEVEL 1 FOR 651.0;
		LEVEL 0 FOR 651.0;
		LEVEL 1 FOR 1302.0;
		LEVEL 0 FOR 3255.0;
		LEVEL 1 FOR 235.0;
	}
}

TRANSITION_LIST("DINR[15]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 651.0;
		LEVEL 0 FOR 651.0;
		LEVEL 1 FOR 651.0;
		LEVEL 0 FOR 651.0;
		LEVEL 1 FOR 651.0;
		LEVEL 0 FOR 1302.0;
		LEVEL 1 FOR 651.0;
		LEVEL 0 FOR 651.0;
		LEVEL 1 FOR 3255.0;
		LEVEL 0 FOR 651.0;
		LEVEL 1 FOR 235.0;
	}
}

TRANSITION_LIST("DINR[14]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 651.0;
		LEVEL 1 FOR 1302.0;
		LEVEL 0 FOR 651.0;
		LEVEL 1 FOR 651.0;
		LEVEL 0 FOR 1302.0;
		LEVEL 1 FOR 651.0;
		LEVEL 0 FOR 1302.0;
		LEVEL 1 FOR 651.0;
		LEVEL 0 FOR 651.0;
		LEVEL 1 FOR 1953.0;
		LEVEL 0 FOR 235.0;
	}
}

TRANSITION_LIST("DINR[13]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 651.0;
		LEVEL 1 FOR 1953.0;
		LEVEL 0 FOR 1302.0;
		LEVEL 1 FOR 1953.0;
		LEVEL 0 FOR 1953.0;
		LEVEL 1 FOR 651.0;
		LEVEL 0 FOR 1302.0;
		LEVEL 1 FOR 235.0;
	}
}

TRANSITION_LIST("DINR[12]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 651.0;
		LEVEL 1 FOR 2604.0;
		LEVEL 0 FOR 1302.0;
		LEVEL 1 FOR 651.0;
		LEVEL 0 FOR 1302.0;
		LEVEL 1 FOR 651.0;
		LEVEL 0 FOR 651.0;
		LEVEL 1 FOR 1302.0;
		LEVEL 0 FOR 651.0;
		LEVEL 1 FOR 235.0;
	}
}

TRANSITION_LIST("DINR[11]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 3255.0;
		LEVEL 0 FOR 651.0;
		LEVEL 1 FOR 651.0;
		LEVEL 0 FOR 651.0;
		LEVEL 1 FOR 651.0;
		LEVEL 0 FOR 651.0;
		LEVEL 1 FOR 651.0;
		LEVEL 0 FOR 1302.0;
		LEVEL 1 FOR 651.0;
		LEVEL 0 FOR 651.0;
		LEVEL 1 FOR 235.0;
	}
}

TRANSITION_LIST("DINR[10]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1302.0;
		LEVEL 1 FOR 3255.0;
		LEVEL 0 FOR 1953.0;
		LEVEL 1 FOR 651.0;
		LEVEL 0 FOR 1302.0;
		LEVEL 1 FOR 651.0;
		LEVEL 0 FOR 886.0;
	}
}

TRANSITION_LIST("DINR[9]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 651.0;
		LEVEL 1 FOR 3906.0;
		LEVEL 0 FOR 651.0;
		LEVEL 1 FOR 651.0;
		LEVEL 0 FOR 1302.0;
		LEVEL 1 FOR 1302.0;
		LEVEL 0 FOR 651.0;
		LEVEL 1 FOR 886.0;
	}
}

TRANSITION_LIST("DINR[8]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 651.0;
		LEVEL 1 FOR 651.0;
		LEVEL 0 FOR 2604.0;
		LEVEL 1 FOR 651.0;
		LEVEL 0 FOR 1302.0;
		LEVEL 1 FOR 1302.0;
		LEVEL 0 FOR 2839.0;
	}
}

TRANSITION_LIST("DINR[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 1302.0;
		LEVEL 0 FOR 1302.0;
		LEVEL 1 FOR 1302.0;
		LEVEL 0 FOR 651.0;
		LEVEL 1 FOR 3906.0;
		LEVEL 0 FOR 651.0;
		LEVEL 1 FOR 651.0;
		LEVEL 0 FOR 235.0;
	}
}

TRANSITION_LIST("DINR[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 1953.0;
		LEVEL 0 FOR 1953.0;
		LEVEL 1 FOR 1302.0;
		LEVEL 0 FOR 2604.0;
		LEVEL 1 FOR 1302.0;
		LEVEL 0 FOR 651.0;
		LEVEL 1 FOR 235.0;
	}
}

TRANSITION_LIST("DINR[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 3906.0;
		LEVEL 0 FOR 651.0;
		LEVEL 1 FOR 651.0;
		LEVEL 0 FOR 651.0;
		LEVEL 1 FOR 1302.0;
		LEVEL 0 FOR 2839.0;
	}
}

TRANSITION_LIST("DINR[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 651.0;
		LEVEL 0 FOR 1953.0;
		LEVEL 1 FOR 651.0;
		LEVEL 0 FOR 651.0;
		LEVEL 1 FOR 1953.0;
		LEVEL 0 FOR 651.0;
		LEVEL 1 FOR 651.0;
		LEVEL 0 FOR 1953.0;
		LEVEL 1 FOR 651.0;
		LEVEL 0 FOR 235.0;
	}
}

TRANSITION_LIST("DINR[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 651.0;
		LEVEL 0 FOR 1953.0;
		LEVEL 1 FOR 1302.0;
		LEVEL 0 FOR 1953.0;
		LEVEL 1 FOR 1953.0;
		LEVEL 0 FOR 651.0;
		LEVEL 1 FOR 1537.0;
	}
}

TRANSITION_LIST("DINR[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 651.0;
		LEVEL 1 FOR 1302.0;
		LEVEL 0 FOR 651.0;
		LEVEL 1 FOR 1302.0;
		LEVEL 0 FOR 651.0;
		LEVEL 1 FOR 1953.0;
		LEVEL 0 FOR 651.0;
		LEVEL 1 FOR 651.0;
		LEVEL 0 FOR 1302.0;
		LEVEL 1 FOR 651.0;
		LEVEL 0 FOR 235.0;
	}
}

TRANSITION_LIST("DINR[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 1953.0;
		LEVEL 0 FOR 1953.0;
		LEVEL 1 FOR 651.0;
		LEVEL 0 FOR 651.0;
		LEVEL 1 FOR 651.0;
		LEVEL 0 FOR 3255.0;
		LEVEL 1 FOR 886.0;
	}
}

TRANSITION_LIST("DINR[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 651.0;
		LEVEL 0 FOR 651.0;
		LEVEL 1 FOR 1953.0;
		LEVEL 0 FOR 651.0;
		LEVEL 1 FOR 651.0;
		LEVEL 0 FOR 1953.0;
		LEVEL 1 FOR 1953.0;
		LEVEL 0 FOR 651.0;
		LEVEL 1 FOR 886.0;
	}
}

TRANSITION_LIST("DOUTL[23]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1953.0;
		LEVEL 1 FOR 842.0;
		LEVEL 0 FOR 2413.0;
		LEVEL 1 FOR 1302.0;
		LEVEL 0 FOR 651.0;
		LEVEL 1 FOR 1302.0;
		LEVEL 0 FOR 1537.0;
	}
}

TRANSITION_LIST("DOUTL[22]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1302.0;
		LEVEL 1 FOR 1302.0;
		LEVEL 0 FOR 3255.0;
		LEVEL 1 FOR 3906.0;
		LEVEL 0 FOR 235.0;
	}
}

TRANSITION_LIST("DOUTL[21]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 651.0;
		LEVEL 1 FOR 651.0;
		LEVEL 0 FOR 651.0;
		LEVEL 1 FOR 842.0;
		LEVEL 0 FOR 2413.0;
		LEVEL 1 FOR 1302.0;
		LEVEL 0 FOR 651.0;
		LEVEL 1 FOR 2839.0;
	}
}

TRANSITION_LIST("DOUTL[20]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 651.0;
		LEVEL 1 FOR 651.0;
		LEVEL 0 FOR 5208.0;
		LEVEL 1 FOR 3255.0;
		LEVEL 0 FOR 235.0;
	}
}

TRANSITION_LIST("DOUTL[19]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 651.0;
		LEVEL 1 FOR 2144.0;
		LEVEL 0 FOR 2413.0;
		LEVEL 1 FOR 651.0;
		LEVEL 0 FOR 651.0;
		LEVEL 1 FOR 1953.0;
		LEVEL 0 FOR 1537.0;
	}
}

TRANSITION_LIST("DOUTL[18]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 651.0;
		LEVEL 1 FOR 2144.0;
		LEVEL 0 FOR 2413.0;
		LEVEL 1 FOR 651.0;
		LEVEL 0 FOR 651.0;
		LEVEL 1 FOR 651.0;
		LEVEL 0 FOR 1302.0;
		LEVEL 1 FOR 651.0;
		LEVEL 0 FOR 886.0;
	}
}

TRANSITION_LIST("DOUTL[17]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 651.0;
		LEVEL 1 FOR 651.0;
		LEVEL 0 FOR 651.0;
		LEVEL 1 FOR 842.0;
		LEVEL 0 FOR 3064.0;
		LEVEL 1 FOR 651.0;
		LEVEL 0 FOR 651.0;
		LEVEL 1 FOR 651.0;
		LEVEL 0 FOR 2188.0;
	}
}

TRANSITION_LIST("DOUTL[16]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 651.0;
		LEVEL 1 FOR 1302.0;
		LEVEL 0 FOR 3255.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 651.0;
			LEVEL 0 FOR 651.0;
		}
		LEVEL 1 FOR 1302.0;
		LEVEL 0 FOR 886.0;
	}
}

TRANSITION_LIST("DOUTL[15]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 5208.0;
		LEVEL 1 FOR 651.0;
		LEVEL 0 FOR 2604.0;
		LEVEL 1 FOR 651.0;
		LEVEL 0 FOR 651.0;
		LEVEL 1 FOR 235.0;
	}
}

TRANSITION_LIST("DOUTL[14]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 651.0;
		LEVEL 1 FOR 1302.0;
		LEVEL 0 FOR 651.0;
		LEVEL 1 FOR 191.0;
		LEVEL 0 FOR 5668.0;
		LEVEL 1 FOR 1302.0;
		LEVEL 0 FOR 235.0;
	}
}

TRANSITION_LIST("DOUTL[13]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1302.0;
		LEVEL 1 FOR 1302.0;
		LEVEL 0 FOR 2604.0;
		LEVEL 1 FOR 651.0;
		LEVEL 0 FOR 1302.0;
		LEVEL 1 FOR 2604.0;
		LEVEL 0 FOR 235.0;
	}
}

TRANSITION_LIST("DOUTL[12]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 651.0;
		LEVEL 1 FOR 651.0;
		LEVEL 0 FOR 4557.0;
		LEVEL 1 FOR 651.0;
		LEVEL 0 FOR 651.0;
		LEVEL 1 FOR 1302.0;
		LEVEL 0 FOR 1302.0;
		LEVEL 1 FOR 235.0;
	}
}

TRANSITION_LIST("DOUTL[11]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 651.0;
		LEVEL 1 FOR 651.0;
		LEVEL 0 FOR 1302.0;
		LEVEL 1 FOR 191.0;
		LEVEL 0 FOR 3064.0;
		LEVEL 1 FOR 3255.0;
		LEVEL 0 FOR 886.0;
	}
}

TRANSITION_LIST("DOUTL[10]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 651.0;
		LEVEL 1 FOR 1302.0;
		LEVEL 0 FOR 651.0;
		LEVEL 1 FOR 191.0;
		LEVEL 0 FOR 3064.0;
		LEVEL 1 FOR 651.0;
		LEVEL 0 FOR 651.0;
		LEVEL 1 FOR 651.0;
		LEVEL 0 FOR 1302.0;
		LEVEL 1 FOR 651.0;
		LEVEL 0 FOR 235.0;
	}
}

TRANSITION_LIST("DOUTL[9]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 651.0;
		LEVEL 1 FOR 2144.0;
		LEVEL 0 FOR 2413.0;
		LEVEL 1 FOR 2604.0;
		LEVEL 0 FOR 651.0;
		LEVEL 1 FOR 1537.0;
	}
}

TRANSITION_LIST("DOUTL[8]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 651.0;
		LEVEL 1 FOR 1953.0;
		LEVEL 0 FOR 2604.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 651.0;
			LEVEL 0 FOR 651.0;
		}
		LEVEL 1 FOR 1953.0;
		LEVEL 0 FOR 235.0;
	}
}

TRANSITION_LIST("DOUTL[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1953.0;
		LEVEL 1 FOR 651.0;
		LEVEL 0 FOR 2604.0;
		LEVEL 1 FOR 2604.0;
		LEVEL 0 FOR 651.0;
		LEVEL 1 FOR 1537.0;
	}
}

TRANSITION_LIST("DOUTL[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2604.0;
		LEVEL 1 FOR 191.0;
		LEVEL 0 FOR 2413.0;
		LEVEL 1 FOR 2604.0;
		LEVEL 0 FOR 651.0;
		LEVEL 1 FOR 1537.0;
	}
}

TRANSITION_LIST("DOUTL[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1953.0;
		LEVEL 1 FOR 651.0;
		LEVEL 0 FOR 3255.0;
		LEVEL 1 FOR 651.0;
		LEVEL 0 FOR 651.0;
		LEVEL 1 FOR 1302.0;
		LEVEL 0 FOR 1302.0;
		LEVEL 1 FOR 235.0;
	}
}

TRANSITION_LIST("DOUTL[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 651.0;
		LEVEL 1 FOR 1953.0;
		LEVEL 0 FOR 2604.0;
		LEVEL 1 FOR 651.0;
		LEVEL 0 FOR 651.0;
		LEVEL 1 FOR 3490.0;
	}
}

TRANSITION_LIST("DOUTL[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 651.0;
		LEVEL 1 FOR 651.0;
		LEVEL 0 FOR 3906.0;
		LEVEL 1 FOR 1953.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 651.0;
			LEVEL 1 FOR 651.0;
		}
		LEVEL 0 FOR 235.0;
	}
}

TRANSITION_LIST("DOUTL[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1953.0;
		LEVEL 1 FOR 651.0;
		LEVEL 0 FOR 2604.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 651.0;
			LEVEL 0 FOR 651.0;
		}
		LEVEL 1 FOR 886.0;
	}
}

TRANSITION_LIST("DOUTL[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 5859.0;
		LEVEL 1 FOR 2604.0;
		LEVEL 0 FOR 1302.0;
		LEVEL 1 FOR 235.0;
	}
}

TRANSITION_LIST("DOUTL[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 651.0;
		LEVEL 1 FOR 2144.0;
		LEVEL 0 FOR 2413.0;
		LEVEL 1 FOR 1302.0;
		LEVEL 0 FOR 3490.0;
	}
}

TRANSITION_LIST("DOUTR[23]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1953.0;
		LEVEL 1 FOR 651.0;
		LEVEL 0 FOR 3255.0;
		LEVEL 1 FOR 1302.0;
		LEVEL 0 FOR 1302.0;
		LEVEL 1 FOR 1537.0;
	}
}

TRANSITION_LIST("DOUTR[22]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1953.0;
		LEVEL 1 FOR 842.0;
		LEVEL 0 FOR 3064.0;
		LEVEL 1 FOR 651.0;
		LEVEL 0 FOR 1302.0;
		LEVEL 1 FOR 1302.0;
		LEVEL 0 FOR 651.0;
		LEVEL 1 FOR 235.0;
	}
}

TRANSITION_LIST("DOUTR[21]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1302.0;
		LEVEL 1 FOR 651.0;
		LEVEL 0 FOR 5859.0;
		LEVEL 1 FOR 1302.0;
		LEVEL 0 FOR 886.0;
	}
}

TRANSITION_LIST("DOUTR[20]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 651.0;
		LEVEL 1 FOR 651.0;
		LEVEL 0 FOR 3906.0;
		LEVEL 1 FOR 651.0;
		LEVEL 0 FOR 651.0;
		LEVEL 1 FOR 651.0;
		LEVEL 0 FOR 2604.0;
		LEVEL 1 FOR 235.0;
	}
}

TRANSITION_LIST("DOUTR[19]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 5208.0;
		LEVEL 1 FOR 1302.0;
		LEVEL 0 FOR 651.0;
		LEVEL 1 FOR 651.0;
		LEVEL 0 FOR 1302.0;
		LEVEL 1 FOR 651.0;
		LEVEL 0 FOR 235.0;
	}
}

TRANSITION_LIST("DOUTR[18]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 651.0;
		LEVEL 1 FOR 651.0;
		LEVEL 0 FOR 651.0;
		LEVEL 1 FOR 842.0;
		LEVEL 0 FOR 2413.0;
		LEVEL 1 FOR 2604.0;
		LEVEL 0 FOR 1302.0;
		LEVEL 1 FOR 886.0;
	}
}

TRANSITION_LIST("DOUTR[17]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2604.0;
		LEVEL 1 FOR 191.0;
		LEVEL 0 FOR 4366.0;
		LEVEL 1 FOR 2839.0;
	}
}

TRANSITION_LIST("DOUTR[16]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1302.0;
		LEVEL 1 FOR 651.0;
		LEVEL 0 FOR 3906.0;
		LEVEL 1 FOR 1302.0;
		LEVEL 0 FOR 2839.0;
	}
}

TRANSITION_LIST("DOUTR[15]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 651.0;
			LEVEL 1 FOR 651.0;
		}
		LEVEL 0 FOR 2604.0;
		LEVEL 1 FOR 651.0;
		LEVEL 0 FOR 651.0;
		LEVEL 1 FOR 3255.0;
		LEVEL 0 FOR 235.0;
	}
}

TRANSITION_LIST("DOUTR[14]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1302.0;
		LEVEL 1 FOR 1302.0;
		LEVEL 0 FOR 2604.0;
		LEVEL 1 FOR 651.0;
		LEVEL 0 FOR 1302.0;
		LEVEL 1 FOR 651.0;
		LEVEL 0 FOR 651.0;
		LEVEL 1 FOR 1537.0;
	}
}

TRANSITION_LIST("DOUTR[13]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1302.0;
		LEVEL 1 FOR 1493.0;
		LEVEL 0 FOR 2413.0;
		LEVEL 1 FOR 1302.0;
		LEVEL 0 FOR 1953.0;
		LEVEL 1 FOR 651.0;
		LEVEL 0 FOR 886.0;
	}
}

TRANSITION_LIST("DOUTR[12]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1302.0;
		LEVEL 1 FOR 1493.0;
		LEVEL 0 FOR 2413.0;
		LEVEL 1 FOR 651.0;
		LEVEL 0 FOR 1302.0;
		LEVEL 1 FOR 651.0;
		LEVEL 0 FOR 651.0;
		LEVEL 1 FOR 1302.0;
		LEVEL 0 FOR 235.0;
	}
}

TRANSITION_LIST("DOUTR[11]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 651.0;
		LEVEL 1 FOR 2144.0;
		LEVEL 0 FOR 3064.0;
		LEVEL 1 FOR 651.0;
		LEVEL 0 FOR 651.0;
		LEVEL 1 FOR 651.0;
		LEVEL 0 FOR 1302.0;
		LEVEL 1 FOR 651.0;
		LEVEL 0 FOR 235.0;
	}
}

TRANSITION_LIST("DOUTR[10]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1953.0;
		LEVEL 1 FOR 842.0;
		LEVEL 0 FOR 4366.0;
		LEVEL 1 FOR 651.0;
		LEVEL 0 FOR 1302.0;
		LEVEL 1 FOR 651.0;
		LEVEL 0 FOR 235.0;
	}
}

TRANSITION_LIST("DOUTR[9]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1302.0;
		LEVEL 1 FOR 1493.0;
		LEVEL 0 FOR 3064.0;
		LEVEL 1 FOR 651.0;
		LEVEL 0 FOR 1302.0;
		LEVEL 1 FOR 1302.0;
		LEVEL 0 FOR 651.0;
		LEVEL 1 FOR 235.0;
	}
}

TRANSITION_LIST("DOUTR[8]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1302.0;
		LEVEL 1 FOR 651.0;
		LEVEL 0 FOR 4557.0;
		LEVEL 1 FOR 1302.0;
		LEVEL 0 FOR 2188.0;
	}
}

TRANSITION_LIST("DOUTR[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 651.0;
		LEVEL 1 FOR 1302.0;
		LEVEL 0 FOR 3255.0;
		LEVEL 1 FOR 3906.0;
		LEVEL 0 FOR 651.0;
		LEVEL 1 FOR 235.0;
	}
}

TRANSITION_LIST("DOUTR[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 651.0;
		LEVEL 1 FOR 1953.0;
		LEVEL 0 FOR 2604.0;
		LEVEL 1 FOR 651.0;
		LEVEL 0 FOR 2604.0;
		LEVEL 1 FOR 1302.0;
		LEVEL 0 FOR 235.0;
	}
}

TRANSITION_LIST("DOUTR[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 651.0;
		LEVEL 1 FOR 2144.0;
		LEVEL 0 FOR 2413.0;
		LEVEL 1 FOR 651.0;
		LEVEL 0 FOR 651.0;
		LEVEL 1 FOR 1302.0;
		LEVEL 0 FOR 2188.0;
	}
}

TRANSITION_LIST("DOUTR[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 651.0;
		LEVEL 1 FOR 651.0;
		LEVEL 0 FOR 3906.0;
		LEVEL 1 FOR 1302.0;
		LEVEL 0 FOR 651.0;
		LEVEL 1 FOR 651.0;
		LEVEL 0 FOR 1953.0;
		LEVEL 1 FOR 235.0;
	}
}

TRANSITION_LIST("DOUTR[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 651.0;
		LEVEL 1 FOR 651.0;
		LEVEL 0 FOR 5208.0;
		LEVEL 1 FOR 1953.0;
		LEVEL 0 FOR 651.0;
		LEVEL 1 FOR 886.0;
	}
}

TRANSITION_LIST("DOUTR[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1302.0;
		LEVEL 1 FOR 1302.0;
		LEVEL 0 FOR 2604.0;
		LEVEL 1 FOR 1953.0;
		LEVEL 0 FOR 651.0;
		LEVEL 1 FOR 651.0;
		LEVEL 0 FOR 1302.0;
		LEVEL 1 FOR 235.0;
	}
}

TRANSITION_LIST("DOUTR[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 651.0;
		LEVEL 1 FOR 1953.0;
		LEVEL 0 FOR 3255.0;
		LEVEL 1 FOR 651.0;
		LEVEL 0 FOR 3255.0;
		LEVEL 1 FOR 235.0;
	}
}

TRANSITION_LIST("DOUTR[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 651.0;
		LEVEL 1 FOR 651.0;
		LEVEL 0 FOR 651.0;
		LEVEL 1 FOR 842.0;
		LEVEL 0 FOR 4366.0;
		LEVEL 1 FOR 1953.0;
		LEVEL 0 FOR 651.0;
		LEVEL 1 FOR 235.0;
	}
}

TRANSITION_LIST("nCNVR")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 15.0;
		LEVEL 1 FOR 636.0;
		LEVEL 0 FOR 14.0;
		LEVEL 1 FOR 637.0;
		LEVEL 0 FOR 13.0;
		LEVEL 1 FOR 638.0;
		LEVEL 0 FOR 12.0;
		LEVEL 1 FOR 639.0;
		LEVEL 0 FOR 11.0;
		LEVEL 1 FOR 640.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 641.0;
		LEVEL 0 FOR 19.0;
		LEVEL 1 FOR 632.0;
		LEVEL 0 FOR 18.0;
		LEVEL 1 FOR 633.0;
		LEVEL 0 FOR 17.0;
		LEVEL 1 FOR 634.0;
		LEVEL 0 FOR 16.0;
		LEVEL 1 FOR 635.0;
		LEVEL 0 FOR 15.0;
		LEVEL 1 FOR 636.0;
		LEVEL 0 FOR 14.0;
		LEVEL 1 FOR 637.0;
		LEVEL 0 FOR 13.0;
		LEVEL 1 FOR 638.0;
		LEVEL 0 FOR 12.0;
		LEVEL 1 FOR 639.0;
		LEVEL 0 FOR 11.0;
		LEVEL 1 FOR 640.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 225.0;
	}
}

TRANSITION_LIST("SCKR")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 25.0;
		NODE
		{
			REPEAT = 23;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
		}
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 785.0;
		NODE
		{
			REPEAT = 2;
			NODE
			{
				REPEAT = 23;
				LEVEL 1 FOR 5.0;
				LEVEL 0 FOR 5.0;
			}
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 415.0;
		}
		NODE
		{
			REPEAT = 23;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
		}
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 415.0;
		NODE
		{
			REPEAT = 23;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
		}
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 425.0;
		NODE
		{
			REPEAT = 8;
			NODE
			{
				REPEAT = 23;
				LEVEL 1 FOR 5.0;
				LEVEL 0 FOR 5.0;
			}
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 415.0;
		}
		NODE
		{
			REPEAT = 23;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
		}
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 415.0;
		NODE
		{
			REPEAT = 23;
			LEVEL 1 FOR 5.0;
			LEVEL 0 FOR 5.0;
		}
		LEVEL 1 FOR 5.0;
		LEVEL 0 FOR 260.0;
	}
}

TRANSITION_LIST("SDOR")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 45.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 20.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 30.0;
		}
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 800.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 37.0;
		LEVEL 1 FOR 403.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 70.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 420.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 29.0;
		LEVEL 1 FOR 401.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 20.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 40.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
		}
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 410.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 80.0;
		LEVEL 1 FOR 20.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
		}
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 41.0;
		LEVEL 1 FOR 399.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 40.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
		}
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 440.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 43.0;
		LEVEL 1 FOR 407.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 20.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
		}
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 34.0;
		LEVEL 1 FOR 396.0;
		LEVEL 0 FOR 20.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 10.0;
			LEVEL 0 FOR 10.0;
		}
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 60.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 470.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 30.0;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 20.0;
			LEVEL 0 FOR 10.0;
		}
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 420.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 27.0;
		LEVEL 1 FOR 413.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 28.0;
		LEVEL 1 FOR 392.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 30.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 59.0;
		LEVEL 1 FOR 401.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 20.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 40.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 10.0;
		LEVEL 1 FOR 10.0;
		LEVEL 0 FOR 20.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 30.0;
		LEVEL 1 FOR 235.0;
	}
}

DISPLAY_LINE
{
	CHANNEL = "MCLK";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 0;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "CLEAR";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 1;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "CLKFS";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 2;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "BUSYL";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 3;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "nCNVL";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 4;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "SCKL";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 5;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "SDOL";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 6;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "DINL";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 7;
	TREE_LEVEL = 0;
	CHILDREN = 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31;
}

DISPLAY_LINE
{
	CHANNEL = "DINL[23]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 8;
	TREE_LEVEL = 1;
	PARENT = 7;
}

DISPLAY_LINE
{
	CHANNEL = "DINL[22]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 9;
	TREE_LEVEL = 1;
	PARENT = 7;
}

DISPLAY_LINE
{
	CHANNEL = "DINL[21]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 10;
	TREE_LEVEL = 1;
	PARENT = 7;
}

DISPLAY_LINE
{
	CHANNEL = "DINL[20]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 11;
	TREE_LEVEL = 1;
	PARENT = 7;
}

DISPLAY_LINE
{
	CHANNEL = "DINL[19]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 12;
	TREE_LEVEL = 1;
	PARENT = 7;
}

DISPLAY_LINE
{
	CHANNEL = "DINL[18]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 13;
	TREE_LEVEL = 1;
	PARENT = 7;
}

DISPLAY_LINE
{
	CHANNEL = "DINL[17]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 14;
	TREE_LEVEL = 1;
	PARENT = 7;
}

DISPLAY_LINE
{
	CHANNEL = "DINL[16]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 15;
	TREE_LEVEL = 1;
	PARENT = 7;
}

DISPLAY_LINE
{
	CHANNEL = "DINL[15]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 16;
	TREE_LEVEL = 1;
	PARENT = 7;
}

DISPLAY_LINE
{
	CHANNEL = "DINL[14]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 17;
	TREE_LEVEL = 1;
	PARENT = 7;
}

DISPLAY_LINE
{
	CHANNEL = "DINL[13]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 18;
	TREE_LEVEL = 1;
	PARENT = 7;
}

DISPLAY_LINE
{
	CHANNEL = "DINL[12]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 19;
	TREE_LEVEL = 1;
	PARENT = 7;
}

DISPLAY_LINE
{
	CHANNEL = "DINL[11]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 20;
	TREE_LEVEL = 1;
	PARENT = 7;
}

DISPLAY_LINE
{
	CHANNEL = "DINL[10]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 21;
	TREE_LEVEL = 1;
	PARENT = 7;
}

DISPLAY_LINE
{
	CHANNEL = "DINL[9]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 22;
	TREE_LEVEL = 1;
	PARENT = 7;
}

DISPLAY_LINE
{
	CHANNEL = "DINL[8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 23;
	TREE_LEVEL = 1;
	PARENT = 7;
}

DISPLAY_LINE
{
	CHANNEL = "DINL[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 24;
	TREE_LEVEL = 1;
	PARENT = 7;
}

DISPLAY_LINE
{
	CHANNEL = "DINL[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 25;
	TREE_LEVEL = 1;
	PARENT = 7;
}

DISPLAY_LINE
{
	CHANNEL = "DINL[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 26;
	TREE_LEVEL = 1;
	PARENT = 7;
}

DISPLAY_LINE
{
	CHANNEL = "DINL[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 27;
	TREE_LEVEL = 1;
	PARENT = 7;
}

DISPLAY_LINE
{
	CHANNEL = "DINL[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 28;
	TREE_LEVEL = 1;
	PARENT = 7;
}

DISPLAY_LINE
{
	CHANNEL = "DINL[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 29;
	TREE_LEVEL = 1;
	PARENT = 7;
}

DISPLAY_LINE
{
	CHANNEL = "DINL[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 30;
	TREE_LEVEL = 1;
	PARENT = 7;
}

DISPLAY_LINE
{
	CHANNEL = "DINL[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 31;
	TREE_LEVEL = 1;
	PARENT = 7;
}

DISPLAY_LINE
{
	CHANNEL = "DOUTL";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 32;
	TREE_LEVEL = 0;
	CHILDREN = 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56;
}

DISPLAY_LINE
{
	CHANNEL = "DOUTL[23]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 33;
	TREE_LEVEL = 1;
	PARENT = 32;
}

DISPLAY_LINE
{
	CHANNEL = "DOUTL[22]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 34;
	TREE_LEVEL = 1;
	PARENT = 32;
}

DISPLAY_LINE
{
	CHANNEL = "DOUTL[21]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 35;
	TREE_LEVEL = 1;
	PARENT = 32;
}

DISPLAY_LINE
{
	CHANNEL = "DOUTL[20]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 36;
	TREE_LEVEL = 1;
	PARENT = 32;
}

DISPLAY_LINE
{
	CHANNEL = "DOUTL[19]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 37;
	TREE_LEVEL = 1;
	PARENT = 32;
}

DISPLAY_LINE
{
	CHANNEL = "DOUTL[18]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 38;
	TREE_LEVEL = 1;
	PARENT = 32;
}

DISPLAY_LINE
{
	CHANNEL = "DOUTL[17]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 39;
	TREE_LEVEL = 1;
	PARENT = 32;
}

DISPLAY_LINE
{
	CHANNEL = "DOUTL[16]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 40;
	TREE_LEVEL = 1;
	PARENT = 32;
}

DISPLAY_LINE
{
	CHANNEL = "DOUTL[15]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 41;
	TREE_LEVEL = 1;
	PARENT = 32;
}

DISPLAY_LINE
{
	CHANNEL = "DOUTL[14]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 42;
	TREE_LEVEL = 1;
	PARENT = 32;
}

DISPLAY_LINE
{
	CHANNEL = "DOUTL[13]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 43;
	TREE_LEVEL = 1;
	PARENT = 32;
}

DISPLAY_LINE
{
	CHANNEL = "DOUTL[12]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 44;
	TREE_LEVEL = 1;
	PARENT = 32;
}

DISPLAY_LINE
{
	CHANNEL = "DOUTL[11]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 45;
	TREE_LEVEL = 1;
	PARENT = 32;
}

DISPLAY_LINE
{
	CHANNEL = "DOUTL[10]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 46;
	TREE_LEVEL = 1;
	PARENT = 32;
}

DISPLAY_LINE
{
	CHANNEL = "DOUTL[9]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 47;
	TREE_LEVEL = 1;
	PARENT = 32;
}

DISPLAY_LINE
{
	CHANNEL = "DOUTL[8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 48;
	TREE_LEVEL = 1;
	PARENT = 32;
}

DISPLAY_LINE
{
	CHANNEL = "DOUTL[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 49;
	TREE_LEVEL = 1;
	PARENT = 32;
}

DISPLAY_LINE
{
	CHANNEL = "DOUTL[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 50;
	TREE_LEVEL = 1;
	PARENT = 32;
}

DISPLAY_LINE
{
	CHANNEL = "DOUTL[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 51;
	TREE_LEVEL = 1;
	PARENT = 32;
}

DISPLAY_LINE
{
	CHANNEL = "DOUTL[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 52;
	TREE_LEVEL = 1;
	PARENT = 32;
}

DISPLAY_LINE
{
	CHANNEL = "DOUTL[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 53;
	TREE_LEVEL = 1;
	PARENT = 32;
}

DISPLAY_LINE
{
	CHANNEL = "DOUTL[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 54;
	TREE_LEVEL = 1;
	PARENT = 32;
}

DISPLAY_LINE
{
	CHANNEL = "DOUTL[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 55;
	TREE_LEVEL = 1;
	PARENT = 32;
}

DISPLAY_LINE
{
	CHANNEL = "DOUTL[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 56;
	TREE_LEVEL = 1;
	PARENT = 32;
}

DISPLAY_LINE
{
	CHANNEL = "BUSYR";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 57;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "nCNVR";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 58;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "SCKR";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 59;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "SDOR";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 60;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "DINR";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 61;
	TREE_LEVEL = 0;
	CHILDREN = 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85;
}

DISPLAY_LINE
{
	CHANNEL = "DINR[23]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 62;
	TREE_LEVEL = 1;
	PARENT = 61;
}

DISPLAY_LINE
{
	CHANNEL = "DINR[22]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 63;
	TREE_LEVEL = 1;
	PARENT = 61;
}

DISPLAY_LINE
{
	CHANNEL = "DINR[21]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 64;
	TREE_LEVEL = 1;
	PARENT = 61;
}

DISPLAY_LINE
{
	CHANNEL = "DINR[20]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 65;
	TREE_LEVEL = 1;
	PARENT = 61;
}

DISPLAY_LINE
{
	CHANNEL = "DINR[19]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 66;
	TREE_LEVEL = 1;
	PARENT = 61;
}

DISPLAY_LINE
{
	CHANNEL = "DINR[18]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 67;
	TREE_LEVEL = 1;
	PARENT = 61;
}

DISPLAY_LINE
{
	CHANNEL = "DINR[17]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 68;
	TREE_LEVEL = 1;
	PARENT = 61;
}

DISPLAY_LINE
{
	CHANNEL = "DINR[16]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 69;
	TREE_LEVEL = 1;
	PARENT = 61;
}

DISPLAY_LINE
{
	CHANNEL = "DINR[15]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 70;
	TREE_LEVEL = 1;
	PARENT = 61;
}

DISPLAY_LINE
{
	CHANNEL = "DINR[14]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 71;
	TREE_LEVEL = 1;
	PARENT = 61;
}

DISPLAY_LINE
{
	CHANNEL = "DINR[13]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 72;
	TREE_LEVEL = 1;
	PARENT = 61;
}

DISPLAY_LINE
{
	CHANNEL = "DINR[12]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 73;
	TREE_LEVEL = 1;
	PARENT = 61;
}

DISPLAY_LINE
{
	CHANNEL = "DINR[11]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 74;
	TREE_LEVEL = 1;
	PARENT = 61;
}

DISPLAY_LINE
{
	CHANNEL = "DINR[10]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 75;
	TREE_LEVEL = 1;
	PARENT = 61;
}

DISPLAY_LINE
{
	CHANNEL = "DINR[9]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 76;
	TREE_LEVEL = 1;
	PARENT = 61;
}

DISPLAY_LINE
{
	CHANNEL = "DINR[8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 77;
	TREE_LEVEL = 1;
	PARENT = 61;
}

DISPLAY_LINE
{
	CHANNEL = "DINR[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 78;
	TREE_LEVEL = 1;
	PARENT = 61;
}

DISPLAY_LINE
{
	CHANNEL = "DINR[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 79;
	TREE_LEVEL = 1;
	PARENT = 61;
}

DISPLAY_LINE
{
	CHANNEL = "DINR[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 80;
	TREE_LEVEL = 1;
	PARENT = 61;
}

DISPLAY_LINE
{
	CHANNEL = "DINR[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 81;
	TREE_LEVEL = 1;
	PARENT = 61;
}

DISPLAY_LINE
{
	CHANNEL = "DINR[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 82;
	TREE_LEVEL = 1;
	PARENT = 61;
}

DISPLAY_LINE
{
	CHANNEL = "DINR[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 83;
	TREE_LEVEL = 1;
	PARENT = 61;
}

DISPLAY_LINE
{
	CHANNEL = "DINR[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 84;
	TREE_LEVEL = 1;
	PARENT = 61;
}

DISPLAY_LINE
{
	CHANNEL = "DINR[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 85;
	TREE_LEVEL = 1;
	PARENT = 61;
}

DISPLAY_LINE
{
	CHANNEL = "DOUTR";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 86;
	TREE_LEVEL = 0;
	CHILDREN = 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110;
}

DISPLAY_LINE
{
	CHANNEL = "DOUTR[23]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 87;
	TREE_LEVEL = 1;
	PARENT = 86;
}

DISPLAY_LINE
{
	CHANNEL = "DOUTR[22]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 88;
	TREE_LEVEL = 1;
	PARENT = 86;
}

DISPLAY_LINE
{
	CHANNEL = "DOUTR[21]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 89;
	TREE_LEVEL = 1;
	PARENT = 86;
}

DISPLAY_LINE
{
	CHANNEL = "DOUTR[20]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 90;
	TREE_LEVEL = 1;
	PARENT = 86;
}

DISPLAY_LINE
{
	CHANNEL = "DOUTR[19]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 91;
	TREE_LEVEL = 1;
	PARENT = 86;
}

DISPLAY_LINE
{
	CHANNEL = "DOUTR[18]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 92;
	TREE_LEVEL = 1;
	PARENT = 86;
}

DISPLAY_LINE
{
	CHANNEL = "DOUTR[17]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 93;
	TREE_LEVEL = 1;
	PARENT = 86;
}

DISPLAY_LINE
{
	CHANNEL = "DOUTR[16]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 94;
	TREE_LEVEL = 1;
	PARENT = 86;
}

DISPLAY_LINE
{
	CHANNEL = "DOUTR[15]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 95;
	TREE_LEVEL = 1;
	PARENT = 86;
}

DISPLAY_LINE
{
	CHANNEL = "DOUTR[14]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 96;
	TREE_LEVEL = 1;
	PARENT = 86;
}

DISPLAY_LINE
{
	CHANNEL = "DOUTR[13]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 97;
	TREE_LEVEL = 1;
	PARENT = 86;
}

DISPLAY_LINE
{
	CHANNEL = "DOUTR[12]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 98;
	TREE_LEVEL = 1;
	PARENT = 86;
}

DISPLAY_LINE
{
	CHANNEL = "DOUTR[11]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 99;
	TREE_LEVEL = 1;
	PARENT = 86;
}

DISPLAY_LINE
{
	CHANNEL = "DOUTR[10]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 100;
	TREE_LEVEL = 1;
	PARENT = 86;
}

DISPLAY_LINE
{
	CHANNEL = "DOUTR[9]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 101;
	TREE_LEVEL = 1;
	PARENT = 86;
}

DISPLAY_LINE
{
	CHANNEL = "DOUTR[8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 102;
	TREE_LEVEL = 1;
	PARENT = 86;
}

DISPLAY_LINE
{
	CHANNEL = "DOUTR[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 103;
	TREE_LEVEL = 1;
	PARENT = 86;
}

DISPLAY_LINE
{
	CHANNEL = "DOUTR[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 104;
	TREE_LEVEL = 1;
	PARENT = 86;
}

DISPLAY_LINE
{
	CHANNEL = "DOUTR[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 105;
	TREE_LEVEL = 1;
	PARENT = 86;
}

DISPLAY_LINE
{
	CHANNEL = "DOUTR[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 106;
	TREE_LEVEL = 1;
	PARENT = 86;
}

DISPLAY_LINE
{
	CHANNEL = "DOUTR[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 107;
	TREE_LEVEL = 1;
	PARENT = 86;
}

DISPLAY_LINE
{
	CHANNEL = "DOUTR[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 108;
	TREE_LEVEL = 1;
	PARENT = 86;
}

DISPLAY_LINE
{
	CHANNEL = "DOUTR[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 109;
	TREE_LEVEL = 1;
	PARENT = 86;
}

DISPLAY_LINE
{
	CHANNEL = "DOUTR[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 110;
	TREE_LEVEL = 1;
	PARENT = 86;
}

TIME_BAR
{
	TIME = 30450;
	MASTER = FALSE;
}

TIME_BAR
{
	TIME = 976500;
	MASTER = TRUE;
}

TIME_BAR
{
	TIME = 1627500;
	MASTER = FALSE;
}
;
