Simulator report for AA2380-MAXV_TSTQ9
Fri Apr 04 13:31:07 2025
Quartus II Version 9.1 Build 350 03/24/2010 Service Pack 2 SJ Web Edition


---------------------
; Table of Contents ;
---------------------
  1. Legal Notice
  2. Simulator Summary
  3. Simulator Settings
  4. Simulation Waveforms
  5. Coverage Summary
  6. Complete 1/0-Value Coverage
  7. Missing 1-Value Coverage
  8. Missing 0-Value Coverage
  9. Simulator INI Usage
 10. Simulator Messages



----------------
; Legal Notice ;
----------------
Copyright (C) 1991-2010 Altera Corporation
Your use of Altera Corporation's design tools, logic functions 
and other software and tools, and its AMPP partner logic 
functions, and any output files from any of the foregoing 
(including device programming or simulation files), and any 
associated documentation or information are expressly subject 
to the terms and conditions of the Altera Program License 
Subscription Agreement, Altera MegaCore Function License 
Agreement, or other applicable license agreement, including, 
without limitation, that your use is for the sole purpose of 
programming logic devices manufactured by Altera and sold by 
Altera or its authorized distributors.  Please refer to the 
applicable agreement for further details.



+--------------------------------------------+
; Simulator Summary                          ;
+-----------------------------+--------------+
; Type                        ; Value        ;
+-----------------------------+--------------+
; Simulation Start Time       ; 0 ps         ;
; Simulation End Time         ; 100.0 ms     ;
; Simulation Netlist Size     ; 298 nodes    ;
; Simulation Coverage         ;      68.28 % ;
; Total Number of Transitions ; 2699         ;
; Simulation Breakpoints      ; 0            ;
; Family                      ; MAX II       ;
+-----------------------------+--------------+


+------------------------------------------------------------------------------------------------------------------------------------+
; Simulator Settings                                                                                                                 ;
+--------------------------------------------------------------------------------------------+-----------------------+---------------+
; Option                                                                                     ; Setting               ; Default Value ;
+--------------------------------------------------------------------------------------------+-----------------------+---------------+
; Simulation mode                                                                            ; Functional            ; Timing        ;
; Start time                                                                                 ; 0 ns                  ; 0 ns          ;
; Simulation results format                                                                  ; CVWF                  ;               ;
; Vector input source                                                                        ; F0_ctrl_encoder_E.vwf ;               ;
; Add pins automatically to simulation output waveforms                                      ; Off                   ; On            ;
; Check outputs                                                                              ; Off                   ; Off           ;
; Report simulation coverage                                                                 ; On                    ; On            ;
; Display complete 1/0 value coverage report                                                 ; On                    ; On            ;
; Display missing 1-value coverage report                                                    ; On                    ; On            ;
; Display missing 0-value coverage report                                                    ; On                    ; On            ;
; Detect setup and hold time violations                                                      ; Off                   ; Off           ;
; Detect glitches                                                                            ; Off                   ; Off           ;
; Disable timing delays in Timing Simulation                                                 ; Off                   ; Off           ;
; Generate Signal Activity File                                                              ; Off                   ; Off           ;
; Generate VCD File for PowerPlay Power Analyzer                                             ; Off                   ; Off           ;
; Group bus channels in simulation results                                                   ; Off                   ; Off           ;
; Preserve fewer signal transitions to reduce memory requirements                            ; On                    ; On            ;
; Trigger vector comparison with the specified mode                                          ; INPUT_EDGE            ; INPUT_EDGE    ;
; Disable setup and hold time violations detection in input registers of bi-directional pins ; Off                   ; Off           ;
; Overwrite Waveform Inputs With Simulation Outputs                                          ; On                    ;               ;
; Perform Glitch Filtering in Timing Simulation                                              ; Auto                  ; Auto          ;
+--------------------------------------------------------------------------------------------+-----------------------+---------------+


+----------------------+
; Simulation Waveforms ;
+----------------------+
Waveform report data cannot be output to ASCII.
Please use Quartus II to view the waveform report data.


+--------------------------------------------------------------------+
; Coverage Summary                                                   ;
+-----------------------------------------------------+--------------+
; Type                                                ; Value        ;
+-----------------------------------------------------+--------------+
; Total coverage as a percentage                      ;      68.28 % ;
; Total nodes checked                                 ; 298          ;
; Total output ports checked                          ; 309          ;
; Total output ports with complete 1/0-value coverage ; 211          ;
; Total output ports with no 1/0-value coverage       ; 96           ;
; Total output ports with no 1-value coverage         ; 96           ;
; Total output ports with no 0-value coverage         ; 98           ;
+-----------------------------------------------------+--------------+


The following table displays output ports that toggle between 1 and 0 during simulation.
+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
; Complete 1/0-Value Coverage                                                                                                                                                                             ;
+----------------------------------------------------------------------------------------+---------------------------------------------------------------------------------------------+------------------+
; Node Name                                                                              ; Output Port Name                                                                            ; Output Port Type ;
+----------------------------------------------------------------------------------------+---------------------------------------------------------------------------------------------+------------------+
; |F0_ctrl_encoder_E|pushf                                                               ; |F0_ctrl_encoder_E|pushf                                                                    ; regout           ;
; |F0_ctrl_encoder_E|SRate~0                                                             ; |F0_ctrl_encoder_E|SRate~0                                                                  ; out              ;
; |F0_ctrl_encoder_E|SRate~1                                                             ; |F0_ctrl_encoder_E|SRate~1                                                                  ; out              ;
; |F0_ctrl_encoder_E|SRate~2                                                             ; |F0_ctrl_encoder_E|SRate~2                                                                  ; out              ;
; |F0_ctrl_encoder_E|process_2~0                                                         ; |F0_ctrl_encoder_E|process_2~0                                                              ; out0             ;
; |F0_ctrl_encoder_E|process_2~1                                                         ; |F0_ctrl_encoder_E|process_2~1                                                              ; out0             ;
; |F0_ctrl_encoder_E|SRnAVG~reg0                                                         ; |F0_ctrl_encoder_E|SRnAVG~reg0                                                              ; regout           ;
; |F0_ctrl_encoder_E|process_2~2                                                         ; |F0_ctrl_encoder_E|process_2~2                                                              ; out0             ;
; |F0_ctrl_encoder_E|process_2~3                                                         ; |F0_ctrl_encoder_E|process_2~3                                                              ; out0             ;
; |F0_ctrl_encoder_E|SRcoder~3                                                           ; |F0_ctrl_encoder_E|SRcoder~3                                                                ; out              ;
; |F0_ctrl_encoder_E|SRcoder~4                                                           ; |F0_ctrl_encoder_E|SRcoder~4                                                                ; out              ;
; |F0_ctrl_encoder_E|SRcoder~5                                                           ; |F0_ctrl_encoder_E|SRcoder~5                                                                ; out              ;
; |F0_ctrl_encoder_E|SRcoder~6                                                           ; |F0_ctrl_encoder_E|SRcoder~6                                                                ; out              ;
; |F0_ctrl_encoder_E|SRcoder~7                                                           ; |F0_ctrl_encoder_E|SRcoder~7                                                                ; out              ;
; |F0_ctrl_encoder_E|SRcoder~8                                                           ; |F0_ctrl_encoder_E|SRcoder~8                                                                ; out              ;
; |F0_ctrl_encoder_E|AVGcoder~6                                                          ; |F0_ctrl_encoder_E|AVGcoder~6                                                               ; out              ;
; |F0_ctrl_encoder_E|AVGcoder~7                                                          ; |F0_ctrl_encoder_E|AVGcoder~7                                                               ; out              ;
; |F0_ctrl_encoder_E|AVGcoder[0]~reg0                                                    ; |F0_ctrl_encoder_E|AVGcoder[0]~reg0                                                         ; regout           ;
; |F0_ctrl_encoder_E|process_2~4                                                         ; |F0_ctrl_encoder_E|process_2~4                                                              ; out0             ;
; |F0_ctrl_encoder_E|process_2~5                                                         ; |F0_ctrl_encoder_E|process_2~5                                                              ; out0             ;
; |F0_ctrl_encoder_E|AVGcoder~8                                                          ; |F0_ctrl_encoder_E|AVGcoder~8                                                               ; out              ;
; |F0_ctrl_encoder_E|AVGcoder~9                                                          ; |F0_ctrl_encoder_E|AVGcoder~9                                                               ; out              ;
; |F0_ctrl_encoder_E|AVGcoder~10                                                         ; |F0_ctrl_encoder_E|AVGcoder~10                                                              ; out              ;
; |F0_ctrl_encoder_E|AVGcoder~11                                                         ; |F0_ctrl_encoder_E|AVGcoder~11                                                              ; out              ;
; |F0_ctrl_encoder_E|AVGcoder~12                                                         ; |F0_ctrl_encoder_E|AVGcoder~12                                                              ; out              ;
; |F0_ctrl_encoder_E|AVGcoder~13                                                         ; |F0_ctrl_encoder_E|AVGcoder~13                                                              ; out              ;
; |F0_ctrl_encoder_E|limit[0]                                                            ; |F0_ctrl_encoder_E|limit[0]                                                                 ; regout           ;
; |F0_ctrl_encoder_E|limit[1]                                                            ; |F0_ctrl_encoder_E|limit[1]                                                                 ; regout           ;
; |F0_ctrl_encoder_E|AVGcoder[1]~reg0                                                    ; |F0_ctrl_encoder_E|AVGcoder[1]~reg0                                                         ; regout           ;
; |F0_ctrl_encoder_E|SRcoder[2]                                                          ; |F0_ctrl_encoder_E|SRcoder[2]                                                               ; regout           ;
; |F0_ctrl_encoder_E|SRcoder[1]                                                          ; |F0_ctrl_encoder_E|SRcoder[1]                                                               ; regout           ;
; |F0_ctrl_encoder_E|Dir                                                                 ; |F0_ctrl_encoder_E|Dir                                                                      ; regout           ;
; |F0_ctrl_encoder_E|limit[2]                                                            ; |F0_ctrl_encoder_E|limit[2]                                                                 ; regout           ;
; |F0_ctrl_encoder_E|SRcoder[2]~0                                                        ; |F0_ctrl_encoder_E|SRcoder[2]~0                                                             ; out              ;
; |F0_ctrl_encoder_E|SRcoder[1]~1                                                        ; |F0_ctrl_encoder_E|SRcoder[1]~1                                                             ; out              ;
; |F0_ctrl_encoder_E|SRcoder[0]                                                          ; |F0_ctrl_encoder_E|SRcoder[0]                                                               ; regout           ;
; |F0_ctrl_encoder_E|SRcoder[0]~2                                                        ; |F0_ctrl_encoder_E|SRcoder[0]~2                                                             ; out              ;
; |F0_ctrl_encoder_E|AVGcoder[1]~1                                                       ; |F0_ctrl_encoder_E|AVGcoder[1]~1                                                            ; out0             ;
; |F0_ctrl_encoder_E|AVGcoder[1]~2                                                       ; |F0_ctrl_encoder_E|AVGcoder[1]~2                                                            ; out              ;
; |F0_ctrl_encoder_E|AVGcoder[2]~3                                                       ; |F0_ctrl_encoder_E|AVGcoder[2]~3                                                            ; out0             ;
; |F0_ctrl_encoder_E|Rotate                                                              ; |F0_ctrl_encoder_E|Rotate                                                                   ; regout           ;
; |F0_ctrl_encoder_E|rotary_in[0]                                                        ; |F0_ctrl_encoder_E|rotary_in[0]                                                             ; regout           ;
; |F0_ctrl_encoder_E|rotary_in[1]                                                        ; |F0_ctrl_encoder_E|rotary_in[1]                                                             ; regout           ;
; |F0_ctrl_encoder_E|CLKSLOW                                                             ; |F0_ctrl_encoder_E|CLKSLOW                                                                  ; out              ;
; |F0_ctrl_encoder_E|Ta                                                                  ; |F0_ctrl_encoder_E|Ta                                                                       ; out              ;
; |F0_ctrl_encoder_E|Tb                                                                  ; |F0_ctrl_encoder_E|Tb                                                                       ; out              ;
; |F0_ctrl_encoder_E|nPush                                                               ; |F0_ctrl_encoder_E|nPush                                                                    ; out              ;
; |F0_ctrl_encoder_E|SRate[0]                                                            ; |F0_ctrl_encoder_E|SRate[0]                                                                 ; pin_out          ;
; |F0_ctrl_encoder_E|SRate[1]                                                            ; |F0_ctrl_encoder_E|SRate[1]                                                                 ; pin_out          ;
; |F0_ctrl_encoder_E|SRate[2]                                                            ; |F0_ctrl_encoder_E|SRate[2]                                                                 ; pin_out          ;
; |F0_ctrl_encoder_E|AVGcoder[0]                                                         ; |F0_ctrl_encoder_E|AVGcoder[0]                                                              ; pin_out          ;
; |F0_ctrl_encoder_E|AVGcoder[1]                                                         ; |F0_ctrl_encoder_E|AVGcoder[1]                                                              ; pin_out          ;
; |F0_ctrl_encoder_E|SRnAVG                                                              ; |F0_ctrl_encoder_E|SRnAVG                                                                   ; pin_out          ;
; |F0_ctrl_encoder_E|CODER_DIR                                                           ; |F0_ctrl_encoder_E|CODER_DIR                                                                ; pin_out          ;
; |F0_ctrl_encoder_E|CODER_ROT                                                           ; |F0_ctrl_encoder_E|CODER_ROT                                                                ; pin_out          ;
; |F0_ctrl_encoder_E|CODER_BP                                                            ; |F0_ctrl_encoder_E|CODER_BP                                                                 ; pin_out          ;
; |F0_ctrl_encoder_E|LessThan0~0                                                         ; |F0_ctrl_encoder_E|LessThan0~0                                                              ; out0             ;
; |F0_ctrl_encoder_E|LessThan0~1                                                         ; |F0_ctrl_encoder_E|LessThan0~1                                                              ; out0             ;
; |F0_ctrl_encoder_E|LessThan0~2                                                         ; |F0_ctrl_encoder_E|LessThan0~2                                                              ; out0             ;
; |F0_ctrl_encoder_E|LessThan1~0                                                         ; |F0_ctrl_encoder_E|LessThan1~0                                                              ; out0             ;
; |F0_ctrl_encoder_E|LessThan1~1                                                         ; |F0_ctrl_encoder_E|LessThan1~1                                                              ; out0             ;
; |F0_ctrl_encoder_E|LessThan3~0                                                         ; |F0_ctrl_encoder_E|LessThan3~0                                                              ; out0             ;
; |F0_ctrl_encoder_E|LessThan3~1                                                         ; |F0_ctrl_encoder_E|LessThan3~1                                                              ; out0             ;
; |F0_ctrl_encoder_E|LessThan3~2                                                         ; |F0_ctrl_encoder_E|LessThan3~2                                                              ; out0             ;
; |F0_ctrl_encoder_E|LessThan3~3                                                         ; |F0_ctrl_encoder_E|LessThan3~3                                                              ; out0             ;
; |F0_ctrl_encoder_E|LessThan4~0                                                         ; |F0_ctrl_encoder_E|LessThan4~0                                                              ; out0             ;
; |F0_ctrl_encoder_E|LessThan4~1                                                         ; |F0_ctrl_encoder_E|LessThan4~1                                                              ; out0             ;
; |F0_ctrl_encoder_E|LessThan4~2                                                         ; |F0_ctrl_encoder_E|LessThan4~2                                                              ; out0             ;
; |F0_ctrl_encoder_E|LessThan4~3                                                         ; |F0_ctrl_encoder_E|LessThan4~3                                                              ; out0             ;
; |F0_ctrl_encoder_E|LessThan4~4                                                         ; |F0_ctrl_encoder_E|LessThan4~4                                                              ; out0             ;
; |F0_ctrl_encoder_E|lpm_add_sub:Add4|result_node[0]                                     ; |F0_ctrl_encoder_E|lpm_add_sub:Add4|result_node[0]                                          ; out0             ;
; |F0_ctrl_encoder_E|lpm_add_sub:Add4|result_node[1]                                     ; |F0_ctrl_encoder_E|lpm_add_sub:Add4|result_node[1]                                          ; out0             ;
; |F0_ctrl_encoder_E|lpm_add_sub:Add4|result_node[2]                                     ; |F0_ctrl_encoder_E|lpm_add_sub:Add4|result_node[2]                                          ; out0             ;
; |F0_ctrl_encoder_E|lpm_add_sub:Add4|addcore:adder|unreg_res_node[0]~0                  ; |F0_ctrl_encoder_E|lpm_add_sub:Add4|addcore:adder|unreg_res_node[0]~0                       ; out0             ;
; |F0_ctrl_encoder_E|lpm_add_sub:Add4|addcore:adder|unreg_res_node[0]                    ; |F0_ctrl_encoder_E|lpm_add_sub:Add4|addcore:adder|unreg_res_node[0]                         ; out0             ;
; |F0_ctrl_encoder_E|lpm_add_sub:Add4|addcore:adder|_~0                                  ; |F0_ctrl_encoder_E|lpm_add_sub:Add4|addcore:adder|_~0                                       ; out0             ;
; |F0_ctrl_encoder_E|lpm_add_sub:Add4|addcore:adder|_~3                                  ; |F0_ctrl_encoder_E|lpm_add_sub:Add4|addcore:adder|_~3                                       ; out0             ;
; |F0_ctrl_encoder_E|lpm_add_sub:Add4|addcore:adder|unreg_res_node[1]~2                  ; |F0_ctrl_encoder_E|lpm_add_sub:Add4|addcore:adder|unreg_res_node[1]~2                       ; out0             ;
; |F0_ctrl_encoder_E|lpm_add_sub:Add4|addcore:adder|unreg_res_node[2]                    ; |F0_ctrl_encoder_E|lpm_add_sub:Add4|addcore:adder|unreg_res_node[2]                         ; out0             ;
; |F0_ctrl_encoder_E|lpm_add_sub:Add4|addcore:adder|unreg_res_node[1]                    ; |F0_ctrl_encoder_E|lpm_add_sub:Add4|addcore:adder|unreg_res_node[1]                         ; out0             ;
; |F0_ctrl_encoder_E|lpm_add_sub:Add4|addcore:adder|_~7                                  ; |F0_ctrl_encoder_E|lpm_add_sub:Add4|addcore:adder|_~7                                       ; out0             ;
; |F0_ctrl_encoder_E|lpm_add_sub:Add4|addcore:adder|_~9                                  ; |F0_ctrl_encoder_E|lpm_add_sub:Add4|addcore:adder|_~9                                       ; out0             ;
; |F0_ctrl_encoder_E|lpm_add_sub:Add4|addcore:adder|_~11                                 ; |F0_ctrl_encoder_E|lpm_add_sub:Add4|addcore:adder|_~11                                      ; out0             ;
; |F0_ctrl_encoder_E|lpm_add_sub:Add4|addcore:adder|a_csnbuffer:result_node|cs_buffer[2] ; |F0_ctrl_encoder_E|lpm_add_sub:Add4|addcore:adder|a_csnbuffer:result_node|cs_buffer[2]      ; sout             ;
; |F0_ctrl_encoder_E|lpm_add_sub:Add4|addcore:adder|a_csnbuffer:result_node|cs_buffer[1] ; |F0_ctrl_encoder_E|lpm_add_sub:Add4|addcore:adder|a_csnbuffer:result_node|cs_buffer[1]~COUT ; cout             ;
; |F0_ctrl_encoder_E|lpm_add_sub:Add4|addcore:adder|a_csnbuffer:result_node|cs_buffer[1] ; |F0_ctrl_encoder_E|lpm_add_sub:Add4|addcore:adder|a_csnbuffer:result_node|cs_buffer[1]      ; sout             ;
; |F0_ctrl_encoder_E|lpm_add_sub:Add4|addcore:adder|a_csnbuffer:result_node|cs_buffer[0] ; |F0_ctrl_encoder_E|lpm_add_sub:Add4|addcore:adder|a_csnbuffer:result_node|cs_buffer[0]~COUT ; cout             ;
; |F0_ctrl_encoder_E|lpm_add_sub:Add4|addcore:adder|a_csnbuffer:result_node|cs_buffer[0] ; |F0_ctrl_encoder_E|lpm_add_sub:Add4|addcore:adder|a_csnbuffer:result_node|cs_buffer[0]      ; sout             ;
; |F0_ctrl_encoder_E|lpm_add_sub:Add3|result_node[1]                                     ; |F0_ctrl_encoder_E|lpm_add_sub:Add3|result_node[1]                                          ; out0             ;
; |F0_ctrl_encoder_E|lpm_add_sub:Add3|result_node[2]                                     ; |F0_ctrl_encoder_E|lpm_add_sub:Add3|result_node[2]                                          ; out0             ;
; |F0_ctrl_encoder_E|lpm_add_sub:Add3|result_node[3]                                     ; |F0_ctrl_encoder_E|lpm_add_sub:Add3|result_node[3]                                          ; out0             ;
; |F0_ctrl_encoder_E|lpm_add_sub:Add3|addcore:adder|unreg_res_node[2]~2                  ; |F0_ctrl_encoder_E|lpm_add_sub:Add3|addcore:adder|unreg_res_node[2]~2                       ; out0             ;
; |F0_ctrl_encoder_E|lpm_add_sub:Add3|addcore:adder|unreg_res_node[1]~3                  ; |F0_ctrl_encoder_E|lpm_add_sub:Add3|addcore:adder|unreg_res_node[1]~3                       ; out0             ;
; |F0_ctrl_encoder_E|lpm_add_sub:Add3|addcore:adder|unreg_res_node[3]                    ; |F0_ctrl_encoder_E|lpm_add_sub:Add3|addcore:adder|unreg_res_node[3]                         ; out0             ;
; |F0_ctrl_encoder_E|lpm_add_sub:Add3|addcore:adder|unreg_res_node[2]                    ; |F0_ctrl_encoder_E|lpm_add_sub:Add3|addcore:adder|unreg_res_node[2]                         ; out0             ;
; |F0_ctrl_encoder_E|lpm_add_sub:Add3|addcore:adder|unreg_res_node[1]                    ; |F0_ctrl_encoder_E|lpm_add_sub:Add3|addcore:adder|unreg_res_node[1]                         ; out0             ;
; |F0_ctrl_encoder_E|lpm_add_sub:Add3|addcore:adder|_~5                                  ; |F0_ctrl_encoder_E|lpm_add_sub:Add3|addcore:adder|_~5                                       ; out0             ;
; |F0_ctrl_encoder_E|lpm_add_sub:Add3|addcore:adder|_~9                                  ; |F0_ctrl_encoder_E|lpm_add_sub:Add3|addcore:adder|_~9                                       ; out0             ;
; |F0_ctrl_encoder_E|lpm_add_sub:Add3|addcore:adder|_~10                                 ; |F0_ctrl_encoder_E|lpm_add_sub:Add3|addcore:adder|_~10                                      ; out0             ;
; |F0_ctrl_encoder_E|lpm_add_sub:Add3|addcore:adder|_~11                                 ; |F0_ctrl_encoder_E|lpm_add_sub:Add3|addcore:adder|_~11                                      ; out0             ;
; |F0_ctrl_encoder_E|lpm_add_sub:Add3|addcore:adder|_~12                                 ; |F0_ctrl_encoder_E|lpm_add_sub:Add3|addcore:adder|_~12                                      ; out0             ;
; |F0_ctrl_encoder_E|lpm_add_sub:Add3|addcore:adder|_~13                                 ; |F0_ctrl_encoder_E|lpm_add_sub:Add3|addcore:adder|_~13                                      ; out0             ;
; |F0_ctrl_encoder_E|lpm_add_sub:Add3|addcore:adder|_~14                                 ; |F0_ctrl_encoder_E|lpm_add_sub:Add3|addcore:adder|_~14                                      ; out0             ;
; |F0_ctrl_encoder_E|lpm_add_sub:Add3|addcore:adder|_~15                                 ; |F0_ctrl_encoder_E|lpm_add_sub:Add3|addcore:adder|_~15                                      ; out0             ;
; |F0_ctrl_encoder_E|lpm_add_sub:Add3|addcore:adder|a_csnbuffer:result_node|cs_buffer[3] ; |F0_ctrl_encoder_E|lpm_add_sub:Add3|addcore:adder|a_csnbuffer:result_node|cs_buffer[3]      ; sout             ;
; |F0_ctrl_encoder_E|lpm_add_sub:Add3|addcore:adder|a_csnbuffer:result_node|cs_buffer[2] ; |F0_ctrl_encoder_E|lpm_add_sub:Add3|addcore:adder|a_csnbuffer:result_node|cs_buffer[2]~COUT ; cout             ;
; |F0_ctrl_encoder_E|lpm_add_sub:Add3|addcore:adder|a_csnbuffer:result_node|cs_buffer[2] ; |F0_ctrl_encoder_E|lpm_add_sub:Add3|addcore:adder|a_csnbuffer:result_node|cs_buffer[2]      ; sout             ;
; |F0_ctrl_encoder_E|lpm_add_sub:Add3|addcore:adder|a_csnbuffer:result_node|cs_buffer[1] ; |F0_ctrl_encoder_E|lpm_add_sub:Add3|addcore:adder|a_csnbuffer:result_node|cs_buffer[1]~COUT ; cout             ;
; |F0_ctrl_encoder_E|lpm_add_sub:Add3|addcore:adder|a_csnbuffer:result_node|cs_buffer[1] ; |F0_ctrl_encoder_E|lpm_add_sub:Add3|addcore:adder|a_csnbuffer:result_node|cs_buffer[1]      ; sout             ;
; |F0_ctrl_encoder_E|lpm_add_sub:Add2|result_node[0]                                     ; |F0_ctrl_encoder_E|lpm_add_sub:Add2|result_node[0]                                          ; out0             ;
; |F0_ctrl_encoder_E|lpm_add_sub:Add2|result_node[1]                                     ; |F0_ctrl_encoder_E|lpm_add_sub:Add2|result_node[1]                                          ; out0             ;
; |F0_ctrl_encoder_E|lpm_add_sub:Add2|result_node[2]                                     ; |F0_ctrl_encoder_E|lpm_add_sub:Add2|result_node[2]                                          ; out0             ;
; |F0_ctrl_encoder_E|lpm_add_sub:Add2|addcore:adder|unreg_res_node[0]~0                  ; |F0_ctrl_encoder_E|lpm_add_sub:Add2|addcore:adder|unreg_res_node[0]~0                       ; out0             ;
; |F0_ctrl_encoder_E|lpm_add_sub:Add2|addcore:adder|unreg_res_node[0]                    ; |F0_ctrl_encoder_E|lpm_add_sub:Add2|addcore:adder|unreg_res_node[0]                         ; out0             ;
; |F0_ctrl_encoder_E|lpm_add_sub:Add2|addcore:adder|_~0                                  ; |F0_ctrl_encoder_E|lpm_add_sub:Add2|addcore:adder|_~0                                       ; out0             ;
; |F0_ctrl_encoder_E|lpm_add_sub:Add2|addcore:adder|_~3                                  ; |F0_ctrl_encoder_E|lpm_add_sub:Add2|addcore:adder|_~3                                       ; out0             ;
; |F0_ctrl_encoder_E|lpm_add_sub:Add2|addcore:adder|unreg_res_node[2]~1                  ; |F0_ctrl_encoder_E|lpm_add_sub:Add2|addcore:adder|unreg_res_node[2]~1                       ; out0             ;
; |F0_ctrl_encoder_E|lpm_add_sub:Add2|addcore:adder|unreg_res_node[1]~2                  ; |F0_ctrl_encoder_E|lpm_add_sub:Add2|addcore:adder|unreg_res_node[1]~2                       ; out0             ;
; |F0_ctrl_encoder_E|lpm_add_sub:Add2|addcore:adder|unreg_res_node[2]                    ; |F0_ctrl_encoder_E|lpm_add_sub:Add2|addcore:adder|unreg_res_node[2]                         ; out0             ;
; |F0_ctrl_encoder_E|lpm_add_sub:Add2|addcore:adder|unreg_res_node[1]                    ; |F0_ctrl_encoder_E|lpm_add_sub:Add2|addcore:adder|unreg_res_node[1]                         ; out0             ;
; |F0_ctrl_encoder_E|lpm_add_sub:Add2|addcore:adder|_~6                                  ; |F0_ctrl_encoder_E|lpm_add_sub:Add2|addcore:adder|_~6                                       ; out0             ;
; |F0_ctrl_encoder_E|lpm_add_sub:Add2|addcore:adder|_~7                                  ; |F0_ctrl_encoder_E|lpm_add_sub:Add2|addcore:adder|_~7                                       ; out0             ;
; |F0_ctrl_encoder_E|lpm_add_sub:Add2|addcore:adder|_~8                                  ; |F0_ctrl_encoder_E|lpm_add_sub:Add2|addcore:adder|_~8                                       ; out0             ;
; |F0_ctrl_encoder_E|lpm_add_sub:Add2|addcore:adder|_~9                                  ; |F0_ctrl_encoder_E|lpm_add_sub:Add2|addcore:adder|_~9                                       ; out0             ;
; |F0_ctrl_encoder_E|lpm_add_sub:Add2|addcore:adder|_~10                                 ; |F0_ctrl_encoder_E|lpm_add_sub:Add2|addcore:adder|_~10                                      ; out0             ;
; |F0_ctrl_encoder_E|lpm_add_sub:Add2|addcore:adder|_~11                                 ; |F0_ctrl_encoder_E|lpm_add_sub:Add2|addcore:adder|_~11                                      ; out0             ;
; |F0_ctrl_encoder_E|lpm_add_sub:Add2|addcore:adder|a_csnbuffer:result_node|cs_buffer[2] ; |F0_ctrl_encoder_E|lpm_add_sub:Add2|addcore:adder|a_csnbuffer:result_node|cs_buffer[2]      ; sout             ;
; |F0_ctrl_encoder_E|lpm_add_sub:Add2|addcore:adder|a_csnbuffer:result_node|cs_buffer[1] ; |F0_ctrl_encoder_E|lpm_add_sub:Add2|addcore:adder|a_csnbuffer:result_node|cs_buffer[1]~COUT ; cout             ;
; |F0_ctrl_encoder_E|lpm_add_sub:Add2|addcore:adder|a_csnbuffer:result_node|cs_buffer[1] ; |F0_ctrl_encoder_E|lpm_add_sub:Add2|addcore:adder|a_csnbuffer:result_node|cs_buffer[1]      ; sout             ;
; |F0_ctrl_encoder_E|lpm_add_sub:Add2|addcore:adder|a_csnbuffer:result_node|cs_buffer[0] ; |F0_ctrl_encoder_E|lpm_add_sub:Add2|addcore:adder|a_csnbuffer:result_node|cs_buffer[0]~COUT ; cout             ;
; |F0_ctrl_encoder_E|lpm_add_sub:Add2|addcore:adder|a_csnbuffer:result_node|cs_buffer[0] ; |F0_ctrl_encoder_E|lpm_add_sub:Add2|addcore:adder|a_csnbuffer:result_node|cs_buffer[0]      ; sout             ;
; |F0_ctrl_encoder_E|lpm_add_sub:Add1|result_node[1]                                     ; |F0_ctrl_encoder_E|lpm_add_sub:Add1|result_node[1]                                          ; out0             ;
; |F0_ctrl_encoder_E|lpm_add_sub:Add1|result_node[2]                                     ; |F0_ctrl_encoder_E|lpm_add_sub:Add1|result_node[2]                                          ; out0             ;
; |F0_ctrl_encoder_E|lpm_add_sub:Add1|result_node[3]                                     ; |F0_ctrl_encoder_E|lpm_add_sub:Add1|result_node[3]                                          ; out0             ;
; |F0_ctrl_encoder_E|lpm_add_sub:Add1|addcore:adder|unreg_res_node[3]~1                  ; |F0_ctrl_encoder_E|lpm_add_sub:Add1|addcore:adder|unreg_res_node[3]~1                       ; out0             ;
; |F0_ctrl_encoder_E|lpm_add_sub:Add1|addcore:adder|unreg_res_node[2]~2                  ; |F0_ctrl_encoder_E|lpm_add_sub:Add1|addcore:adder|unreg_res_node[2]~2                       ; out0             ;
; |F0_ctrl_encoder_E|lpm_add_sub:Add1|addcore:adder|unreg_res_node[1]~3                  ; |F0_ctrl_encoder_E|lpm_add_sub:Add1|addcore:adder|unreg_res_node[1]~3                       ; out0             ;
; |F0_ctrl_encoder_E|lpm_add_sub:Add1|addcore:adder|unreg_res_node[3]                    ; |F0_ctrl_encoder_E|lpm_add_sub:Add1|addcore:adder|unreg_res_node[3]                         ; out0             ;
; |F0_ctrl_encoder_E|lpm_add_sub:Add1|addcore:adder|unreg_res_node[2]                    ; |F0_ctrl_encoder_E|lpm_add_sub:Add1|addcore:adder|unreg_res_node[2]                         ; out0             ;
; |F0_ctrl_encoder_E|lpm_add_sub:Add1|addcore:adder|unreg_res_node[1]                    ; |F0_ctrl_encoder_E|lpm_add_sub:Add1|addcore:adder|unreg_res_node[1]                         ; out0             ;
; |F0_ctrl_encoder_E|lpm_add_sub:Add1|addcore:adder|_~4                                  ; |F0_ctrl_encoder_E|lpm_add_sub:Add1|addcore:adder|_~4                                       ; out0             ;
; |F0_ctrl_encoder_E|lpm_add_sub:Add1|addcore:adder|_~5                                  ; |F0_ctrl_encoder_E|lpm_add_sub:Add1|addcore:adder|_~5                                       ; out0             ;
; |F0_ctrl_encoder_E|lpm_add_sub:Add1|addcore:adder|_~9                                  ; |F0_ctrl_encoder_E|lpm_add_sub:Add1|addcore:adder|_~9                                       ; out0             ;
; |F0_ctrl_encoder_E|lpm_add_sub:Add1|addcore:adder|_~10                                 ; |F0_ctrl_encoder_E|lpm_add_sub:Add1|addcore:adder|_~10                                      ; out0             ;
; |F0_ctrl_encoder_E|lpm_add_sub:Add1|addcore:adder|_~11                                 ; |F0_ctrl_encoder_E|lpm_add_sub:Add1|addcore:adder|_~11                                      ; out0             ;
; |F0_ctrl_encoder_E|lpm_add_sub:Add1|addcore:adder|_~12                                 ; |F0_ctrl_encoder_E|lpm_add_sub:Add1|addcore:adder|_~12                                      ; out0             ;
; |F0_ctrl_encoder_E|lpm_add_sub:Add1|addcore:adder|_~13                                 ; |F0_ctrl_encoder_E|lpm_add_sub:Add1|addcore:adder|_~13                                      ; out0             ;
; |F0_ctrl_encoder_E|lpm_add_sub:Add1|addcore:adder|_~14                                 ; |F0_ctrl_encoder_E|lpm_add_sub:Add1|addcore:adder|_~14                                      ; out0             ;
; |F0_ctrl_encoder_E|lpm_add_sub:Add1|addcore:adder|_~15                                 ; |F0_ctrl_encoder_E|lpm_add_sub:Add1|addcore:adder|_~15                                      ; out0             ;
; |F0_ctrl_encoder_E|lpm_add_sub:Add1|addcore:adder|a_csnbuffer:result_node|cs_buffer[3] ; |F0_ctrl_encoder_E|lpm_add_sub:Add1|addcore:adder|a_csnbuffer:result_node|cs_buffer[3]      ; sout             ;
; |F0_ctrl_encoder_E|lpm_add_sub:Add1|addcore:adder|a_csnbuffer:result_node|cs_buffer[2] ; |F0_ctrl_encoder_E|lpm_add_sub:Add1|addcore:adder|a_csnbuffer:result_node|cs_buffer[2]~COUT ; cout             ;
; |F0_ctrl_encoder_E|lpm_add_sub:Add1|addcore:adder|a_csnbuffer:result_node|cs_buffer[2] ; |F0_ctrl_encoder_E|lpm_add_sub:Add1|addcore:adder|a_csnbuffer:result_node|cs_buffer[2]      ; sout             ;
; |F0_ctrl_encoder_E|lpm_add_sub:Add1|addcore:adder|a_csnbuffer:result_node|cs_buffer[1] ; |F0_ctrl_encoder_E|lpm_add_sub:Add1|addcore:adder|a_csnbuffer:result_node|cs_buffer[1]~COUT ; cout             ;
; |F0_ctrl_encoder_E|lpm_add_sub:Add1|addcore:adder|a_csnbuffer:result_node|cs_buffer[1] ; |F0_ctrl_encoder_E|lpm_add_sub:Add1|addcore:adder|a_csnbuffer:result_node|cs_buffer[1]      ; sout             ;
; |F0_ctrl_encoder_E|lpm_add_sub:Add0|result_node[0]                                     ; |F0_ctrl_encoder_E|lpm_add_sub:Add0|result_node[0]                                          ; out0             ;
; |F0_ctrl_encoder_E|lpm_add_sub:Add0|result_node[1]                                     ; |F0_ctrl_encoder_E|lpm_add_sub:Add0|result_node[1]                                          ; out0             ;
; |F0_ctrl_encoder_E|lpm_add_sub:Add0|result_node[2]                                     ; |F0_ctrl_encoder_E|lpm_add_sub:Add0|result_node[2]                                          ; out0             ;
; |F0_ctrl_encoder_E|lpm_add_sub:Add0|addcore:adder|datab_node[0]                        ; |F0_ctrl_encoder_E|lpm_add_sub:Add0|addcore:adder|datab_node[0]                             ; out0             ;
; |F0_ctrl_encoder_E|lpm_add_sub:Add0|addcore:adder|unreg_res_node[0]~0                  ; |F0_ctrl_encoder_E|lpm_add_sub:Add0|addcore:adder|unreg_res_node[0]~0                       ; out0             ;
; |F0_ctrl_encoder_E|lpm_add_sub:Add0|addcore:adder|unreg_res_node[0]                    ; |F0_ctrl_encoder_E|lpm_add_sub:Add0|addcore:adder|unreg_res_node[0]                         ; out0             ;
; |F0_ctrl_encoder_E|lpm_add_sub:Add0|addcore:adder|_~0                                  ; |F0_ctrl_encoder_E|lpm_add_sub:Add0|addcore:adder|_~0                                       ; out0             ;
; |F0_ctrl_encoder_E|lpm_add_sub:Add0|addcore:adder|_~1                                  ; |F0_ctrl_encoder_E|lpm_add_sub:Add0|addcore:adder|_~1                                       ; out0             ;
; |F0_ctrl_encoder_E|lpm_add_sub:Add0|addcore:adder|_~3                                  ; |F0_ctrl_encoder_E|lpm_add_sub:Add0|addcore:adder|_~3                                       ; out0             ;
; |F0_ctrl_encoder_E|lpm_add_sub:Add0|addcore:adder|datab_node[1]                        ; |F0_ctrl_encoder_E|lpm_add_sub:Add0|addcore:adder|datab_node[1]                             ; out0             ;
; |F0_ctrl_encoder_E|lpm_add_sub:Add0|addcore:adder|unreg_res_node[2]~2                  ; |F0_ctrl_encoder_E|lpm_add_sub:Add0|addcore:adder|unreg_res_node[2]~2                       ; out0             ;
; |F0_ctrl_encoder_E|lpm_add_sub:Add0|addcore:adder|unreg_res_node[1]~3                  ; |F0_ctrl_encoder_E|lpm_add_sub:Add0|addcore:adder|unreg_res_node[1]~3                       ; out0             ;
; |F0_ctrl_encoder_E|lpm_add_sub:Add0|addcore:adder|unreg_res_node[2]                    ; |F0_ctrl_encoder_E|lpm_add_sub:Add0|addcore:adder|unreg_res_node[2]                         ; out0             ;
; |F0_ctrl_encoder_E|lpm_add_sub:Add0|addcore:adder|unreg_res_node[1]                    ; |F0_ctrl_encoder_E|lpm_add_sub:Add0|addcore:adder|unreg_res_node[1]                         ; out0             ;
; |F0_ctrl_encoder_E|lpm_add_sub:Add0|addcore:adder|_~6                                  ; |F0_ctrl_encoder_E|lpm_add_sub:Add0|addcore:adder|_~6                                       ; out0             ;
; |F0_ctrl_encoder_E|lpm_add_sub:Add0|addcore:adder|_~8                                  ; |F0_ctrl_encoder_E|lpm_add_sub:Add0|addcore:adder|_~8                                       ; out0             ;
; |F0_ctrl_encoder_E|lpm_add_sub:Add0|addcore:adder|_~9                                  ; |F0_ctrl_encoder_E|lpm_add_sub:Add0|addcore:adder|_~9                                       ; out0             ;
; |F0_ctrl_encoder_E|lpm_add_sub:Add0|addcore:adder|_~12                                 ; |F0_ctrl_encoder_E|lpm_add_sub:Add0|addcore:adder|_~12                                      ; out0             ;
; |F0_ctrl_encoder_E|lpm_add_sub:Add0|addcore:adder|_~15                                 ; |F0_ctrl_encoder_E|lpm_add_sub:Add0|addcore:adder|_~15                                      ; out0             ;
; |F0_ctrl_encoder_E|lpm_add_sub:Add0|addcore:adder|a_csnbuffer:result_node|cs_buffer[2] ; |F0_ctrl_encoder_E|lpm_add_sub:Add0|addcore:adder|a_csnbuffer:result_node|cs_buffer[2]      ; sout             ;
; |F0_ctrl_encoder_E|lpm_add_sub:Add0|addcore:adder|a_csnbuffer:result_node|cs_buffer[1] ; |F0_ctrl_encoder_E|lpm_add_sub:Add0|addcore:adder|a_csnbuffer:result_node|cs_buffer[1]~COUT ; cout             ;
; |F0_ctrl_encoder_E|lpm_add_sub:Add0|addcore:adder|a_csnbuffer:result_node|cs_buffer[1] ; |F0_ctrl_encoder_E|lpm_add_sub:Add0|addcore:adder|a_csnbuffer:result_node|cs_buffer[1]      ; sout             ;
; |F0_ctrl_encoder_E|lpm_add_sub:Add0|addcore:adder|a_csnbuffer:result_node|cs_buffer[0] ; |F0_ctrl_encoder_E|lpm_add_sub:Add0|addcore:adder|a_csnbuffer:result_node|cs_buffer[0]~COUT ; cout             ;
; |F0_ctrl_encoder_E|lpm_add_sub:Add0|addcore:adder|a_csnbuffer:result_node|cs_buffer[0] ; |F0_ctrl_encoder_E|lpm_add_sub:Add0|addcore:adder|a_csnbuffer:result_node|cs_buffer[0]      ; sout             ;
; |F0_ctrl_encoder_E|lpm_mux:Mux1|mux_n9c:auto_generated|_~1                             ; |F0_ctrl_encoder_E|lpm_mux:Mux1|mux_n9c:auto_generated|_~1                                  ; out0             ;
; |F0_ctrl_encoder_E|lpm_mux:Mux1|mux_n9c:auto_generated|_~2                             ; |F0_ctrl_encoder_E|lpm_mux:Mux1|mux_n9c:auto_generated|_~2                                  ; out0             ;
; |F0_ctrl_encoder_E|lpm_mux:Mux1|mux_n9c:auto_generated|_~3                             ; |F0_ctrl_encoder_E|lpm_mux:Mux1|mux_n9c:auto_generated|_~3                                  ; out0             ;
; |F0_ctrl_encoder_E|lpm_mux:Mux1|mux_n9c:auto_generated|_~4                             ; |F0_ctrl_encoder_E|lpm_mux:Mux1|mux_n9c:auto_generated|_~4                                  ; out0             ;
; |F0_ctrl_encoder_E|lpm_mux:Mux1|mux_n9c:auto_generated|_~6                             ; |F0_ctrl_encoder_E|lpm_mux:Mux1|mux_n9c:auto_generated|_~6                                  ; out0             ;
; |F0_ctrl_encoder_E|lpm_mux:Mux1|mux_n9c:auto_generated|_~7                             ; |F0_ctrl_encoder_E|lpm_mux:Mux1|mux_n9c:auto_generated|_~7                                  ; out0             ;
; |F0_ctrl_encoder_E|lpm_mux:Mux1|mux_n9c:auto_generated|_~8                             ; |F0_ctrl_encoder_E|lpm_mux:Mux1|mux_n9c:auto_generated|_~8                                  ; out0             ;
; |F0_ctrl_encoder_E|lpm_mux:Mux1|mux_n9c:auto_generated|_~9                             ; |F0_ctrl_encoder_E|lpm_mux:Mux1|mux_n9c:auto_generated|_~9                                  ; out0             ;
; |F0_ctrl_encoder_E|lpm_mux:Mux1|mux_n9c:auto_generated|_~10                            ; |F0_ctrl_encoder_E|lpm_mux:Mux1|mux_n9c:auto_generated|_~10                                 ; out0             ;
; |F0_ctrl_encoder_E|lpm_mux:Mux1|mux_n9c:auto_generated|_~11                            ; |F0_ctrl_encoder_E|lpm_mux:Mux1|mux_n9c:auto_generated|_~11                                 ; out0             ;
; |F0_ctrl_encoder_E|lpm_mux:Mux1|mux_n9c:auto_generated|_~12                            ; |F0_ctrl_encoder_E|lpm_mux:Mux1|mux_n9c:auto_generated|_~12                                 ; out0             ;
; |F0_ctrl_encoder_E|lpm_mux:Mux1|mux_n9c:auto_generated|_~14                            ; |F0_ctrl_encoder_E|lpm_mux:Mux1|mux_n9c:auto_generated|_~14                                 ; out0             ;
; |F0_ctrl_encoder_E|lpm_mux:Mux1|mux_n9c:auto_generated|_~15                            ; |F0_ctrl_encoder_E|lpm_mux:Mux1|mux_n9c:auto_generated|_~15                                 ; out0             ;
; |F0_ctrl_encoder_E|lpm_mux:Mux1|mux_n9c:auto_generated|_~16                            ; |F0_ctrl_encoder_E|lpm_mux:Mux1|mux_n9c:auto_generated|_~16                                 ; out0             ;
; |F0_ctrl_encoder_E|lpm_mux:Mux1|mux_n9c:auto_generated|_~17                            ; |F0_ctrl_encoder_E|lpm_mux:Mux1|mux_n9c:auto_generated|_~17                                 ; out0             ;
; |F0_ctrl_encoder_E|lpm_mux:Mux1|mux_n9c:auto_generated|result_node[0]~1                ; |F0_ctrl_encoder_E|lpm_mux:Mux1|mux_n9c:auto_generated|result_node[0]~1                     ; out0             ;
; |F0_ctrl_encoder_E|lpm_mux:Mux1|mux_n9c:auto_generated|result_node[0]                  ; |F0_ctrl_encoder_E|lpm_mux:Mux1|mux_n9c:auto_generated|result_node[0]                       ; out0             ;
; |F0_ctrl_encoder_E|lpm_mux:Mux0|mux_n9c:auto_generated|_~0                             ; |F0_ctrl_encoder_E|lpm_mux:Mux0|mux_n9c:auto_generated|_~0                                  ; out0             ;
; |F0_ctrl_encoder_E|lpm_mux:Mux0|mux_n9c:auto_generated|_~1                             ; |F0_ctrl_encoder_E|lpm_mux:Mux0|mux_n9c:auto_generated|_~1                                  ; out0             ;
; |F0_ctrl_encoder_E|lpm_mux:Mux0|mux_n9c:auto_generated|_~3                             ; |F0_ctrl_encoder_E|lpm_mux:Mux0|mux_n9c:auto_generated|_~3                                  ; out0             ;
; |F0_ctrl_encoder_E|lpm_mux:Mux0|mux_n9c:auto_generated|_~5                             ; |F0_ctrl_encoder_E|lpm_mux:Mux0|mux_n9c:auto_generated|_~5                                  ; out0             ;
; |F0_ctrl_encoder_E|lpm_mux:Mux0|mux_n9c:auto_generated|_~6                             ; |F0_ctrl_encoder_E|lpm_mux:Mux0|mux_n9c:auto_generated|_~6                                  ; out0             ;
; |F0_ctrl_encoder_E|lpm_mux:Mux0|mux_n9c:auto_generated|_~7                             ; |F0_ctrl_encoder_E|lpm_mux:Mux0|mux_n9c:auto_generated|_~7                                  ; out0             ;
; |F0_ctrl_encoder_E|lpm_mux:Mux0|mux_n9c:auto_generated|_~8                             ; |F0_ctrl_encoder_E|lpm_mux:Mux0|mux_n9c:auto_generated|_~8                                  ; out0             ;
; |F0_ctrl_encoder_E|lpm_mux:Mux0|mux_n9c:auto_generated|result_node[0]~0                ; |F0_ctrl_encoder_E|lpm_mux:Mux0|mux_n9c:auto_generated|result_node[0]~0                     ; out0             ;
; |F0_ctrl_encoder_E|lpm_mux:Mux0|mux_n9c:auto_generated|_~9                             ; |F0_ctrl_encoder_E|lpm_mux:Mux0|mux_n9c:auto_generated|_~9                                  ; out0             ;
; |F0_ctrl_encoder_E|lpm_mux:Mux0|mux_n9c:auto_generated|_~11                            ; |F0_ctrl_encoder_E|lpm_mux:Mux0|mux_n9c:auto_generated|_~11                                 ; out0             ;
; |F0_ctrl_encoder_E|lpm_mux:Mux0|mux_n9c:auto_generated|_~13                            ; |F0_ctrl_encoder_E|lpm_mux:Mux0|mux_n9c:auto_generated|_~13                                 ; out0             ;
; |F0_ctrl_encoder_E|lpm_mux:Mux0|mux_n9c:auto_generated|_~14                            ; |F0_ctrl_encoder_E|lpm_mux:Mux0|mux_n9c:auto_generated|_~14                                 ; out0             ;
; |F0_ctrl_encoder_E|lpm_mux:Mux0|mux_n9c:auto_generated|_~15                            ; |F0_ctrl_encoder_E|lpm_mux:Mux0|mux_n9c:auto_generated|_~15                                 ; out0             ;
; |F0_ctrl_encoder_E|lpm_mux:Mux0|mux_n9c:auto_generated|_~16                            ; |F0_ctrl_encoder_E|lpm_mux:Mux0|mux_n9c:auto_generated|_~16                                 ; out0             ;
; |F0_ctrl_encoder_E|lpm_mux:Mux0|mux_n9c:auto_generated|result_node[0]~1                ; |F0_ctrl_encoder_E|lpm_mux:Mux0|mux_n9c:auto_generated|result_node[0]~1                     ; out0             ;
; |F0_ctrl_encoder_E|lpm_mux:Mux0|mux_n9c:auto_generated|result_node[0]                  ; |F0_ctrl_encoder_E|lpm_mux:Mux0|mux_n9c:auto_generated|result_node[0]                       ; out0             ;
+----------------------------------------------------------------------------------------+---------------------------------------------------------------------------------------------+------------------+


The following table displays output ports that do not toggle to 1 during simulation.
+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
; Missing 1-Value Coverage                                                                                                                                                                                ;
+----------------------------------------------------------------------------------------+---------------------------------------------------------------------------------------------+------------------+
; Node Name                                                                              ; Output Port Name                                                                            ; Output Port Type ;
+----------------------------------------------------------------------------------------+---------------------------------------------------------------------------------------------+------------------+
; |F0_ctrl_encoder_E|AVGcoder~5                                                          ; |F0_ctrl_encoder_E|AVGcoder~5                                                               ; out              ;
; |F0_ctrl_encoder_E|AVGcoder[2]~reg0                                                    ; |F0_ctrl_encoder_E|AVGcoder[2]~reg0                                                         ; regout           ;
; |F0_ctrl_encoder_E|limit[3]                                                            ; |F0_ctrl_encoder_E|limit[3]                                                                 ; regout           ;
; |F0_ctrl_encoder_E|CONF[0]                                                             ; |F0_ctrl_encoder_E|CONF[0]                                                                  ; out              ;
; |F0_ctrl_encoder_E|CONF[1]                                                             ; |F0_ctrl_encoder_E|CONF[1]                                                                  ; out              ;
; |F0_ctrl_encoder_E|CONF[2]                                                             ; |F0_ctrl_encoder_E|CONF[2]                                                                  ; out              ;
; |F0_ctrl_encoder_E|CONF[3]                                                             ; |F0_ctrl_encoder_E|CONF[3]                                                                  ; out              ;
; |F0_ctrl_encoder_E|DFS[0]                                                              ; |F0_ctrl_encoder_E|DFS[0]                                                                   ; out              ;
; |F0_ctrl_encoder_E|DFS[1]                                                              ; |F0_ctrl_encoder_E|DFS[1]                                                                   ; out              ;
; |F0_ctrl_encoder_E|DFS[2]                                                              ; |F0_ctrl_encoder_E|DFS[2]                                                                   ; out              ;
; |F0_ctrl_encoder_E|AVGcoder[2]                                                         ; |F0_ctrl_encoder_E|AVGcoder[2]                                                              ; pin_out          ;
; |F0_ctrl_encoder_E|SEnDIFF                                                             ; |F0_ctrl_encoder_E|SEnDIFF                                                                  ; pin_out          ;
; |F0_ctrl_encoder_E|HBWon                                                               ; |F0_ctrl_encoder_E|HBWon                                                                    ; pin_out          ;
; |F0_ctrl_encoder_E|AQMODE                                                              ; |F0_ctrl_encoder_E|AQMODE                                                                   ; pin_out          ;
; |F0_ctrl_encoder_E|lpm_add_sub:Add4|addcore:adder|datab_node[0]~0                      ; |F0_ctrl_encoder_E|lpm_add_sub:Add4|addcore:adder|datab_node[0]~0                           ; out0             ;
; |F0_ctrl_encoder_E|lpm_add_sub:Add4|addcore:adder|datab_node[0]                        ; |F0_ctrl_encoder_E|lpm_add_sub:Add4|addcore:adder|datab_node[0]                             ; out0             ;
; |F0_ctrl_encoder_E|lpm_add_sub:Add4|addcore:adder|_~1                                  ; |F0_ctrl_encoder_E|lpm_add_sub:Add4|addcore:adder|_~1                                       ; out0             ;
; |F0_ctrl_encoder_E|lpm_add_sub:Add4|addcore:adder|_~2                                  ; |F0_ctrl_encoder_E|lpm_add_sub:Add4|addcore:adder|_~2                                       ; out0             ;
; |F0_ctrl_encoder_E|lpm_add_sub:Add4|addcore:adder|datab_node[2]~1                      ; |F0_ctrl_encoder_E|lpm_add_sub:Add4|addcore:adder|datab_node[2]~1                           ; out0             ;
; |F0_ctrl_encoder_E|lpm_add_sub:Add4|addcore:adder|datab_node[2]                        ; |F0_ctrl_encoder_E|lpm_add_sub:Add4|addcore:adder|datab_node[2]                             ; out0             ;
; |F0_ctrl_encoder_E|lpm_add_sub:Add4|addcore:adder|datab_node[1]                        ; |F0_ctrl_encoder_E|lpm_add_sub:Add4|addcore:adder|datab_node[1]                             ; out0             ;
; |F0_ctrl_encoder_E|lpm_add_sub:Add4|addcore:adder|unreg_res_node[2]~1                  ; |F0_ctrl_encoder_E|lpm_add_sub:Add4|addcore:adder|unreg_res_node[2]~1                       ; out0             ;
; |F0_ctrl_encoder_E|lpm_add_sub:Add4|addcore:adder|_~4                                  ; |F0_ctrl_encoder_E|lpm_add_sub:Add4|addcore:adder|_~4                                       ; out0             ;
; |F0_ctrl_encoder_E|lpm_add_sub:Add4|addcore:adder|_~5                                  ; |F0_ctrl_encoder_E|lpm_add_sub:Add4|addcore:adder|_~5                                       ; out0             ;
; |F0_ctrl_encoder_E|lpm_add_sub:Add4|addcore:adder|_~6                                  ; |F0_ctrl_encoder_E|lpm_add_sub:Add4|addcore:adder|_~6                                       ; out0             ;
; |F0_ctrl_encoder_E|lpm_add_sub:Add4|addcore:adder|_~8                                  ; |F0_ctrl_encoder_E|lpm_add_sub:Add4|addcore:adder|_~8                                       ; out0             ;
; |F0_ctrl_encoder_E|lpm_add_sub:Add4|addcore:adder|_~10                                 ; |F0_ctrl_encoder_E|lpm_add_sub:Add4|addcore:adder|_~10                                      ; out0             ;
; |F0_ctrl_encoder_E|lpm_add_sub:Add3|addcore:adder|datab_node[0]~0                      ; |F0_ctrl_encoder_E|lpm_add_sub:Add3|addcore:adder|datab_node[0]~0                           ; out0             ;
; |F0_ctrl_encoder_E|lpm_add_sub:Add3|addcore:adder|datab_node[0]                        ; |F0_ctrl_encoder_E|lpm_add_sub:Add3|addcore:adder|datab_node[0]                             ; out0             ;
; |F0_ctrl_encoder_E|lpm_add_sub:Add3|addcore:adder|unreg_res_node[0]~0                  ; |F0_ctrl_encoder_E|lpm_add_sub:Add3|addcore:adder|unreg_res_node[0]~0                       ; out0             ;
; |F0_ctrl_encoder_E|lpm_add_sub:Add3|addcore:adder|unreg_res_node[0]                    ; |F0_ctrl_encoder_E|lpm_add_sub:Add3|addcore:adder|unreg_res_node[0]                         ; out0             ;
; |F0_ctrl_encoder_E|lpm_add_sub:Add3|addcore:adder|_~0                                  ; |F0_ctrl_encoder_E|lpm_add_sub:Add3|addcore:adder|_~0                                       ; out0             ;
; |F0_ctrl_encoder_E|lpm_add_sub:Add3|addcore:adder|_~1                                  ; |F0_ctrl_encoder_E|lpm_add_sub:Add3|addcore:adder|_~1                                       ; out0             ;
; |F0_ctrl_encoder_E|lpm_add_sub:Add3|addcore:adder|_~2                                  ; |F0_ctrl_encoder_E|lpm_add_sub:Add3|addcore:adder|_~2                                       ; out0             ;
; |F0_ctrl_encoder_E|lpm_add_sub:Add3|addcore:adder|_~3                                  ; |F0_ctrl_encoder_E|lpm_add_sub:Add3|addcore:adder|_~3                                       ; out0             ;
; |F0_ctrl_encoder_E|lpm_add_sub:Add3|addcore:adder|datab_node[3]~1                      ; |F0_ctrl_encoder_E|lpm_add_sub:Add3|addcore:adder|datab_node[3]~1                           ; out0             ;
; |F0_ctrl_encoder_E|lpm_add_sub:Add3|addcore:adder|datab_node[3]                        ; |F0_ctrl_encoder_E|lpm_add_sub:Add3|addcore:adder|datab_node[3]                             ; out0             ;
; |F0_ctrl_encoder_E|lpm_add_sub:Add3|addcore:adder|datab_node[2]                        ; |F0_ctrl_encoder_E|lpm_add_sub:Add3|addcore:adder|datab_node[2]                             ; out0             ;
; |F0_ctrl_encoder_E|lpm_add_sub:Add3|addcore:adder|datab_node[1]                        ; |F0_ctrl_encoder_E|lpm_add_sub:Add3|addcore:adder|datab_node[1]                             ; out0             ;
; |F0_ctrl_encoder_E|lpm_add_sub:Add3|addcore:adder|unreg_res_node[3]~1                  ; |F0_ctrl_encoder_E|lpm_add_sub:Add3|addcore:adder|unreg_res_node[3]~1                       ; out0             ;
; |F0_ctrl_encoder_E|lpm_add_sub:Add3|addcore:adder|_~4                                  ; |F0_ctrl_encoder_E|lpm_add_sub:Add3|addcore:adder|_~4                                       ; out0             ;
; |F0_ctrl_encoder_E|lpm_add_sub:Add3|addcore:adder|_~6                                  ; |F0_ctrl_encoder_E|lpm_add_sub:Add3|addcore:adder|_~6                                       ; out0             ;
; |F0_ctrl_encoder_E|lpm_add_sub:Add3|addcore:adder|_~7                                  ; |F0_ctrl_encoder_E|lpm_add_sub:Add3|addcore:adder|_~7                                       ; out0             ;
; |F0_ctrl_encoder_E|lpm_add_sub:Add3|addcore:adder|_~8                                  ; |F0_ctrl_encoder_E|lpm_add_sub:Add3|addcore:adder|_~8                                       ; out0             ;
; |F0_ctrl_encoder_E|lpm_add_sub:Add3|addcore:adder|a_csnbuffer:result_node|cs_buffer[0] ; |F0_ctrl_encoder_E|lpm_add_sub:Add3|addcore:adder|a_csnbuffer:result_node|cs_buffer[0]~COUT ; cout             ;
; |F0_ctrl_encoder_E|lpm_add_sub:Add2|addcore:adder|datab_node[0]~0                      ; |F0_ctrl_encoder_E|lpm_add_sub:Add2|addcore:adder|datab_node[0]~0                           ; out0             ;
; |F0_ctrl_encoder_E|lpm_add_sub:Add2|addcore:adder|datab_node[0]                        ; |F0_ctrl_encoder_E|lpm_add_sub:Add2|addcore:adder|datab_node[0]                             ; out0             ;
; |F0_ctrl_encoder_E|lpm_add_sub:Add2|addcore:adder|_~1                                  ; |F0_ctrl_encoder_E|lpm_add_sub:Add2|addcore:adder|_~1                                       ; out0             ;
; |F0_ctrl_encoder_E|lpm_add_sub:Add2|addcore:adder|_~2                                  ; |F0_ctrl_encoder_E|lpm_add_sub:Add2|addcore:adder|_~2                                       ; out0             ;
; |F0_ctrl_encoder_E|lpm_add_sub:Add2|addcore:adder|datab_node[2]~1                      ; |F0_ctrl_encoder_E|lpm_add_sub:Add2|addcore:adder|datab_node[2]~1                           ; out0             ;
; |F0_ctrl_encoder_E|lpm_add_sub:Add2|addcore:adder|datab_node[2]                        ; |F0_ctrl_encoder_E|lpm_add_sub:Add2|addcore:adder|datab_node[2]                             ; out0             ;
; |F0_ctrl_encoder_E|lpm_add_sub:Add2|addcore:adder|datab_node[1]                        ; |F0_ctrl_encoder_E|lpm_add_sub:Add2|addcore:adder|datab_node[1]                             ; out0             ;
; |F0_ctrl_encoder_E|lpm_add_sub:Add2|addcore:adder|_~4                                  ; |F0_ctrl_encoder_E|lpm_add_sub:Add2|addcore:adder|_~4                                       ; out0             ;
; |F0_ctrl_encoder_E|lpm_add_sub:Add2|addcore:adder|_~5                                  ; |F0_ctrl_encoder_E|lpm_add_sub:Add2|addcore:adder|_~5                                       ; out0             ;
; |F0_ctrl_encoder_E|lpm_add_sub:Add1|addcore:adder|datab_node[0]~0                      ; |F0_ctrl_encoder_E|lpm_add_sub:Add1|addcore:adder|datab_node[0]~0                           ; out0             ;
; |F0_ctrl_encoder_E|lpm_add_sub:Add1|addcore:adder|datab_node[0]                        ; |F0_ctrl_encoder_E|lpm_add_sub:Add1|addcore:adder|datab_node[0]                             ; out0             ;
; |F0_ctrl_encoder_E|lpm_add_sub:Add1|addcore:adder|unreg_res_node[0]~0                  ; |F0_ctrl_encoder_E|lpm_add_sub:Add1|addcore:adder|unreg_res_node[0]~0                       ; out0             ;
; |F0_ctrl_encoder_E|lpm_add_sub:Add1|addcore:adder|unreg_res_node[0]                    ; |F0_ctrl_encoder_E|lpm_add_sub:Add1|addcore:adder|unreg_res_node[0]                         ; out0             ;
; |F0_ctrl_encoder_E|lpm_add_sub:Add1|addcore:adder|_~0                                  ; |F0_ctrl_encoder_E|lpm_add_sub:Add1|addcore:adder|_~0                                       ; out0             ;
; |F0_ctrl_encoder_E|lpm_add_sub:Add1|addcore:adder|_~1                                  ; |F0_ctrl_encoder_E|lpm_add_sub:Add1|addcore:adder|_~1                                       ; out0             ;
; |F0_ctrl_encoder_E|lpm_add_sub:Add1|addcore:adder|_~2                                  ; |F0_ctrl_encoder_E|lpm_add_sub:Add1|addcore:adder|_~2                                       ; out0             ;
; |F0_ctrl_encoder_E|lpm_add_sub:Add1|addcore:adder|_~3                                  ; |F0_ctrl_encoder_E|lpm_add_sub:Add1|addcore:adder|_~3                                       ; out0             ;
; |F0_ctrl_encoder_E|lpm_add_sub:Add1|addcore:adder|datab_node[3]~1                      ; |F0_ctrl_encoder_E|lpm_add_sub:Add1|addcore:adder|datab_node[3]~1                           ; out0             ;
; |F0_ctrl_encoder_E|lpm_add_sub:Add1|addcore:adder|datab_node[3]                        ; |F0_ctrl_encoder_E|lpm_add_sub:Add1|addcore:adder|datab_node[3]                             ; out0             ;
; |F0_ctrl_encoder_E|lpm_add_sub:Add1|addcore:adder|datab_node[2]                        ; |F0_ctrl_encoder_E|lpm_add_sub:Add1|addcore:adder|datab_node[2]                             ; out0             ;
; |F0_ctrl_encoder_E|lpm_add_sub:Add1|addcore:adder|datab_node[1]                        ; |F0_ctrl_encoder_E|lpm_add_sub:Add1|addcore:adder|datab_node[1]                             ; out0             ;
; |F0_ctrl_encoder_E|lpm_add_sub:Add1|addcore:adder|_~6                                  ; |F0_ctrl_encoder_E|lpm_add_sub:Add1|addcore:adder|_~6                                       ; out0             ;
; |F0_ctrl_encoder_E|lpm_add_sub:Add1|addcore:adder|_~7                                  ; |F0_ctrl_encoder_E|lpm_add_sub:Add1|addcore:adder|_~7                                       ; out0             ;
; |F0_ctrl_encoder_E|lpm_add_sub:Add1|addcore:adder|_~8                                  ; |F0_ctrl_encoder_E|lpm_add_sub:Add1|addcore:adder|_~8                                       ; out0             ;
; |F0_ctrl_encoder_E|lpm_add_sub:Add1|addcore:adder|a_csnbuffer:result_node|cs_buffer[0] ; |F0_ctrl_encoder_E|lpm_add_sub:Add1|addcore:adder|a_csnbuffer:result_node|cs_buffer[0]~COUT ; cout             ;
; |F0_ctrl_encoder_E|lpm_add_sub:Add0|result_node[3]                                     ; |F0_ctrl_encoder_E|lpm_add_sub:Add0|result_node[3]                                          ; out0             ;
; |F0_ctrl_encoder_E|lpm_add_sub:Add0|addcore:adder|datab_node[0]~0                      ; |F0_ctrl_encoder_E|lpm_add_sub:Add0|addcore:adder|datab_node[0]~0                           ; out0             ;
; |F0_ctrl_encoder_E|lpm_add_sub:Add0|addcore:adder|_~2                                  ; |F0_ctrl_encoder_E|lpm_add_sub:Add0|addcore:adder|_~2                                       ; out0             ;
; |F0_ctrl_encoder_E|lpm_add_sub:Add0|addcore:adder|datab_node[3]~1                      ; |F0_ctrl_encoder_E|lpm_add_sub:Add0|addcore:adder|datab_node[3]~1                           ; out0             ;
; |F0_ctrl_encoder_E|lpm_add_sub:Add0|addcore:adder|datab_node[3]                        ; |F0_ctrl_encoder_E|lpm_add_sub:Add0|addcore:adder|datab_node[3]                             ; out0             ;
; |F0_ctrl_encoder_E|lpm_add_sub:Add0|addcore:adder|datab_node[2]                        ; |F0_ctrl_encoder_E|lpm_add_sub:Add0|addcore:adder|datab_node[2]                             ; out0             ;
; |F0_ctrl_encoder_E|lpm_add_sub:Add0|addcore:adder|unreg_res_node[3]~1                  ; |F0_ctrl_encoder_E|lpm_add_sub:Add0|addcore:adder|unreg_res_node[3]~1                       ; out0             ;
; |F0_ctrl_encoder_E|lpm_add_sub:Add0|addcore:adder|unreg_res_node[3]                    ; |F0_ctrl_encoder_E|lpm_add_sub:Add0|addcore:adder|unreg_res_node[3]                         ; out0             ;
; |F0_ctrl_encoder_E|lpm_add_sub:Add0|addcore:adder|_~4                                  ; |F0_ctrl_encoder_E|lpm_add_sub:Add0|addcore:adder|_~4                                       ; out0             ;
; |F0_ctrl_encoder_E|lpm_add_sub:Add0|addcore:adder|_~5                                  ; |F0_ctrl_encoder_E|lpm_add_sub:Add0|addcore:adder|_~5                                       ; out0             ;
; |F0_ctrl_encoder_E|lpm_add_sub:Add0|addcore:adder|_~7                                  ; |F0_ctrl_encoder_E|lpm_add_sub:Add0|addcore:adder|_~7                                       ; out0             ;
; |F0_ctrl_encoder_E|lpm_add_sub:Add0|addcore:adder|_~10                                 ; |F0_ctrl_encoder_E|lpm_add_sub:Add0|addcore:adder|_~10                                      ; out0             ;
; |F0_ctrl_encoder_E|lpm_add_sub:Add0|addcore:adder|_~11                                 ; |F0_ctrl_encoder_E|lpm_add_sub:Add0|addcore:adder|_~11                                      ; out0             ;
; |F0_ctrl_encoder_E|lpm_add_sub:Add0|addcore:adder|_~13                                 ; |F0_ctrl_encoder_E|lpm_add_sub:Add0|addcore:adder|_~13                                      ; out0             ;
; |F0_ctrl_encoder_E|lpm_add_sub:Add0|addcore:adder|_~14                                 ; |F0_ctrl_encoder_E|lpm_add_sub:Add0|addcore:adder|_~14                                      ; out0             ;
; |F0_ctrl_encoder_E|lpm_add_sub:Add0|addcore:adder|a_csnbuffer:result_node|cs_buffer[3] ; |F0_ctrl_encoder_E|lpm_add_sub:Add0|addcore:adder|a_csnbuffer:result_node|cs_buffer[3]      ; sout             ;
; |F0_ctrl_encoder_E|lpm_add_sub:Add0|addcore:adder|a_csnbuffer:result_node|cs_buffer[2] ; |F0_ctrl_encoder_E|lpm_add_sub:Add0|addcore:adder|a_csnbuffer:result_node|cs_buffer[2]~COUT ; cout             ;
; |F0_ctrl_encoder_E|lpm_mux:Mux1|mux_n9c:auto_generated|_~0                             ; |F0_ctrl_encoder_E|lpm_mux:Mux1|mux_n9c:auto_generated|_~0                                  ; out0             ;
; |F0_ctrl_encoder_E|lpm_mux:Mux1|mux_n9c:auto_generated|_~5                             ; |F0_ctrl_encoder_E|lpm_mux:Mux1|mux_n9c:auto_generated|_~5                                  ; out0             ;
; |F0_ctrl_encoder_E|lpm_mux:Mux1|mux_n9c:auto_generated|result_node[0]~0                ; |F0_ctrl_encoder_E|lpm_mux:Mux1|mux_n9c:auto_generated|result_node[0]~0                     ; out0             ;
; |F0_ctrl_encoder_E|lpm_mux:Mux1|mux_n9c:auto_generated|_~13                            ; |F0_ctrl_encoder_E|lpm_mux:Mux1|mux_n9c:auto_generated|_~13                                 ; out0             ;
; |F0_ctrl_encoder_E|lpm_mux:Mux0|mux_n9c:auto_generated|_~2                             ; |F0_ctrl_encoder_E|lpm_mux:Mux0|mux_n9c:auto_generated|_~2                                  ; out0             ;
; |F0_ctrl_encoder_E|lpm_mux:Mux0|mux_n9c:auto_generated|_~4                             ; |F0_ctrl_encoder_E|lpm_mux:Mux0|mux_n9c:auto_generated|_~4                                  ; out0             ;
; |F0_ctrl_encoder_E|lpm_mux:Mux0|mux_n9c:auto_generated|_~10                            ; |F0_ctrl_encoder_E|lpm_mux:Mux0|mux_n9c:auto_generated|_~10                                 ; out0             ;
; |F0_ctrl_encoder_E|lpm_mux:Mux0|mux_n9c:auto_generated|_~12                            ; |F0_ctrl_encoder_E|lpm_mux:Mux0|mux_n9c:auto_generated|_~12                                 ; out0             ;
; |F0_ctrl_encoder_E|lpm_mux:Mux0|mux_n9c:auto_generated|_~17                            ; |F0_ctrl_encoder_E|lpm_mux:Mux0|mux_n9c:auto_generated|_~17                                 ; out0             ;
+----------------------------------------------------------------------------------------+---------------------------------------------------------------------------------------------+------------------+


The following table displays output ports that do not toggle to 0 during simulation.
+---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
; Missing 0-Value Coverage                                                                                                                                                                                ;
+----------------------------------------------------------------------------------------+---------------------------------------------------------------------------------------------+------------------+
; Node Name                                                                              ; Output Port Name                                                                            ; Output Port Type ;
+----------------------------------------------------------------------------------------+---------------------------------------------------------------------------------------------+------------------+
; |F0_ctrl_encoder_E|AVGcoder~5                                                          ; |F0_ctrl_encoder_E|AVGcoder~5                                                               ; out              ;
; |F0_ctrl_encoder_E|AVGcoder[2]~reg0                                                    ; |F0_ctrl_encoder_E|AVGcoder[2]~reg0                                                         ; regout           ;
; |F0_ctrl_encoder_E|AVGcoder[0]~0                                                       ; |F0_ctrl_encoder_E|AVGcoder[0]~0                                                            ; out              ;
; |F0_ctrl_encoder_E|AVGcoder[2]~4                                                       ; |F0_ctrl_encoder_E|AVGcoder[2]~4                                                            ; out              ;
; |F0_ctrl_encoder_E|limit[3]                                                            ; |F0_ctrl_encoder_E|limit[3]                                                                 ; regout           ;
; |F0_ctrl_encoder_E|CONF[0]                                                             ; |F0_ctrl_encoder_E|CONF[0]                                                                  ; out              ;
; |F0_ctrl_encoder_E|CONF[1]                                                             ; |F0_ctrl_encoder_E|CONF[1]                                                                  ; out              ;
; |F0_ctrl_encoder_E|CONF[2]                                                             ; |F0_ctrl_encoder_E|CONF[2]                                                                  ; out              ;
; |F0_ctrl_encoder_E|CONF[3]                                                             ; |F0_ctrl_encoder_E|CONF[3]                                                                  ; out              ;
; |F0_ctrl_encoder_E|DFS[0]                                                              ; |F0_ctrl_encoder_E|DFS[0]                                                                   ; out              ;
; |F0_ctrl_encoder_E|DFS[1]                                                              ; |F0_ctrl_encoder_E|DFS[1]                                                                   ; out              ;
; |F0_ctrl_encoder_E|DFS[2]                                                              ; |F0_ctrl_encoder_E|DFS[2]                                                                   ; out              ;
; |F0_ctrl_encoder_E|AVGcoder[2]                                                         ; |F0_ctrl_encoder_E|AVGcoder[2]                                                              ; pin_out          ;
; |F0_ctrl_encoder_E|SEnDIFF                                                             ; |F0_ctrl_encoder_E|SEnDIFF                                                                  ; pin_out          ;
; |F0_ctrl_encoder_E|HBWon                                                               ; |F0_ctrl_encoder_E|HBWon                                                                    ; pin_out          ;
; |F0_ctrl_encoder_E|AQMODE                                                              ; |F0_ctrl_encoder_E|AQMODE                                                                   ; pin_out          ;
; |F0_ctrl_encoder_E|lpm_add_sub:Add4|addcore:adder|datab_node[0]~0                      ; |F0_ctrl_encoder_E|lpm_add_sub:Add4|addcore:adder|datab_node[0]~0                           ; out0             ;
; |F0_ctrl_encoder_E|lpm_add_sub:Add4|addcore:adder|datab_node[0]                        ; |F0_ctrl_encoder_E|lpm_add_sub:Add4|addcore:adder|datab_node[0]                             ; out0             ;
; |F0_ctrl_encoder_E|lpm_add_sub:Add4|addcore:adder|_~1                                  ; |F0_ctrl_encoder_E|lpm_add_sub:Add4|addcore:adder|_~1                                       ; out0             ;
; |F0_ctrl_encoder_E|lpm_add_sub:Add4|addcore:adder|_~2                                  ; |F0_ctrl_encoder_E|lpm_add_sub:Add4|addcore:adder|_~2                                       ; out0             ;
; |F0_ctrl_encoder_E|lpm_add_sub:Add4|addcore:adder|datab_node[2]~1                      ; |F0_ctrl_encoder_E|lpm_add_sub:Add4|addcore:adder|datab_node[2]~1                           ; out0             ;
; |F0_ctrl_encoder_E|lpm_add_sub:Add4|addcore:adder|datab_node[2]                        ; |F0_ctrl_encoder_E|lpm_add_sub:Add4|addcore:adder|datab_node[2]                             ; out0             ;
; |F0_ctrl_encoder_E|lpm_add_sub:Add4|addcore:adder|datab_node[1]                        ; |F0_ctrl_encoder_E|lpm_add_sub:Add4|addcore:adder|datab_node[1]                             ; out0             ;
; |F0_ctrl_encoder_E|lpm_add_sub:Add4|addcore:adder|unreg_res_node[2]~1                  ; |F0_ctrl_encoder_E|lpm_add_sub:Add4|addcore:adder|unreg_res_node[2]~1                       ; out0             ;
; |F0_ctrl_encoder_E|lpm_add_sub:Add4|addcore:adder|_~4                                  ; |F0_ctrl_encoder_E|lpm_add_sub:Add4|addcore:adder|_~4                                       ; out0             ;
; |F0_ctrl_encoder_E|lpm_add_sub:Add4|addcore:adder|_~5                                  ; |F0_ctrl_encoder_E|lpm_add_sub:Add4|addcore:adder|_~5                                       ; out0             ;
; |F0_ctrl_encoder_E|lpm_add_sub:Add4|addcore:adder|_~6                                  ; |F0_ctrl_encoder_E|lpm_add_sub:Add4|addcore:adder|_~6                                       ; out0             ;
; |F0_ctrl_encoder_E|lpm_add_sub:Add4|addcore:adder|_~8                                  ; |F0_ctrl_encoder_E|lpm_add_sub:Add4|addcore:adder|_~8                                       ; out0             ;
; |F0_ctrl_encoder_E|lpm_add_sub:Add4|addcore:adder|_~10                                 ; |F0_ctrl_encoder_E|lpm_add_sub:Add4|addcore:adder|_~10                                      ; out0             ;
; |F0_ctrl_encoder_E|lpm_add_sub:Add3|addcore:adder|datab_node[0]~0                      ; |F0_ctrl_encoder_E|lpm_add_sub:Add3|addcore:adder|datab_node[0]~0                           ; out0             ;
; |F0_ctrl_encoder_E|lpm_add_sub:Add3|addcore:adder|datab_node[0]                        ; |F0_ctrl_encoder_E|lpm_add_sub:Add3|addcore:adder|datab_node[0]                             ; out0             ;
; |F0_ctrl_encoder_E|lpm_add_sub:Add3|addcore:adder|unreg_res_node[0]~0                  ; |F0_ctrl_encoder_E|lpm_add_sub:Add3|addcore:adder|unreg_res_node[0]~0                       ; out0             ;
; |F0_ctrl_encoder_E|lpm_add_sub:Add3|addcore:adder|unreg_res_node[0]                    ; |F0_ctrl_encoder_E|lpm_add_sub:Add3|addcore:adder|unreg_res_node[0]                         ; out0             ;
; |F0_ctrl_encoder_E|lpm_add_sub:Add3|addcore:adder|_~0                                  ; |F0_ctrl_encoder_E|lpm_add_sub:Add3|addcore:adder|_~0                                       ; out0             ;
; |F0_ctrl_encoder_E|lpm_add_sub:Add3|addcore:adder|_~1                                  ; |F0_ctrl_encoder_E|lpm_add_sub:Add3|addcore:adder|_~1                                       ; out0             ;
; |F0_ctrl_encoder_E|lpm_add_sub:Add3|addcore:adder|_~2                                  ; |F0_ctrl_encoder_E|lpm_add_sub:Add3|addcore:adder|_~2                                       ; out0             ;
; |F0_ctrl_encoder_E|lpm_add_sub:Add3|addcore:adder|_~3                                  ; |F0_ctrl_encoder_E|lpm_add_sub:Add3|addcore:adder|_~3                                       ; out0             ;
; |F0_ctrl_encoder_E|lpm_add_sub:Add3|addcore:adder|datab_node[3]~1                      ; |F0_ctrl_encoder_E|lpm_add_sub:Add3|addcore:adder|datab_node[3]~1                           ; out0             ;
; |F0_ctrl_encoder_E|lpm_add_sub:Add3|addcore:adder|datab_node[3]                        ; |F0_ctrl_encoder_E|lpm_add_sub:Add3|addcore:adder|datab_node[3]                             ; out0             ;
; |F0_ctrl_encoder_E|lpm_add_sub:Add3|addcore:adder|datab_node[2]                        ; |F0_ctrl_encoder_E|lpm_add_sub:Add3|addcore:adder|datab_node[2]                             ; out0             ;
; |F0_ctrl_encoder_E|lpm_add_sub:Add3|addcore:adder|datab_node[1]                        ; |F0_ctrl_encoder_E|lpm_add_sub:Add3|addcore:adder|datab_node[1]                             ; out0             ;
; |F0_ctrl_encoder_E|lpm_add_sub:Add3|addcore:adder|unreg_res_node[3]~1                  ; |F0_ctrl_encoder_E|lpm_add_sub:Add3|addcore:adder|unreg_res_node[3]~1                       ; out0             ;
; |F0_ctrl_encoder_E|lpm_add_sub:Add3|addcore:adder|_~4                                  ; |F0_ctrl_encoder_E|lpm_add_sub:Add3|addcore:adder|_~4                                       ; out0             ;
; |F0_ctrl_encoder_E|lpm_add_sub:Add3|addcore:adder|_~6                                  ; |F0_ctrl_encoder_E|lpm_add_sub:Add3|addcore:adder|_~6                                       ; out0             ;
; |F0_ctrl_encoder_E|lpm_add_sub:Add3|addcore:adder|_~7                                  ; |F0_ctrl_encoder_E|lpm_add_sub:Add3|addcore:adder|_~7                                       ; out0             ;
; |F0_ctrl_encoder_E|lpm_add_sub:Add3|addcore:adder|_~8                                  ; |F0_ctrl_encoder_E|lpm_add_sub:Add3|addcore:adder|_~8                                       ; out0             ;
; |F0_ctrl_encoder_E|lpm_add_sub:Add3|addcore:adder|a_csnbuffer:result_node|cs_buffer[0] ; |F0_ctrl_encoder_E|lpm_add_sub:Add3|addcore:adder|a_csnbuffer:result_node|cs_buffer[0]~COUT ; cout             ;
; |F0_ctrl_encoder_E|lpm_add_sub:Add2|addcore:adder|datab_node[0]~0                      ; |F0_ctrl_encoder_E|lpm_add_sub:Add2|addcore:adder|datab_node[0]~0                           ; out0             ;
; |F0_ctrl_encoder_E|lpm_add_sub:Add2|addcore:adder|datab_node[0]                        ; |F0_ctrl_encoder_E|lpm_add_sub:Add2|addcore:adder|datab_node[0]                             ; out0             ;
; |F0_ctrl_encoder_E|lpm_add_sub:Add2|addcore:adder|_~1                                  ; |F0_ctrl_encoder_E|lpm_add_sub:Add2|addcore:adder|_~1                                       ; out0             ;
; |F0_ctrl_encoder_E|lpm_add_sub:Add2|addcore:adder|_~2                                  ; |F0_ctrl_encoder_E|lpm_add_sub:Add2|addcore:adder|_~2                                       ; out0             ;
; |F0_ctrl_encoder_E|lpm_add_sub:Add2|addcore:adder|datab_node[2]~1                      ; |F0_ctrl_encoder_E|lpm_add_sub:Add2|addcore:adder|datab_node[2]~1                           ; out0             ;
; |F0_ctrl_encoder_E|lpm_add_sub:Add2|addcore:adder|datab_node[2]                        ; |F0_ctrl_encoder_E|lpm_add_sub:Add2|addcore:adder|datab_node[2]                             ; out0             ;
; |F0_ctrl_encoder_E|lpm_add_sub:Add2|addcore:adder|datab_node[1]                        ; |F0_ctrl_encoder_E|lpm_add_sub:Add2|addcore:adder|datab_node[1]                             ; out0             ;
; |F0_ctrl_encoder_E|lpm_add_sub:Add2|addcore:adder|_~4                                  ; |F0_ctrl_encoder_E|lpm_add_sub:Add2|addcore:adder|_~4                                       ; out0             ;
; |F0_ctrl_encoder_E|lpm_add_sub:Add2|addcore:adder|_~5                                  ; |F0_ctrl_encoder_E|lpm_add_sub:Add2|addcore:adder|_~5                                       ; out0             ;
; |F0_ctrl_encoder_E|lpm_add_sub:Add1|addcore:adder|datab_node[0]~0                      ; |F0_ctrl_encoder_E|lpm_add_sub:Add1|addcore:adder|datab_node[0]~0                           ; out0             ;
; |F0_ctrl_encoder_E|lpm_add_sub:Add1|addcore:adder|datab_node[0]                        ; |F0_ctrl_encoder_E|lpm_add_sub:Add1|addcore:adder|datab_node[0]                             ; out0             ;
; |F0_ctrl_encoder_E|lpm_add_sub:Add1|addcore:adder|unreg_res_node[0]~0                  ; |F0_ctrl_encoder_E|lpm_add_sub:Add1|addcore:adder|unreg_res_node[0]~0                       ; out0             ;
; |F0_ctrl_encoder_E|lpm_add_sub:Add1|addcore:adder|unreg_res_node[0]                    ; |F0_ctrl_encoder_E|lpm_add_sub:Add1|addcore:adder|unreg_res_node[0]                         ; out0             ;
; |F0_ctrl_encoder_E|lpm_add_sub:Add1|addcore:adder|_~0                                  ; |F0_ctrl_encoder_E|lpm_add_sub:Add1|addcore:adder|_~0                                       ; out0             ;
; |F0_ctrl_encoder_E|lpm_add_sub:Add1|addcore:adder|_~1                                  ; |F0_ctrl_encoder_E|lpm_add_sub:Add1|addcore:adder|_~1                                       ; out0             ;
; |F0_ctrl_encoder_E|lpm_add_sub:Add1|addcore:adder|_~2                                  ; |F0_ctrl_encoder_E|lpm_add_sub:Add1|addcore:adder|_~2                                       ; out0             ;
; |F0_ctrl_encoder_E|lpm_add_sub:Add1|addcore:adder|_~3                                  ; |F0_ctrl_encoder_E|lpm_add_sub:Add1|addcore:adder|_~3                                       ; out0             ;
; |F0_ctrl_encoder_E|lpm_add_sub:Add1|addcore:adder|datab_node[3]~1                      ; |F0_ctrl_encoder_E|lpm_add_sub:Add1|addcore:adder|datab_node[3]~1                           ; out0             ;
; |F0_ctrl_encoder_E|lpm_add_sub:Add1|addcore:adder|datab_node[3]                        ; |F0_ctrl_encoder_E|lpm_add_sub:Add1|addcore:adder|datab_node[3]                             ; out0             ;
; |F0_ctrl_encoder_E|lpm_add_sub:Add1|addcore:adder|datab_node[2]                        ; |F0_ctrl_encoder_E|lpm_add_sub:Add1|addcore:adder|datab_node[2]                             ; out0             ;
; |F0_ctrl_encoder_E|lpm_add_sub:Add1|addcore:adder|datab_node[1]                        ; |F0_ctrl_encoder_E|lpm_add_sub:Add1|addcore:adder|datab_node[1]                             ; out0             ;
; |F0_ctrl_encoder_E|lpm_add_sub:Add1|addcore:adder|_~6                                  ; |F0_ctrl_encoder_E|lpm_add_sub:Add1|addcore:adder|_~6                                       ; out0             ;
; |F0_ctrl_encoder_E|lpm_add_sub:Add1|addcore:adder|_~7                                  ; |F0_ctrl_encoder_E|lpm_add_sub:Add1|addcore:adder|_~7                                       ; out0             ;
; |F0_ctrl_encoder_E|lpm_add_sub:Add1|addcore:adder|_~8                                  ; |F0_ctrl_encoder_E|lpm_add_sub:Add1|addcore:adder|_~8                                       ; out0             ;
; |F0_ctrl_encoder_E|lpm_add_sub:Add1|addcore:adder|a_csnbuffer:result_node|cs_buffer[0] ; |F0_ctrl_encoder_E|lpm_add_sub:Add1|addcore:adder|a_csnbuffer:result_node|cs_buffer[0]~COUT ; cout             ;
; |F0_ctrl_encoder_E|lpm_add_sub:Add0|result_node[3]                                     ; |F0_ctrl_encoder_E|lpm_add_sub:Add0|result_node[3]                                          ; out0             ;
; |F0_ctrl_encoder_E|lpm_add_sub:Add0|addcore:adder|datab_node[0]~0                      ; |F0_ctrl_encoder_E|lpm_add_sub:Add0|addcore:adder|datab_node[0]~0                           ; out0             ;
; |F0_ctrl_encoder_E|lpm_add_sub:Add0|addcore:adder|_~2                                  ; |F0_ctrl_encoder_E|lpm_add_sub:Add0|addcore:adder|_~2                                       ; out0             ;
; |F0_ctrl_encoder_E|lpm_add_sub:Add0|addcore:adder|datab_node[3]~1                      ; |F0_ctrl_encoder_E|lpm_add_sub:Add0|addcore:adder|datab_node[3]~1                           ; out0             ;
; |F0_ctrl_encoder_E|lpm_add_sub:Add0|addcore:adder|datab_node[3]                        ; |F0_ctrl_encoder_E|lpm_add_sub:Add0|addcore:adder|datab_node[3]                             ; out0             ;
; |F0_ctrl_encoder_E|lpm_add_sub:Add0|addcore:adder|datab_node[2]                        ; |F0_ctrl_encoder_E|lpm_add_sub:Add0|addcore:adder|datab_node[2]                             ; out0             ;
; |F0_ctrl_encoder_E|lpm_add_sub:Add0|addcore:adder|unreg_res_node[3]~1                  ; |F0_ctrl_encoder_E|lpm_add_sub:Add0|addcore:adder|unreg_res_node[3]~1                       ; out0             ;
; |F0_ctrl_encoder_E|lpm_add_sub:Add0|addcore:adder|unreg_res_node[3]                    ; |F0_ctrl_encoder_E|lpm_add_sub:Add0|addcore:adder|unreg_res_node[3]                         ; out0             ;
; |F0_ctrl_encoder_E|lpm_add_sub:Add0|addcore:adder|_~4                                  ; |F0_ctrl_encoder_E|lpm_add_sub:Add0|addcore:adder|_~4                                       ; out0             ;
; |F0_ctrl_encoder_E|lpm_add_sub:Add0|addcore:adder|_~5                                  ; |F0_ctrl_encoder_E|lpm_add_sub:Add0|addcore:adder|_~5                                       ; out0             ;
; |F0_ctrl_encoder_E|lpm_add_sub:Add0|addcore:adder|_~7                                  ; |F0_ctrl_encoder_E|lpm_add_sub:Add0|addcore:adder|_~7                                       ; out0             ;
; |F0_ctrl_encoder_E|lpm_add_sub:Add0|addcore:adder|_~10                                 ; |F0_ctrl_encoder_E|lpm_add_sub:Add0|addcore:adder|_~10                                      ; out0             ;
; |F0_ctrl_encoder_E|lpm_add_sub:Add0|addcore:adder|_~11                                 ; |F0_ctrl_encoder_E|lpm_add_sub:Add0|addcore:adder|_~11                                      ; out0             ;
; |F0_ctrl_encoder_E|lpm_add_sub:Add0|addcore:adder|_~13                                 ; |F0_ctrl_encoder_E|lpm_add_sub:Add0|addcore:adder|_~13                                      ; out0             ;
; |F0_ctrl_encoder_E|lpm_add_sub:Add0|addcore:adder|_~14                                 ; |F0_ctrl_encoder_E|lpm_add_sub:Add0|addcore:adder|_~14                                      ; out0             ;
; |F0_ctrl_encoder_E|lpm_add_sub:Add0|addcore:adder|a_csnbuffer:result_node|cs_buffer[3] ; |F0_ctrl_encoder_E|lpm_add_sub:Add0|addcore:adder|a_csnbuffer:result_node|cs_buffer[3]      ; sout             ;
; |F0_ctrl_encoder_E|lpm_add_sub:Add0|addcore:adder|a_csnbuffer:result_node|cs_buffer[2] ; |F0_ctrl_encoder_E|lpm_add_sub:Add0|addcore:adder|a_csnbuffer:result_node|cs_buffer[2]~COUT ; cout             ;
; |F0_ctrl_encoder_E|lpm_mux:Mux1|mux_n9c:auto_generated|_~0                             ; |F0_ctrl_encoder_E|lpm_mux:Mux1|mux_n9c:auto_generated|_~0                                  ; out0             ;
; |F0_ctrl_encoder_E|lpm_mux:Mux1|mux_n9c:auto_generated|_~5                             ; |F0_ctrl_encoder_E|lpm_mux:Mux1|mux_n9c:auto_generated|_~5                                  ; out0             ;
; |F0_ctrl_encoder_E|lpm_mux:Mux1|mux_n9c:auto_generated|result_node[0]~0                ; |F0_ctrl_encoder_E|lpm_mux:Mux1|mux_n9c:auto_generated|result_node[0]~0                     ; out0             ;
; |F0_ctrl_encoder_E|lpm_mux:Mux1|mux_n9c:auto_generated|_~13                            ; |F0_ctrl_encoder_E|lpm_mux:Mux1|mux_n9c:auto_generated|_~13                                 ; out0             ;
; |F0_ctrl_encoder_E|lpm_mux:Mux0|mux_n9c:auto_generated|_~2                             ; |F0_ctrl_encoder_E|lpm_mux:Mux0|mux_n9c:auto_generated|_~2                                  ; out0             ;
; |F0_ctrl_encoder_E|lpm_mux:Mux0|mux_n9c:auto_generated|_~4                             ; |F0_ctrl_encoder_E|lpm_mux:Mux0|mux_n9c:auto_generated|_~4                                  ; out0             ;
; |F0_ctrl_encoder_E|lpm_mux:Mux0|mux_n9c:auto_generated|_~10                            ; |F0_ctrl_encoder_E|lpm_mux:Mux0|mux_n9c:auto_generated|_~10                                 ; out0             ;
; |F0_ctrl_encoder_E|lpm_mux:Mux0|mux_n9c:auto_generated|_~12                            ; |F0_ctrl_encoder_E|lpm_mux:Mux0|mux_n9c:auto_generated|_~12                                 ; out0             ;
; |F0_ctrl_encoder_E|lpm_mux:Mux0|mux_n9c:auto_generated|_~17                            ; |F0_ctrl_encoder_E|lpm_mux:Mux0|mux_n9c:auto_generated|_~17                                 ; out0             ;
+----------------------------------------------------------------------------------------+---------------------------------------------------------------------------------------------+------------------+


+---------------------+
; Simulator INI Usage ;
+--------+------------+
; Option ; Usage      ;
+--------+------------+


+--------------------+
; Simulator Messages ;
+--------------------+
Info: *******************************************************************
Info: Running Quartus II Simulator
    Info: Version 9.1 Build 350 03/24/2010 Service Pack 2 SJ Web Edition
    Info: Processing started: Fri Apr 04 13:31:07 2025
Info: Command: quartus_sim --read_settings_files=on --write_settings_files=off AA2380_MAXV -c AA2380-MAXV_TSTQ9
Info: Using vector source file "D:/Mes documents/P-CAD_PROJECTS/_PROJETS_ON/Projects/Git/_Logiciels_KICAD/AA2380-MAXV_TSTQ9.1/F0_ctrl_encoder_E.vwf"
Info: Overwriting simulation input file with simulation results
    Info: A backup of F0_ctrl_encoder_E.vwf called AA2380-MAXV_TSTQ9.sim_ori.vwf has been created in the db folder
Info: Option to preserve fewer signal transitions to reduce memory requirements is enabled
    Info: Simulation has been partitioned into sub-simulations according to the maximum transition count determined by the engine. Transitions from memory will be flushed out to disk at the end of each sub-simulation to reduce memory requirements.
Info: Simulation partitioned into 1 sub-simulations
Info: Simulation coverage is      68.28 %
Info: Number of transitions in simulation is 2699
Info: Vector file F0_ctrl_encoder_E.vwf is saved in VWF text format. You can compress it into CVWF format in order to reduce file size. For more details please refer to the Quartus II Help.
Info: Quartus II Simulator was successful. 0 errors, 0 warnings
    Info: Peak virtual memory: 153 megabytes
    Info: Processing ended: Fri Apr 04 13:31:07 2025
    Info: Elapsed time: 00:00:00
    Info: Total CPU time (on all processors): 00:00:00


