/*
WARNING: Do NOT edit the input and output ports in this file in a text
editor if you plan to continue editing the block that represents it in
the Block Editor! File corruption is VERY likely to occur.
*/

/*
Copyright (C) 1991-2010 Altera Corporation
Your use of Altera Corporation's design tools, logic functions 
and other software and tools, and its AMPP partner logic 
functions, and any output files from any of the foregoing 
(including device programming or simulation files), and any 
associated documentation or information are expressly subject 
to the terms and conditions of the Altera Program License 
Subscription Agreement, Altera MegaCore Function License 
Agreement, or other applicable license agreement, including, 
without limitation, that your use is for the sole purpose of 
programming logic devices manufactured by Altera and sold by 
Altera or its authorized distributors.  Please refer to the 
applicable agreement for further details.
*/

HEADER
{
	VERSION = 1;
	TIME_UNIT = ns;
	DATA_OFFSET = 0.0;
	DATA_DURATION = 10000000.0;
	SIMULATION_TIME = 10000000.0;
	GRID_PHASE = 0.0;
	GRID_PERIOD = 10.0;
	GRID_DUTY_CYCLE = 50;
}

SIGNAL("CLOCK")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("MASTERIN")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 32;
	LSB_INDEX = 0;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("MASTERIN[31]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "MASTERIN";
}

SIGNAL("MASTERIN[30]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "MASTERIN";
}

SIGNAL("MASTERIN[29]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "MASTERIN";
}

SIGNAL("MASTERIN[28]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "MASTERIN";
}

SIGNAL("MASTERIN[27]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "MASTERIN";
}

SIGNAL("MASTERIN[26]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "MASTERIN";
}

SIGNAL("MASTERIN[25]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "MASTERIN";
}

SIGNAL("MASTERIN[24]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "MASTERIN";
}

SIGNAL("MASTERIN[23]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "MASTERIN";
}

SIGNAL("MASTERIN[22]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "MASTERIN";
}

SIGNAL("MASTERIN[21]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "MASTERIN";
}

SIGNAL("MASTERIN[20]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "MASTERIN";
}

SIGNAL("MASTERIN[19]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "MASTERIN";
}

SIGNAL("MASTERIN[18]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "MASTERIN";
}

SIGNAL("MASTERIN[17]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "MASTERIN";
}

SIGNAL("MASTERIN[16]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "MASTERIN";
}

SIGNAL("MASTERIN[15]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "MASTERIN";
}

SIGNAL("MASTERIN[14]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "MASTERIN";
}

SIGNAL("MASTERIN[13]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "MASTERIN";
}

SIGNAL("MASTERIN[12]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "MASTERIN";
}

SIGNAL("MASTERIN[11]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "MASTERIN";
}

SIGNAL("MASTERIN[10]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "MASTERIN";
}

SIGNAL("MASTERIN[9]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "MASTERIN";
}

SIGNAL("MASTERIN[8]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "MASTERIN";
}

SIGNAL("MASTERIN[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "MASTERIN";
}

SIGNAL("MASTERIN[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "MASTERIN";
}

SIGNAL("MASTERIN[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "MASTERIN";
}

SIGNAL("MASTERIN[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "MASTERIN";
}

SIGNAL("MASTERIN[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "MASTERIN";
}

SIGNAL("MASTERIN[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "MASTERIN";
}

SIGNAL("MASTERIN[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "MASTERIN";
}

SIGNAL("MASTERIN[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "MASTERIN";
}

SIGNAL("MASTEROUT")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 32;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("MASTEROUT[31]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "MASTEROUT";
}

SIGNAL("MASTEROUT[30]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "MASTEROUT";
}

SIGNAL("MASTEROUT[29]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "MASTEROUT";
}

SIGNAL("MASTEROUT[28]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "MASTEROUT";
}

SIGNAL("MASTEROUT[27]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "MASTEROUT";
}

SIGNAL("MASTEROUT[26]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "MASTEROUT";
}

SIGNAL("MASTEROUT[25]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "MASTEROUT";
}

SIGNAL("MASTEROUT[24]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "MASTEROUT";
}

SIGNAL("MASTEROUT[23]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "MASTEROUT";
}

SIGNAL("MASTEROUT[22]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "MASTEROUT";
}

SIGNAL("MASTEROUT[21]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "MASTEROUT";
}

SIGNAL("MASTEROUT[20]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "MASTEROUT";
}

SIGNAL("MASTEROUT[19]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "MASTEROUT";
}

SIGNAL("MASTEROUT[18]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "MASTEROUT";
}

SIGNAL("MASTEROUT[17]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "MASTEROUT";
}

SIGNAL("MASTEROUT[16]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "MASTEROUT";
}

SIGNAL("MASTEROUT[15]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "MASTEROUT";
}

SIGNAL("MASTEROUT[14]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "MASTEROUT";
}

SIGNAL("MASTEROUT[13]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "MASTEROUT";
}

SIGNAL("MASTEROUT[12]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "MASTEROUT";
}

SIGNAL("MASTEROUT[11]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "MASTEROUT";
}

SIGNAL("MASTEROUT[10]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "MASTEROUT";
}

SIGNAL("MASTEROUT[9]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "MASTEROUT";
}

SIGNAL("MASTEROUT[8]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "MASTEROUT";
}

SIGNAL("MASTEROUT[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "MASTEROUT";
}

SIGNAL("MASTEROUT[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "MASTEROUT";
}

SIGNAL("MASTEROUT[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "MASTEROUT";
}

SIGNAL("MASTEROUT[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "MASTEROUT";
}

SIGNAL("MASTEROUT[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "MASTEROUT";
}

SIGNAL("MASTEROUT[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "MASTEROUT";
}

SIGNAL("MASTEROUT[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "MASTEROUT";
}

SIGNAL("MASTEROUT[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "MASTEROUT";
}

SIGNAL("SLAVEIN")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 32;
	LSB_INDEX = 0;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("SLAVEIN[31]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "SLAVEIN";
}

SIGNAL("SLAVEIN[30]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "SLAVEIN";
}

SIGNAL("SLAVEIN[29]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "SLAVEIN";
}

SIGNAL("SLAVEIN[28]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "SLAVEIN";
}

SIGNAL("SLAVEIN[27]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "SLAVEIN";
}

SIGNAL("SLAVEIN[26]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "SLAVEIN";
}

SIGNAL("SLAVEIN[25]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "SLAVEIN";
}

SIGNAL("SLAVEIN[24]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "SLAVEIN";
}

SIGNAL("SLAVEIN[23]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "SLAVEIN";
}

SIGNAL("SLAVEIN[22]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "SLAVEIN";
}

SIGNAL("SLAVEIN[21]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "SLAVEIN";
}

SIGNAL("SLAVEIN[20]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "SLAVEIN";
}

SIGNAL("SLAVEIN[19]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "SLAVEIN";
}

SIGNAL("SLAVEIN[18]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "SLAVEIN";
}

SIGNAL("SLAVEIN[17]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "SLAVEIN";
}

SIGNAL("SLAVEIN[16]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "SLAVEIN";
}

SIGNAL("SLAVEIN[15]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "SLAVEIN";
}

SIGNAL("SLAVEIN[14]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "SLAVEIN";
}

SIGNAL("SLAVEIN[13]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "SLAVEIN";
}

SIGNAL("SLAVEIN[12]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "SLAVEIN";
}

SIGNAL("SLAVEIN[11]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "SLAVEIN";
}

SIGNAL("SLAVEIN[10]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "SLAVEIN";
}

SIGNAL("SLAVEIN[9]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "SLAVEIN";
}

SIGNAL("SLAVEIN[8]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "SLAVEIN";
}

SIGNAL("SLAVEIN[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "SLAVEIN";
}

SIGNAL("SLAVEIN[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "SLAVEIN";
}

SIGNAL("SLAVEIN[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "SLAVEIN";
}

SIGNAL("SLAVEIN[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "SLAVEIN";
}

SIGNAL("SLAVEIN[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "SLAVEIN";
}

SIGNAL("SLAVEIN[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "SLAVEIN";
}

SIGNAL("SLAVEIN[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "SLAVEIN";
}

SIGNAL("SLAVEIN[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "SLAVEIN";
}

SIGNAL("SLAVEOUT")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 32;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("SLAVEOUT[31]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "SLAVEOUT";
}

SIGNAL("SLAVEOUT[30]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "SLAVEOUT";
}

SIGNAL("SLAVEOUT[29]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "SLAVEOUT";
}

SIGNAL("SLAVEOUT[28]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "SLAVEOUT";
}

SIGNAL("SLAVEOUT[27]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "SLAVEOUT";
}

SIGNAL("SLAVEOUT[26]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "SLAVEOUT";
}

SIGNAL("SLAVEOUT[25]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "SLAVEOUT";
}

SIGNAL("SLAVEOUT[24]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "SLAVEOUT";
}

SIGNAL("SLAVEOUT[23]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "SLAVEOUT";
}

SIGNAL("SLAVEOUT[22]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "SLAVEOUT";
}

SIGNAL("SLAVEOUT[21]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "SLAVEOUT";
}

SIGNAL("SLAVEOUT[20]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "SLAVEOUT";
}

SIGNAL("SLAVEOUT[19]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "SLAVEOUT";
}

SIGNAL("SLAVEOUT[18]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "SLAVEOUT";
}

SIGNAL("SLAVEOUT[17]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "SLAVEOUT";
}

SIGNAL("SLAVEOUT[16]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "SLAVEOUT";
}

SIGNAL("SLAVEOUT[15]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "SLAVEOUT";
}

SIGNAL("SLAVEOUT[14]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "SLAVEOUT";
}

SIGNAL("SLAVEOUT[13]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "SLAVEOUT";
}

SIGNAL("SLAVEOUT[12]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "SLAVEOUT";
}

SIGNAL("SLAVEOUT[11]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "SLAVEOUT";
}

SIGNAL("SLAVEOUT[10]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "SLAVEOUT";
}

SIGNAL("SLAVEOUT[9]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "SLAVEOUT";
}

SIGNAL("SLAVEOUT[8]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "SLAVEOUT";
}

SIGNAL("SLAVEOUT[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "SLAVEOUT";
}

SIGNAL("SLAVEOUT[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "SLAVEOUT";
}

SIGNAL("SLAVEOUT[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "SLAVEOUT";
}

SIGNAL("SLAVEOUT[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "SLAVEOUT";
}

SIGNAL("SLAVEOUT[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "SLAVEOUT";
}

SIGNAL("SLAVEOUT[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "SLAVEOUT";
}

SIGNAL("SLAVEOUT[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "SLAVEOUT";
}

SIGNAL("SLAVEOUT[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "SLAVEOUT";
}

SIGNAL("STROBE")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("TEST_SPI_RUN")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("SPI_CLK")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("SPI_MISO")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("SPI_MOSI")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("SPI_nCS")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

TRANSITION_LIST("CLOCK")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1000;
			LEVEL 0 FOR 5000.0;
			LEVEL 1 FOR 5000.0;
		}
	}
}

TRANSITION_LIST("MASTERIN[31]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 8000000.0;
		LEVEL 0 FOR 2000000.0;
	}
}

TRANSITION_LIST("MASTERIN[30]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 6000000.0;
		LEVEL 1 FOR 2000000.0;
		LEVEL 0 FOR 2000000.0;
	}
}

TRANSITION_LIST("MASTERIN[29]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 4000000.0;
		LEVEL 1 FOR 4000000.0;
		LEVEL 0 FOR 2000000.0;
	}
}

TRANSITION_LIST("MASTERIN[28]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 8000000.0;
		LEVEL 0 FOR 2000000.0;
	}
}

TRANSITION_LIST("MASTERIN[27]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2000000.0;
		LEVEL 1 FOR 8000000.0;
	}
}

TRANSITION_LIST("MASTERIN[26]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 2000000.0;
		LEVEL 0 FOR 6000000.0;
		LEVEL 1 FOR 2000000.0;
	}
}

TRANSITION_LIST("MASTERIN[25]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 6000000.0;
		LEVEL 1 FOR 4000000.0;
	}
}

TRANSITION_LIST("MASTERIN[24]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 6000000.0;
		LEVEL 1 FOR 4000000.0;
	}
}

TRANSITION_LIST("MASTERIN[23]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 4000000.0;
		LEVEL 1 FOR 2000000.0;
		LEVEL 0 FOR 2000000.0;
		LEVEL 1 FOR 2000000.0;
	}
}

TRANSITION_LIST("MASTERIN[22]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2000000.0;
		LEVEL 1 FOR 4000000.0;
		LEVEL 0 FOR 4000000.0;
	}
}

TRANSITION_LIST("MASTERIN[21]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 2000000.0;
		LEVEL 0 FOR 2000000.0;
		LEVEL 1 FOR 6000000.0;
	}
}

TRANSITION_LIST("MASTERIN[20]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 8000000.0;
		LEVEL 0 FOR 2000000.0;
	}
}

TRANSITION_LIST("MASTERIN[19]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 2000000.0;
		LEVEL 0 FOR 6000000.0;
		LEVEL 1 FOR 2000000.0;
	}
}

TRANSITION_LIST("MASTERIN[18]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 6000000.0;
		LEVEL 1 FOR 4000000.0;
	}
}

TRANSITION_LIST("MASTERIN[17]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2000000.0;
		LEVEL 1 FOR 8000000.0;
	}
}

TRANSITION_LIST("MASTERIN[16]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2000000.0;
		LEVEL 1 FOR 2000000.0;
		LEVEL 0 FOR 4000000.0;
		LEVEL 1 FOR 2000000.0;
	}
}

TRANSITION_LIST("MASTERIN[15]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 8000000.0;
		LEVEL 1 FOR 2000000.0;
	}
}

TRANSITION_LIST("MASTERIN[14]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2000000.0;
		LEVEL 1 FOR 8000000.0;
	}
}

TRANSITION_LIST("MASTERIN[13]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 2000000.0;
		LEVEL 0 FOR 4000000.0;
		LEVEL 1 FOR 4000000.0;
	}
}

TRANSITION_LIST("MASTERIN[12]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2000000.0;
		LEVEL 1 FOR 2000000.0;
		LEVEL 0 FOR 6000000.0;
	}
}

TRANSITION_LIST("MASTERIN[11]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 2000000.0;
		LEVEL 0 FOR 2000000.0;
		LEVEL 1 FOR 2000000.0;
		LEVEL 0 FOR 4000000.0;
	}
}

TRANSITION_LIST("MASTERIN[10]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 2000000.0;
		LEVEL 0 FOR 2000000.0;
		LEVEL 1 FOR 6000000.0;
	}
}

TRANSITION_LIST("MASTERIN[9]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 2000000.0;
		LEVEL 0 FOR 6000000.0;
		LEVEL 1 FOR 2000000.0;
	}
}

TRANSITION_LIST("MASTERIN[8]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 6000000.0;
		LEVEL 1 FOR 2000000.0;
		LEVEL 0 FOR 2000000.0;
	}
}

TRANSITION_LIST("MASTERIN[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2000000.0;
		LEVEL 1 FOR 2000000.0;
		LEVEL 0 FOR 2000000.0;
		LEVEL 1 FOR 2000000.0;
		LEVEL 0 FOR 2000000.0;
	}
}

TRANSITION_LIST("MASTERIN[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2000000.0;
		LEVEL 1 FOR 4000000.0;
		LEVEL 0 FOR 2000000.0;
		LEVEL 1 FOR 2000000.0;
	}
}

TRANSITION_LIST("MASTERIN[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 4000000.0;
		LEVEL 0 FOR 6000000.0;
	}
}

TRANSITION_LIST("MASTERIN[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2000000.0;
		LEVEL 1 FOR 4000000.0;
		LEVEL 0 FOR 4000000.0;
	}
}

TRANSITION_LIST("MASTERIN[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2000000.0;
		LEVEL 1 FOR 2000000.0;
		LEVEL 0 FOR 4000000.0;
		LEVEL 1 FOR 2000000.0;
	}
}

TRANSITION_LIST("MASTERIN[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2000000.0;
		LEVEL 1 FOR 2000000.0;
		LEVEL 0 FOR 2000000.0;
		LEVEL 1 FOR 4000000.0;
	}
}

TRANSITION_LIST("MASTERIN[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2000000.0;
		LEVEL 1 FOR 6000000.0;
		LEVEL 0 FOR 2000000.0;
	}
}

TRANSITION_LIST("MASTERIN[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 2000000.0;
		LEVEL 0 FOR 2000000.0;
		LEVEL 1 FOR 2000000.0;
		LEVEL 0 FOR 2000000.0;
		LEVEL 1 FOR 2000000.0;
	}
}

TRANSITION_LIST("MASTEROUT[31]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1145000.0;
		LEVEL 1 FOR 8855000.0;
	}
}

TRANSITION_LIST("MASTEROUT[30]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 5145000.0;
		LEVEL 1 FOR 4855000.0;
	}
}

TRANSITION_LIST("MASTEROUT[29]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 7145000.0;
		LEVEL 1 FOR 2000000.0;
		LEVEL 0 FOR 855000.0;
	}
}

TRANSITION_LIST("MASTEROUT[28]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1145000.0;
		LEVEL 1 FOR 8000000.0;
		LEVEL 0 FOR 855000.0;
	}
}

TRANSITION_LIST("MASTEROUT[27]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 10000000.0;
	}
}

TRANSITION_LIST("MASTEROUT[26]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1145000.0;
		LEVEL 1 FOR 2000000.0;
		LEVEL 0 FOR 2000000.0;
		LEVEL 1 FOR 4855000.0;
	}
}

TRANSITION_LIST("MASTEROUT[25]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1145000.0;
		LEVEL 1 FOR 4000000.0;
		LEVEL 0 FOR 4000000.0;
		LEVEL 1 FOR 855000.0;
	}
}

TRANSITION_LIST("MASTEROUT[24]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 3145000.0;
		LEVEL 1 FOR 2000000.0;
		LEVEL 0 FOR 4855000.0;
	}
}

TRANSITION_LIST("MASTEROUT[23]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 7145000.0;
		LEVEL 1 FOR 2855000.0;
	}
}

TRANSITION_LIST("MASTEROUT[22]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 3145000.0;
		LEVEL 1 FOR 2000000.0;
		LEVEL 0 FOR 4855000.0;
	}
}

TRANSITION_LIST("MASTEROUT[21]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1145000.0;
		LEVEL 1 FOR 6000000.0;
		LEVEL 0 FOR 2000000.0;
		LEVEL 1 FOR 855000.0;
	}
}

TRANSITION_LIST("MASTEROUT[20]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 10000000.0;
	}
}

TRANSITION_LIST("MASTEROUT[19]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1145000.0;
		LEVEL 1 FOR 2000000.0;
		LEVEL 0 FOR 2000000.0;
		LEVEL 1 FOR 4855000.0;
	}
}

TRANSITION_LIST("MASTEROUT[18]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1145000.0;
		LEVEL 1 FOR 2000000.0;
		LEVEL 0 FOR 2000000.0;
		LEVEL 1 FOR 2000000.0;
		LEVEL 0 FOR 2855000.0;
	}
}

TRANSITION_LIST("MASTEROUT[17]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 10000000.0;
	}
}

TRANSITION_LIST("MASTEROUT[16]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 3145000.0;
		LEVEL 1 FOR 6855000.0;
	}
}

TRANSITION_LIST("MASTEROUT[15]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1145000.0;
		LEVEL 1 FOR 2000000.0;
		LEVEL 0 FOR 4000000.0;
		LEVEL 1 FOR 2855000.0;
	}
}

TRANSITION_LIST("MASTEROUT[14]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1145000.0;
		LEVEL 1 FOR 2000000.0;
		LEVEL 0 FOR 6000000.0;
		LEVEL 1 FOR 855000.0;
	}
}

TRANSITION_LIST("MASTEROUT[13]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 5145000.0;
		LEVEL 1 FOR 2000000.0;
		LEVEL 0 FOR 2000000.0;
		LEVEL 1 FOR 855000.0;
	}
}

TRANSITION_LIST("MASTEROUT[12]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 3145000.0;
		LEVEL 1 FOR 6855000.0;
	}
}

TRANSITION_LIST("MASTEROUT[11]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1145000.0;
		LEVEL 1 FOR 4000000.0;
		LEVEL 0 FOR 2000000.0;
		LEVEL 1 FOR 2000000.0;
		LEVEL 0 FOR 855000.0;
	}
}

TRANSITION_LIST("MASTEROUT[10]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 5145000.0;
		LEVEL 1 FOR 2000000.0;
		LEVEL 0 FOR 2000000.0;
		LEVEL 1 FOR 855000.0;
	}
}

TRANSITION_LIST("MASTEROUT[9]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 5145000.0;
		LEVEL 1 FOR 2000000.0;
		LEVEL 0 FOR 2855000.0;
	}
}

TRANSITION_LIST("MASTEROUT[8]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 10000000.0;
	}
}

TRANSITION_LIST("MASTEROUT[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 3145000.0;
		LEVEL 1 FOR 2000000.0;
		LEVEL 0 FOR 2000000.0;
		LEVEL 1 FOR 2000000.0;
		LEVEL 0 FOR 855000.0;
	}
}

TRANSITION_LIST("MASTEROUT[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1145000.0;
		LEVEL 1 FOR 4000000.0;
		LEVEL 0 FOR 4855000.0;
	}
}

TRANSITION_LIST("MASTEROUT[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 3145000.0;
		LEVEL 1 FOR 4000000.0;
		LEVEL 0 FOR 2855000.0;
	}
}

TRANSITION_LIST("MASTEROUT[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1145000.0;
		LEVEL 1 FOR 6000000.0;
		LEVEL 0 FOR 2000000.0;
		LEVEL 1 FOR 855000.0;
	}
}

TRANSITION_LIST("MASTEROUT[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1145000.0;
		LEVEL 1 FOR 2000000.0;
		LEVEL 0 FOR 4000000.0;
		LEVEL 1 FOR 2855000.0;
	}
}

TRANSITION_LIST("MASTEROUT[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 5145000.0;
		LEVEL 1 FOR 4855000.0;
	}
}

TRANSITION_LIST("MASTEROUT[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 3145000.0;
		LEVEL 1 FOR 6000000.0;
		LEVEL 0 FOR 855000.0;
	}
}

TRANSITION_LIST("MASTEROUT[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1145000.0;
		LEVEL 1 FOR 2000000.0;
		LEVEL 0 FOR 2000000.0;
		LEVEL 1 FOR 4855000.0;
	}
}

TRANSITION_LIST("SLAVEIN[31]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 10000000.0;
	}
}

TRANSITION_LIST("SLAVEIN[30]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 4000000.0;
		LEVEL 1 FOR 6000000.0;
	}
}

TRANSITION_LIST("SLAVEIN[29]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 6000000.0;
		LEVEL 1 FOR 2000000.0;
		LEVEL 0 FOR 2000000.0;
	}
}

TRANSITION_LIST("SLAVEIN[28]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 8000000.0;
		LEVEL 0 FOR 2000000.0;
	}
}

TRANSITION_LIST("SLAVEIN[27]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 10000000.0;
	}
}

TRANSITION_LIST("SLAVEIN[26]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 2000000.0;
		LEVEL 0 FOR 2000000.0;
		LEVEL 1 FOR 6000000.0;
	}
}

TRANSITION_LIST("SLAVEIN[25]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 4000000.0;
		LEVEL 0 FOR 4000000.0;
		LEVEL 1 FOR 2000000.0;
	}
}

TRANSITION_LIST("SLAVEIN[24]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2000000.0;
		LEVEL 1 FOR 2000000.0;
		LEVEL 0 FOR 6000000.0;
	}
}

TRANSITION_LIST("SLAVEIN[23]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 6000000.0;
		LEVEL 1 FOR 4000000.0;
	}
}

TRANSITION_LIST("SLAVEIN[22]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2000000.0;
		LEVEL 1 FOR 2000000.0;
		LEVEL 0 FOR 6000000.0;
	}
}

TRANSITION_LIST("SLAVEIN[21]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 6000000.0;
		LEVEL 0 FOR 2000000.0;
		LEVEL 1 FOR 2000000.0;
	}
}

TRANSITION_LIST("SLAVEIN[20]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 10000000.0;
	}
}

TRANSITION_LIST("SLAVEIN[19]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 2000000.0;
		LEVEL 0 FOR 2000000.0;
		LEVEL 1 FOR 6000000.0;
	}
}

TRANSITION_LIST("SLAVEIN[18]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 2000000.0;
		LEVEL 0 FOR 2000000.0;
		LEVEL 1 FOR 2000000.0;
		LEVEL 0 FOR 4000000.0;
	}
}

TRANSITION_LIST("SLAVEIN[17]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 10000000.0;
	}
}

TRANSITION_LIST("SLAVEIN[16]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2000000.0;
		LEVEL 1 FOR 8000000.0;
	}
}

TRANSITION_LIST("SLAVEIN[15]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 2000000.0;
		LEVEL 0 FOR 4000000.0;
		LEVEL 1 FOR 4000000.0;
	}
}

TRANSITION_LIST("SLAVEIN[14]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 2000000.0;
		LEVEL 0 FOR 6000000.0;
		LEVEL 1 FOR 2000000.0;
	}
}

TRANSITION_LIST("SLAVEIN[13]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 4000000.0;
		LEVEL 1 FOR 2000000.0;
		LEVEL 0 FOR 2000000.0;
		LEVEL 1 FOR 2000000.0;
	}
}

TRANSITION_LIST("SLAVEIN[12]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2000000.0;
		LEVEL 1 FOR 8000000.0;
	}
}

TRANSITION_LIST("SLAVEIN[11]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 4000000.0;
		LEVEL 0 FOR 2000000.0;
		LEVEL 1 FOR 2000000.0;
		LEVEL 0 FOR 2000000.0;
	}
}

TRANSITION_LIST("SLAVEIN[10]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 4000000.0;
		LEVEL 1 FOR 2000000.0;
		LEVEL 0 FOR 2000000.0;
		LEVEL 1 FOR 2000000.0;
	}
}

TRANSITION_LIST("SLAVEIN[9]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 4000000.0;
		LEVEL 1 FOR 2000000.0;
		LEVEL 0 FOR 4000000.0;
	}
}

TRANSITION_LIST("SLAVEIN[8]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 10000000.0;
	}
}

TRANSITION_LIST("SLAVEIN[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2000000.0;
		LEVEL 1 FOR 2000000.0;
		LEVEL 0 FOR 2000000.0;
		LEVEL 1 FOR 2000000.0;
		LEVEL 0 FOR 2000000.0;
	}
}

TRANSITION_LIST("SLAVEIN[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 4000000.0;
		LEVEL 0 FOR 6000000.0;
	}
}

TRANSITION_LIST("SLAVEIN[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2000000.0;
		LEVEL 1 FOR 4000000.0;
		LEVEL 0 FOR 4000000.0;
	}
}

TRANSITION_LIST("SLAVEIN[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 6000000.0;
		LEVEL 0 FOR 2000000.0;
		LEVEL 1 FOR 2000000.0;
	}
}

TRANSITION_LIST("SLAVEIN[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 2000000.0;
		LEVEL 0 FOR 4000000.0;
		LEVEL 1 FOR 4000000.0;
	}
}

TRANSITION_LIST("SLAVEIN[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 4000000.0;
		LEVEL 1 FOR 6000000.0;
	}
}

TRANSITION_LIST("SLAVEIN[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2000000.0;
		LEVEL 1 FOR 6000000.0;
		LEVEL 0 FOR 2000000.0;
	}
}

TRANSITION_LIST("SLAVEIN[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 2000000.0;
		LEVEL 0 FOR 2000000.0;
		LEVEL 1 FOR 6000000.0;
	}
}

TRANSITION_LIST("SLAVEOUT[31]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1145000.0;
		LEVEL 1 FOR 8000000.0;
		LEVEL 0 FOR 855000.0;
	}
}

TRANSITION_LIST("SLAVEOUT[30]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 7145000.0;
		LEVEL 1 FOR 2000000.0;
		LEVEL 0 FOR 855000.0;
	}
}

TRANSITION_LIST("SLAVEOUT[29]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 5145000.0;
		LEVEL 1 FOR 4000000.0;
		LEVEL 0 FOR 855000.0;
	}
}

TRANSITION_LIST("SLAVEOUT[28]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1145000.0;
		LEVEL 1 FOR 8000000.0;
		LEVEL 0 FOR 855000.0;
	}
}

TRANSITION_LIST("SLAVEOUT[27]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 3145000.0;
		LEVEL 1 FOR 6855000.0;
	}
}

TRANSITION_LIST("SLAVEOUT[26]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1145000.0;
		LEVEL 1 FOR 2000000.0;
		LEVEL 0 FOR 6000000.0;
		LEVEL 1 FOR 855000.0;
	}
}

TRANSITION_LIST("SLAVEOUT[25]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 7145000.0;
		LEVEL 1 FOR 2855000.0;
	}
}

TRANSITION_LIST("SLAVEOUT[24]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 7145000.0;
		LEVEL 1 FOR 2855000.0;
	}
}

TRANSITION_LIST("SLAVEOUT[23]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 5145000.0;
		LEVEL 1 FOR 2000000.0;
		LEVEL 0 FOR 2000000.0;
		LEVEL 1 FOR 855000.0;
	}
}

TRANSITION_LIST("SLAVEOUT[22]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 3145000.0;
		LEVEL 1 FOR 4000000.0;
		LEVEL 0 FOR 2855000.0;
	}
}

TRANSITION_LIST("SLAVEOUT[21]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1145000.0;
		LEVEL 1 FOR 2000000.0;
		LEVEL 0 FOR 2000000.0;
		LEVEL 1 FOR 4855000.0;
	}
}

TRANSITION_LIST("SLAVEOUT[20]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1145000.0;
		LEVEL 1 FOR 8000000.0;
		LEVEL 0 FOR 855000.0;
	}
}

TRANSITION_LIST("SLAVEOUT[19]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1145000.0;
		LEVEL 1 FOR 2000000.0;
		LEVEL 0 FOR 6000000.0;
		LEVEL 1 FOR 855000.0;
	}
}

TRANSITION_LIST("SLAVEOUT[18]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 7145000.0;
		LEVEL 1 FOR 2855000.0;
	}
}

TRANSITION_LIST("SLAVEOUT[17]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 3145000.0;
		LEVEL 1 FOR 6855000.0;
	}
}

TRANSITION_LIST("SLAVEOUT[16]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 3145000.0;
		LEVEL 1 FOR 2000000.0;
		LEVEL 0 FOR 4000000.0;
		LEVEL 1 FOR 855000.0;
	}
}

TRANSITION_LIST("SLAVEOUT[15]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 9145000.0;
		LEVEL 1 FOR 855000.0;
	}
}

TRANSITION_LIST("SLAVEOUT[14]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 3145000.0;
		LEVEL 1 FOR 6855000.0;
	}
}

TRANSITION_LIST("SLAVEOUT[13]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1145000.0;
		LEVEL 1 FOR 2000000.0;
		LEVEL 0 FOR 4000000.0;
		LEVEL 1 FOR 2855000.0;
	}
}

TRANSITION_LIST("SLAVEOUT[12]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 3145000.0;
		LEVEL 1 FOR 2000000.0;
		LEVEL 0 FOR 4855000.0;
	}
}

TRANSITION_LIST("SLAVEOUT[11]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1145000.0;
		LEVEL 1 FOR 2000000.0;
		LEVEL 0 FOR 2000000.0;
		LEVEL 1 FOR 2000000.0;
		LEVEL 0 FOR 2855000.0;
	}
}

TRANSITION_LIST("SLAVEOUT[10]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1145000.0;
		LEVEL 1 FOR 2000000.0;
		LEVEL 0 FOR 2000000.0;
		LEVEL 1 FOR 4855000.0;
	}
}

TRANSITION_LIST("SLAVEOUT[9]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1145000.0;
		LEVEL 1 FOR 2000000.0;
		LEVEL 0 FOR 6000000.0;
		LEVEL 1 FOR 855000.0;
	}
}

TRANSITION_LIST("SLAVEOUT[8]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 7145000.0;
		LEVEL 1 FOR 2000000.0;
		LEVEL 0 FOR 855000.0;
	}
}

TRANSITION_LIST("SLAVEOUT[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 3145000.0;
		LEVEL 1 FOR 2000000.0;
		LEVEL 0 FOR 2000000.0;
		LEVEL 1 FOR 2000000.0;
		LEVEL 0 FOR 855000.0;
	}
}

TRANSITION_LIST("SLAVEOUT[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 3145000.0;
		LEVEL 1 FOR 4000000.0;
		LEVEL 0 FOR 2000000.0;
		LEVEL 1 FOR 855000.0;
	}
}

TRANSITION_LIST("SLAVEOUT[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1145000.0;
		LEVEL 1 FOR 4000000.0;
		LEVEL 0 FOR 4855000.0;
	}
}

TRANSITION_LIST("SLAVEOUT[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 3145000.0;
		LEVEL 1 FOR 4000000.0;
		LEVEL 0 FOR 2855000.0;
	}
}

TRANSITION_LIST("SLAVEOUT[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 3145000.0;
		LEVEL 1 FOR 2000000.0;
		LEVEL 0 FOR 4000000.0;
		LEVEL 1 FOR 855000.0;
	}
}

TRANSITION_LIST("SLAVEOUT[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 3145000.0;
		LEVEL 1 FOR 2000000.0;
		LEVEL 0 FOR 2000000.0;
		LEVEL 1 FOR 2855000.0;
	}
}

TRANSITION_LIST("SLAVEOUT[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 3145000.0;
		LEVEL 1 FOR 6000000.0;
		LEVEL 0 FOR 855000.0;
	}
}

TRANSITION_LIST("SLAVEOUT[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1145000.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 2000000.0;
			LEVEL 0 FOR 2000000.0;
		}
		LEVEL 1 FOR 855000.0;
	}
}

TRANSITION_LIST("STROBE")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 10;
			LEVEL 0 FOR 500000.0;
			LEVEL 1 FOR 500000.0;
		}
	}
}

TRANSITION_LIST("TEST_SPI_RUN")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 500000.0;
		NODE
		{
			REPEAT = 9;
			LEVEL 1 FOR 645000.0;
			LEVEL 0 FOR 355000.0;
		}
		LEVEL 1 FOR 500000.0;
	}
}

TRANSITION_LIST("SPI_CLK")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 505000.0;
		NODE
		{
			REPEAT = 8;
			NODE
			{
				REPEAT = 31;
				LEVEL 1 FOR 10000.0;
				LEVEL 0 FOR 10000.0;
			}
			LEVEL 1 FOR 10000.0;
			LEVEL 0 FOR 370000.0;
		}
		NODE
		{
			REPEAT = 31;
			LEVEL 1 FOR 10000.0;
			LEVEL 0 FOR 10000.0;
		}
		LEVEL 1 FOR 10000.0;
		LEVEL 0 FOR 370000.0;
		NODE
		{
			REPEAT = 24;
			LEVEL 1 FOR 10000.0;
			LEVEL 0 FOR 10000.0;
		}
		LEVEL 1 FOR 10000.0;
		LEVEL 0 FOR 5000.0;
	}
}

TRANSITION_LIST("SPI_MISO")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 525000.0;
		LEVEL 0 FOR 40000.0;
		LEVEL 1 FOR 20000.0;
		LEVEL 0 FOR 20000.0;
		LEVEL 1 FOR 40000.0;
		LEVEL 0 FOR 60000.0;
		LEVEL 1 FOR 20000.0;
		LEVEL 0 FOR 20000.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 40000.0;
			LEVEL 0 FOR 40000.0;
		}
		LEVEL 1 FOR 20000.0;
		LEVEL 0 FOR 80000.0;
		LEVEL 1 FOR 20000.0;
		LEVEL 0 FOR 20000.0;
		LEVEL 1 FOR 40000.0;
		LEVEL 0 FOR 40000.0;
		LEVEL 1 FOR 400000.0;
		LEVEL 0 FOR 40000.0;
		LEVEL 1 FOR 20000.0;
		LEVEL 0 FOR 20000.0;
		LEVEL 1 FOR 40000.0;
		LEVEL 0 FOR 60000.0;
		LEVEL 1 FOR 20000.0;
		LEVEL 0 FOR 20000.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 40000.0;
			LEVEL 0 FOR 40000.0;
		}
		LEVEL 1 FOR 20000.0;
		LEVEL 0 FOR 80000.0;
		LEVEL 1 FOR 20000.0;
		LEVEL 0 FOR 20000.0;
		LEVEL 1 FOR 40000.0;
		LEVEL 0 FOR 40000.0;
		LEVEL 1 FOR 400000.0;
		LEVEL 0 FOR 40000.0;
		LEVEL 1 FOR 20000.0;
		LEVEL 0 FOR 40000.0;
		LEVEL 1 FOR 40000.0;
		LEVEL 0 FOR 20000.0;
		LEVEL 1 FOR 40000.0;
		LEVEL 0 FOR 80000.0;
		LEVEL 1 FOR 20000.0;
		LEVEL 0 FOR 60000.0;
		LEVEL 1 FOR 40000.0;
		LEVEL 0 FOR 60000.0;
		LEVEL 1 FOR 80000.0;
		LEVEL 0 FOR 40000.0;
		LEVEL 1 FOR 20000.0;
		LEVEL 0 FOR 20000.0;
		LEVEL 1 FOR 380000.0;
		LEVEL 0 FOR 40000.0;
		LEVEL 1 FOR 20000.0;
		LEVEL 0 FOR 40000.0;
		LEVEL 1 FOR 40000.0;
		LEVEL 0 FOR 20000.0;
		LEVEL 1 FOR 40000.0;
		LEVEL 0 FOR 80000.0;
		LEVEL 1 FOR 20000.0;
		LEVEL 0 FOR 60000.0;
		LEVEL 1 FOR 40000.0;
		LEVEL 0 FOR 60000.0;
		LEVEL 1 FOR 80000.0;
		LEVEL 0 FOR 40000.0;
		LEVEL 1 FOR 20000.0;
		LEVEL 0 FOR 20000.0;
		LEVEL 1 FOR 400000.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20000.0;
			LEVEL 1 FOR 20000.0;
		}
		LEVEL 0 FOR 80000.0;
		LEVEL 1 FOR 20000.0;
		LEVEL 0 FOR 20000.0;
		LEVEL 1 FOR 40000.0;
		LEVEL 0 FOR 20000.0;
		LEVEL 1 FOR 20000.0;
		LEVEL 0 FOR 40000.0;
		LEVEL 1 FOR 40000.0;
		LEVEL 0 FOR 20000.0;
		LEVEL 1 FOR 40000.0;
		LEVEL 0 FOR 60000.0;
		LEVEL 1 FOR 40000.0;
		LEVEL 0 FOR 20000.0;
		LEVEL 1 FOR 460000.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20000.0;
			LEVEL 1 FOR 20000.0;
		}
		LEVEL 0 FOR 80000.0;
		LEVEL 1 FOR 20000.0;
		LEVEL 0 FOR 20000.0;
		LEVEL 1 FOR 40000.0;
		LEVEL 0 FOR 20000.0;
		LEVEL 1 FOR 20000.0;
		LEVEL 0 FOR 40000.0;
		LEVEL 1 FOR 40000.0;
		LEVEL 0 FOR 20000.0;
		LEVEL 1 FOR 40000.0;
		LEVEL 0 FOR 60000.0;
		LEVEL 1 FOR 40000.0;
		LEVEL 0 FOR 20000.0;
		LEVEL 1 FOR 500000.0;
		LEVEL 0 FOR 20000.0;
		LEVEL 1 FOR 20000.0;
		LEVEL 0 FOR 40000.0;
		LEVEL 1 FOR 20000.0;
		LEVEL 0 FOR 60000.0;
		LEVEL 1 FOR 20000.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 40000.0;
			LEVEL 1 FOR 40000.0;
		}
		LEVEL 0 FOR 60000.0;
		LEVEL 1 FOR 20000.0;
		LEVEL 0 FOR 60000.0;
		LEVEL 1 FOR 520000.0;
		LEVEL 0 FOR 20000.0;
		LEVEL 1 FOR 20000.0;
		LEVEL 0 FOR 40000.0;
		LEVEL 1 FOR 20000.0;
		LEVEL 0 FOR 60000.0;
		LEVEL 1 FOR 20000.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 40000.0;
			LEVEL 1 FOR 40000.0;
		}
		LEVEL 0 FOR 60000.0;
		LEVEL 1 FOR 20000.0;
		LEVEL 0 FOR 60000.0;
		LEVEL 1 FOR 480000.0;
		LEVEL 0 FOR 60000.0;
		LEVEL 1 FOR 40000.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 20000.0;
			LEVEL 1 FOR 20000.0;
		}
		LEVEL 0 FOR 40000.0;
		LEVEL 1 FOR 100000.0;
		LEVEL 0 FOR 20000.0;
		LEVEL 1 FOR 20000.0;
		LEVEL 0 FOR 100000.0;
		LEVEL 1 FOR 60000.0;
		LEVEL 0 FOR 20000.0;
		LEVEL 1 FOR 420000.0;
		LEVEL 0 FOR 60000.0;
		LEVEL 1 FOR 40000.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 20000.0;
			LEVEL 1 FOR 20000.0;
		}
		LEVEL 0 FOR 40000.0;
		LEVEL 1 FOR 100000.0;
		LEVEL 0 FOR 20000.0;
		LEVEL 1 FOR 20000.0;
		LEVEL 0 FOR 55000.0;
	}
}

TRANSITION_LIST("SPI_MOSI")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 525000.0;
		LEVEL 0 FOR 40000.0;
		LEVEL 1 FOR 20000.0;
		LEVEL 0 FOR 20000.0;
		LEVEL 1 FOR 20000.0;
		LEVEL 0 FOR 80000.0;
		LEVEL 1 FOR 60000.0;
		LEVEL 0 FOR 100000.0;
		LEVEL 1 FOR 20000.0;
		LEVEL 0 FOR 20000.0;
		LEVEL 1 FOR 60000.0;
		LEVEL 0 FOR 60000.0;
		LEVEL 1 FOR 20000.0;
		LEVEL 0 FOR 80000.0;
		LEVEL 1 FOR 400000.0;
		LEVEL 0 FOR 40000.0;
		LEVEL 1 FOR 20000.0;
		LEVEL 0 FOR 20000.0;
		LEVEL 1 FOR 20000.0;
		LEVEL 0 FOR 80000.0;
		LEVEL 1 FOR 60000.0;
		LEVEL 0 FOR 100000.0;
		LEVEL 1 FOR 20000.0;
		LEVEL 0 FOR 20000.0;
		LEVEL 1 FOR 60000.0;
		LEVEL 0 FOR 60000.0;
		LEVEL 1 FOR 20000.0;
		LEVEL 0 FOR 80000.0;
		LEVEL 1 FOR 400000.0;
		LEVEL 0 FOR 40000.0;
		LEVEL 1 FOR 40000.0;
		LEVEL 0 FOR 80000.0;
		LEVEL 1 FOR 20000.0;
		LEVEL 0 FOR 20000.0;
		LEVEL 1 FOR 20000.0;
		LEVEL 0 FOR 40000.0;
		LEVEL 1 FOR 40000.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20000.0;
			LEVEL 1 FOR 20000.0;
		}
		LEVEL 0 FOR 80000.0;
		LEVEL 1 FOR 140000.0;
		LEVEL 0 FOR 20000.0;
		LEVEL 1 FOR 380000.0;
		LEVEL 0 FOR 40000.0;
		LEVEL 1 FOR 40000.0;
		LEVEL 0 FOR 80000.0;
		LEVEL 1 FOR 20000.0;
		LEVEL 0 FOR 20000.0;
		LEVEL 1 FOR 20000.0;
		LEVEL 0 FOR 40000.0;
		LEVEL 1 FOR 40000.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20000.0;
			LEVEL 1 FOR 20000.0;
		}
		LEVEL 0 FOR 80000.0;
		LEVEL 1 FOR 140000.0;
		LEVEL 0 FOR 20000.0;
		LEVEL 1 FOR 380000.0;
		LEVEL 0 FOR 20000.0;
		LEVEL 1 FOR 60000.0;
		LEVEL 0 FOR 60000.0;
		LEVEL 1 FOR 80000.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 40000.0;
			LEVEL 1 FOR 20000.0;
		}
		LEVEL 0 FOR 40000.0;
		LEVEL 1 FOR 40000.0;
		LEVEL 0 FOR 60000.0;
		LEVEL 1 FOR 20000.0;
		LEVEL 0 FOR 20000.0;
		LEVEL 1 FOR 20000.0;
		LEVEL 0 FOR 40000.0;
		LEVEL 1 FOR 420000.0;
		LEVEL 0 FOR 20000.0;
		LEVEL 1 FOR 60000.0;
		LEVEL 0 FOR 60000.0;
		LEVEL 1 FOR 80000.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 40000.0;
			LEVEL 1 FOR 20000.0;
		}
		LEVEL 0 FOR 40000.0;
		LEVEL 1 FOR 40000.0;
		LEVEL 0 FOR 60000.0;
		LEVEL 1 FOR 20000.0;
		LEVEL 0 FOR 20000.0;
		LEVEL 1 FOR 20000.0;
		LEVEL 0 FOR 40000.0;
		LEVEL 1 FOR 500000.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20000.0;
			LEVEL 1 FOR 40000.0;
			LEVEL 0 FOR 40000.0;
			LEVEL 1 FOR 40000.0;
		}
		LEVEL 0 FOR 40000.0;
		LEVEL 1 FOR 20000.0;
		LEVEL 0 FOR 20000.0;
		LEVEL 1 FOR 40000.0;
		LEVEL 0 FOR 80000.0;
		LEVEL 1 FOR 40000.0;
		LEVEL 0 FOR 20000.0;
		LEVEL 1 FOR 460000.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 20000.0;
			LEVEL 1 FOR 40000.0;
			LEVEL 0 FOR 40000.0;
			LEVEL 1 FOR 40000.0;
		}
		LEVEL 0 FOR 40000.0;
		LEVEL 1 FOR 20000.0;
		LEVEL 0 FOR 20000.0;
		LEVEL 1 FOR 40000.0;
		LEVEL 0 FOR 80000.0;
		LEVEL 1 FOR 40000.0;
		LEVEL 0 FOR 460000.0;
		LEVEL 1 FOR 100000.0;
		LEVEL 0 FOR 20000.0;
		LEVEL 1 FOR 20000.0;
		LEVEL 0 FOR 20000.0;
		LEVEL 1 FOR 140000.0;
		LEVEL 0 FOR 40000.0;
		LEVEL 1 FOR 40000.0;
		LEVEL 0 FOR 40000.0;
		LEVEL 1 FOR 20000.0;
		LEVEL 0 FOR 40000.0;
		LEVEL 1 FOR 40000.0;
		LEVEL 0 FOR 20000.0;
		LEVEL 1 FOR 20000.0;
		LEVEL 0 FOR 440000.0;
		LEVEL 1 FOR 100000.0;
		LEVEL 0 FOR 20000.0;
		LEVEL 1 FOR 20000.0;
		LEVEL 0 FOR 20000.0;
		LEVEL 1 FOR 140000.0;
		LEVEL 0 FOR 40000.0;
		LEVEL 1 FOR 40000.0;
		LEVEL 0 FOR 35000.0;
	}
}

TRANSITION_LIST("SPI_nCS")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 505000.0;
		NODE
		{
			REPEAT = 9;
			LEVEL 0 FOR 640000.0;
			LEVEL 1 FOR 360000.0;
		}
		LEVEL 0 FOR 495000.0;
	}
}

DISPLAY_LINE
{
	CHANNEL = "CLOCK";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 0;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "STROBE";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 1;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "MASTERIN";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 2;
	TREE_LEVEL = 0;
	CHILDREN = 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34;
}

DISPLAY_LINE
{
	CHANNEL = "MASTERIN[31]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 3;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "MASTERIN[30]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 4;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "MASTERIN[29]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 5;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "MASTERIN[28]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 6;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "MASTERIN[27]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 7;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "MASTERIN[26]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 8;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "MASTERIN[25]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 9;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "MASTERIN[24]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 10;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "MASTERIN[23]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 11;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "MASTERIN[22]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 12;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "MASTERIN[21]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 13;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "MASTERIN[20]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 14;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "MASTERIN[19]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 15;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "MASTERIN[18]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 16;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "MASTERIN[17]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 17;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "MASTERIN[16]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 18;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "MASTERIN[15]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 19;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "MASTERIN[14]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 20;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "MASTERIN[13]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 21;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "MASTERIN[12]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 22;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "MASTERIN[11]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 23;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "MASTERIN[10]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 24;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "MASTERIN[9]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 25;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "MASTERIN[8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 26;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "MASTERIN[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 27;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "MASTERIN[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 28;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "MASTERIN[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 29;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "MASTERIN[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 30;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "MASTERIN[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 31;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "MASTERIN[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 32;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "MASTERIN[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 33;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "MASTERIN[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 34;
	TREE_LEVEL = 1;
	PARENT = 2;
}

DISPLAY_LINE
{
	CHANNEL = "SLAVEOUT";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 35;
	TREE_LEVEL = 0;
	CHILDREN = 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67;
}

DISPLAY_LINE
{
	CHANNEL = "SLAVEOUT[31]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 36;
	TREE_LEVEL = 1;
	PARENT = 35;
}

DISPLAY_LINE
{
	CHANNEL = "SLAVEOUT[30]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 37;
	TREE_LEVEL = 1;
	PARENT = 35;
}

DISPLAY_LINE
{
	CHANNEL = "SLAVEOUT[29]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 38;
	TREE_LEVEL = 1;
	PARENT = 35;
}

DISPLAY_LINE
{
	CHANNEL = "SLAVEOUT[28]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 39;
	TREE_LEVEL = 1;
	PARENT = 35;
}

DISPLAY_LINE
{
	CHANNEL = "SLAVEOUT[27]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 40;
	TREE_LEVEL = 1;
	PARENT = 35;
}

DISPLAY_LINE
{
	CHANNEL = "SLAVEOUT[26]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 41;
	TREE_LEVEL = 1;
	PARENT = 35;
}

DISPLAY_LINE
{
	CHANNEL = "SLAVEOUT[25]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 42;
	TREE_LEVEL = 1;
	PARENT = 35;
}

DISPLAY_LINE
{
	CHANNEL = "SLAVEOUT[24]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 43;
	TREE_LEVEL = 1;
	PARENT = 35;
}

DISPLAY_LINE
{
	CHANNEL = "SLAVEOUT[23]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 44;
	TREE_LEVEL = 1;
	PARENT = 35;
}

DISPLAY_LINE
{
	CHANNEL = "SLAVEOUT[22]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 45;
	TREE_LEVEL = 1;
	PARENT = 35;
}

DISPLAY_LINE
{
	CHANNEL = "SLAVEOUT[21]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 46;
	TREE_LEVEL = 1;
	PARENT = 35;
}

DISPLAY_LINE
{
	CHANNEL = "SLAVEOUT[20]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 47;
	TREE_LEVEL = 1;
	PARENT = 35;
}

DISPLAY_LINE
{
	CHANNEL = "SLAVEOUT[19]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 48;
	TREE_LEVEL = 1;
	PARENT = 35;
}

DISPLAY_LINE
{
	CHANNEL = "SLAVEOUT[18]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 49;
	TREE_LEVEL = 1;
	PARENT = 35;
}

DISPLAY_LINE
{
	CHANNEL = "SLAVEOUT[17]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 50;
	TREE_LEVEL = 1;
	PARENT = 35;
}

DISPLAY_LINE
{
	CHANNEL = "SLAVEOUT[16]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 51;
	TREE_LEVEL = 1;
	PARENT = 35;
}

DISPLAY_LINE
{
	CHANNEL = "SLAVEOUT[15]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 52;
	TREE_LEVEL = 1;
	PARENT = 35;
}

DISPLAY_LINE
{
	CHANNEL = "SLAVEOUT[14]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 53;
	TREE_LEVEL = 1;
	PARENT = 35;
}

DISPLAY_LINE
{
	CHANNEL = "SLAVEOUT[13]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 54;
	TREE_LEVEL = 1;
	PARENT = 35;
}

DISPLAY_LINE
{
	CHANNEL = "SLAVEOUT[12]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 55;
	TREE_LEVEL = 1;
	PARENT = 35;
}

DISPLAY_LINE
{
	CHANNEL = "SLAVEOUT[11]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 56;
	TREE_LEVEL = 1;
	PARENT = 35;
}

DISPLAY_LINE
{
	CHANNEL = "SLAVEOUT[10]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 57;
	TREE_LEVEL = 1;
	PARENT = 35;
}

DISPLAY_LINE
{
	CHANNEL = "SLAVEOUT[9]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 58;
	TREE_LEVEL = 1;
	PARENT = 35;
}

DISPLAY_LINE
{
	CHANNEL = "SLAVEOUT[8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 59;
	TREE_LEVEL = 1;
	PARENT = 35;
}

DISPLAY_LINE
{
	CHANNEL = "SLAVEOUT[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 60;
	TREE_LEVEL = 1;
	PARENT = 35;
}

DISPLAY_LINE
{
	CHANNEL = "SLAVEOUT[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 61;
	TREE_LEVEL = 1;
	PARENT = 35;
}

DISPLAY_LINE
{
	CHANNEL = "SLAVEOUT[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 62;
	TREE_LEVEL = 1;
	PARENT = 35;
}

DISPLAY_LINE
{
	CHANNEL = "SLAVEOUT[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 63;
	TREE_LEVEL = 1;
	PARENT = 35;
}

DISPLAY_LINE
{
	CHANNEL = "SLAVEOUT[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 64;
	TREE_LEVEL = 1;
	PARENT = 35;
}

DISPLAY_LINE
{
	CHANNEL = "SLAVEOUT[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 65;
	TREE_LEVEL = 1;
	PARENT = 35;
}

DISPLAY_LINE
{
	CHANNEL = "SLAVEOUT[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 66;
	TREE_LEVEL = 1;
	PARENT = 35;
}

DISPLAY_LINE
{
	CHANNEL = "SLAVEOUT[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 67;
	TREE_LEVEL = 1;
	PARENT = 35;
}

DISPLAY_LINE
{
	CHANNEL = "SLAVEIN";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 68;
	TREE_LEVEL = 0;
	CHILDREN = 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100;
}

DISPLAY_LINE
{
	CHANNEL = "SLAVEIN[31]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 69;
	TREE_LEVEL = 1;
	PARENT = 68;
}

DISPLAY_LINE
{
	CHANNEL = "SLAVEIN[30]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 70;
	TREE_LEVEL = 1;
	PARENT = 68;
}

DISPLAY_LINE
{
	CHANNEL = "SLAVEIN[29]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 71;
	TREE_LEVEL = 1;
	PARENT = 68;
}

DISPLAY_LINE
{
	CHANNEL = "SLAVEIN[28]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 72;
	TREE_LEVEL = 1;
	PARENT = 68;
}

DISPLAY_LINE
{
	CHANNEL = "SLAVEIN[27]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 73;
	TREE_LEVEL = 1;
	PARENT = 68;
}

DISPLAY_LINE
{
	CHANNEL = "SLAVEIN[26]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 74;
	TREE_LEVEL = 1;
	PARENT = 68;
}

DISPLAY_LINE
{
	CHANNEL = "SLAVEIN[25]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 75;
	TREE_LEVEL = 1;
	PARENT = 68;
}

DISPLAY_LINE
{
	CHANNEL = "SLAVEIN[24]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 76;
	TREE_LEVEL = 1;
	PARENT = 68;
}

DISPLAY_LINE
{
	CHANNEL = "SLAVEIN[23]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 77;
	TREE_LEVEL = 1;
	PARENT = 68;
}

DISPLAY_LINE
{
	CHANNEL = "SLAVEIN[22]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 78;
	TREE_LEVEL = 1;
	PARENT = 68;
}

DISPLAY_LINE
{
	CHANNEL = "SLAVEIN[21]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 79;
	TREE_LEVEL = 1;
	PARENT = 68;
}

DISPLAY_LINE
{
	CHANNEL = "SLAVEIN[20]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 80;
	TREE_LEVEL = 1;
	PARENT = 68;
}

DISPLAY_LINE
{
	CHANNEL = "SLAVEIN[19]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 81;
	TREE_LEVEL = 1;
	PARENT = 68;
}

DISPLAY_LINE
{
	CHANNEL = "SLAVEIN[18]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 82;
	TREE_LEVEL = 1;
	PARENT = 68;
}

DISPLAY_LINE
{
	CHANNEL = "SLAVEIN[17]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 83;
	TREE_LEVEL = 1;
	PARENT = 68;
}

DISPLAY_LINE
{
	CHANNEL = "SLAVEIN[16]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 84;
	TREE_LEVEL = 1;
	PARENT = 68;
}

DISPLAY_LINE
{
	CHANNEL = "SLAVEIN[15]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 85;
	TREE_LEVEL = 1;
	PARENT = 68;
}

DISPLAY_LINE
{
	CHANNEL = "SLAVEIN[14]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 86;
	TREE_LEVEL = 1;
	PARENT = 68;
}

DISPLAY_LINE
{
	CHANNEL = "SLAVEIN[13]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 87;
	TREE_LEVEL = 1;
	PARENT = 68;
}

DISPLAY_LINE
{
	CHANNEL = "SLAVEIN[12]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 88;
	TREE_LEVEL = 1;
	PARENT = 68;
}

DISPLAY_LINE
{
	CHANNEL = "SLAVEIN[11]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 89;
	TREE_LEVEL = 1;
	PARENT = 68;
}

DISPLAY_LINE
{
	CHANNEL = "SLAVEIN[10]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 90;
	TREE_LEVEL = 1;
	PARENT = 68;
}

DISPLAY_LINE
{
	CHANNEL = "SLAVEIN[9]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 91;
	TREE_LEVEL = 1;
	PARENT = 68;
}

DISPLAY_LINE
{
	CHANNEL = "SLAVEIN[8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 92;
	TREE_LEVEL = 1;
	PARENT = 68;
}

DISPLAY_LINE
{
	CHANNEL = "SLAVEIN[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 93;
	TREE_LEVEL = 1;
	PARENT = 68;
}

DISPLAY_LINE
{
	CHANNEL = "SLAVEIN[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 94;
	TREE_LEVEL = 1;
	PARENT = 68;
}

DISPLAY_LINE
{
	CHANNEL = "SLAVEIN[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 95;
	TREE_LEVEL = 1;
	PARENT = 68;
}

DISPLAY_LINE
{
	CHANNEL = "SLAVEIN[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 96;
	TREE_LEVEL = 1;
	PARENT = 68;
}

DISPLAY_LINE
{
	CHANNEL = "SLAVEIN[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 97;
	TREE_LEVEL = 1;
	PARENT = 68;
}

DISPLAY_LINE
{
	CHANNEL = "SLAVEIN[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 98;
	TREE_LEVEL = 1;
	PARENT = 68;
}

DISPLAY_LINE
{
	CHANNEL = "SLAVEIN[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 99;
	TREE_LEVEL = 1;
	PARENT = 68;
}

DISPLAY_LINE
{
	CHANNEL = "SLAVEIN[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 100;
	TREE_LEVEL = 1;
	PARENT = 68;
}

DISPLAY_LINE
{
	CHANNEL = "MASTEROUT";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 101;
	TREE_LEVEL = 0;
	CHILDREN = 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133;
}

DISPLAY_LINE
{
	CHANNEL = "MASTEROUT[31]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 102;
	TREE_LEVEL = 1;
	PARENT = 101;
}

DISPLAY_LINE
{
	CHANNEL = "MASTEROUT[30]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 103;
	TREE_LEVEL = 1;
	PARENT = 101;
}

DISPLAY_LINE
{
	CHANNEL = "MASTEROUT[29]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 104;
	TREE_LEVEL = 1;
	PARENT = 101;
}

DISPLAY_LINE
{
	CHANNEL = "MASTEROUT[28]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 105;
	TREE_LEVEL = 1;
	PARENT = 101;
}

DISPLAY_LINE
{
	CHANNEL = "MASTEROUT[27]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 106;
	TREE_LEVEL = 1;
	PARENT = 101;
}

DISPLAY_LINE
{
	CHANNEL = "MASTEROUT[26]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 107;
	TREE_LEVEL = 1;
	PARENT = 101;
}

DISPLAY_LINE
{
	CHANNEL = "MASTEROUT[25]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 108;
	TREE_LEVEL = 1;
	PARENT = 101;
}

DISPLAY_LINE
{
	CHANNEL = "MASTEROUT[24]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 109;
	TREE_LEVEL = 1;
	PARENT = 101;
}

DISPLAY_LINE
{
	CHANNEL = "MASTEROUT[23]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 110;
	TREE_LEVEL = 1;
	PARENT = 101;
}

DISPLAY_LINE
{
	CHANNEL = "MASTEROUT[22]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 111;
	TREE_LEVEL = 1;
	PARENT = 101;
}

DISPLAY_LINE
{
	CHANNEL = "MASTEROUT[21]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 112;
	TREE_LEVEL = 1;
	PARENT = 101;
}

DISPLAY_LINE
{
	CHANNEL = "MASTEROUT[20]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 113;
	TREE_LEVEL = 1;
	PARENT = 101;
}

DISPLAY_LINE
{
	CHANNEL = "MASTEROUT[19]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 114;
	TREE_LEVEL = 1;
	PARENT = 101;
}

DISPLAY_LINE
{
	CHANNEL = "MASTEROUT[18]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 115;
	TREE_LEVEL = 1;
	PARENT = 101;
}

DISPLAY_LINE
{
	CHANNEL = "MASTEROUT[17]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 116;
	TREE_LEVEL = 1;
	PARENT = 101;
}

DISPLAY_LINE
{
	CHANNEL = "MASTEROUT[16]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 117;
	TREE_LEVEL = 1;
	PARENT = 101;
}

DISPLAY_LINE
{
	CHANNEL = "MASTEROUT[15]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 118;
	TREE_LEVEL = 1;
	PARENT = 101;
}

DISPLAY_LINE
{
	CHANNEL = "MASTEROUT[14]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 119;
	TREE_LEVEL = 1;
	PARENT = 101;
}

DISPLAY_LINE
{
	CHANNEL = "MASTEROUT[13]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 120;
	TREE_LEVEL = 1;
	PARENT = 101;
}

DISPLAY_LINE
{
	CHANNEL = "MASTEROUT[12]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 121;
	TREE_LEVEL = 1;
	PARENT = 101;
}

DISPLAY_LINE
{
	CHANNEL = "MASTEROUT[11]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 122;
	TREE_LEVEL = 1;
	PARENT = 101;
}

DISPLAY_LINE
{
	CHANNEL = "MASTEROUT[10]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 123;
	TREE_LEVEL = 1;
	PARENT = 101;
}

DISPLAY_LINE
{
	CHANNEL = "MASTEROUT[9]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 124;
	TREE_LEVEL = 1;
	PARENT = 101;
}

DISPLAY_LINE
{
	CHANNEL = "MASTEROUT[8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 125;
	TREE_LEVEL = 1;
	PARENT = 101;
}

DISPLAY_LINE
{
	CHANNEL = "MASTEROUT[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 126;
	TREE_LEVEL = 1;
	PARENT = 101;
}

DISPLAY_LINE
{
	CHANNEL = "MASTEROUT[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 127;
	TREE_LEVEL = 1;
	PARENT = 101;
}

DISPLAY_LINE
{
	CHANNEL = "MASTEROUT[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 128;
	TREE_LEVEL = 1;
	PARENT = 101;
}

DISPLAY_LINE
{
	CHANNEL = "MASTEROUT[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 129;
	TREE_LEVEL = 1;
	PARENT = 101;
}

DISPLAY_LINE
{
	CHANNEL = "MASTEROUT[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 130;
	TREE_LEVEL = 1;
	PARENT = 101;
}

DISPLAY_LINE
{
	CHANNEL = "MASTEROUT[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 131;
	TREE_LEVEL = 1;
	PARENT = 101;
}

DISPLAY_LINE
{
	CHANNEL = "MASTEROUT[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 132;
	TREE_LEVEL = 1;
	PARENT = 101;
}

DISPLAY_LINE
{
	CHANNEL = "MASTEROUT[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 133;
	TREE_LEVEL = 1;
	PARENT = 101;
}

DISPLAY_LINE
{
	CHANNEL = "TEST_SPI_RUN";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 134;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "SPI_CLK";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 135;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "SPI_MISO";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 136;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "SPI_MOSI";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 137;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "SPI_nCS";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 138;
	TREE_LEVEL = 0;
}

TIME_BAR
{
	TIME = 31875;
	MASTER = TRUE;
}
;
