/*
WARNING: Do NOT edit the input and output ports in this file in a text
editor if you plan to continue editing the block that represents it in
the Block Editor! File corruption is VERY likely to occur.
*/

/*
Copyright (C) 1991-2010 Altera Corporation
Your use of Altera Corporation's design tools, logic functions 
and other software and tools, and its AMPP partner logic 
functions, and any output files from any of the foregoing 
(including device programming or simulation files), and any 
associated documentation or information are expressly subject 
to the terms and conditions of the Altera Program License 
Subscription Agreement, Altera MegaCore Function License 
Agreement, or other applicable license agreement, including, 
without limitation, that your use is for the sole purpose of 
programming logic devices manufactured by Altera and sold by 
Altera or its authorized distributors.  Please refer to the 
applicable agreement for further details.
*/

HEADER
{
	VERSION = 1;
	TIME_UNIT = ns;
	DATA_OFFSET = 0.0;
	DATA_DURATION = 1000000000.0;
	SIMULATION_TIME = 1000000000.0;
	GRID_PHASE = 0.0;
	GRID_PERIOD = 10.0;
	GRID_DUTY_CYCLE = 50;
}

SIGNAL("AQMODE")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("AVGcoder")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 3;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("AVGcoder[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "AVGcoder";
}

SIGNAL("AVGcoder[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "AVGcoder";
}

SIGNAL("AVGcoder[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "AVGcoder";
}

SIGNAL("CLKSLOW")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("CONF")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 4;
	LSB_INDEX = 0;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("CONF[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "CONF";
}

SIGNAL("CONF[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "CONF";
}

SIGNAL("CONF[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "CONF";
}

SIGNAL("CONF[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "CONF";
}

SIGNAL("DFS")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 3;
	LSB_INDEX = 0;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("DFS[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "DFS";
}

SIGNAL("DFS[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "DFS";
}

SIGNAL("DFS[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "DFS";
}

SIGNAL("HBWon")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("nPush")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("SEnDIFF")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("SRate")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 3;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("SRate[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "SRate";
}

SIGNAL("SRate[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "SRate";
}

SIGNAL("SRate[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "SRate";
}

SIGNAL("SRnAVG")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("Ta")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("Tb")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

TRANSITION_LIST("AQMODE")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000000000.0;
	}
}

TRANSITION_LIST("AVGcoder[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 477500000.0;
		LEVEL 1 FOR 306000000.0;
		LEVEL 0 FOR 192000000.0;
		LEVEL 1 FOR 23000000.0;
		LEVEL 0 FOR 1000000.0;
		LEVEL 1 FOR 500000.0;
	}
}

TRANSITION_LIST("AVGcoder[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 437500000.0;
		LEVEL 1 FOR 40000000.0;
		LEVEL 0 FOR 126000000.0;
		LEVEL 1 FOR 140000000.0;
		LEVEL 0 FOR 40000000.0;
		LEVEL 1 FOR 29000000.0;
		LEVEL 0 FOR 124000000.0;
		LEVEL 1 FOR 39000000.0;
		LEVEL 0 FOR 23000000.0;
		LEVEL 1 FOR 1000000.0;
		LEVEL 0 FOR 500000.0;
	}
}

TRANSITION_LIST("AVGcoder[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 429500000.0;
		LEVEL 1 FOR 8000000.0;
		LEVEL 0 FOR 20000000.0;
		LEVEL 1 FOR 20000000.0;
		LEVEL 0 FOR 20000000.0;
		LEVEL 1 FOR 106000000.0;
		LEVEL 0 FOR 140000000.0;
		LEVEL 1 FOR 20000000.0;
		LEVEL 0 FOR 20000000.0;
		LEVEL 1 FOR 5000000.0;
		LEVEL 0 FOR 24000000.0;
		LEVEL 1 FOR 20000000.0;
		LEVEL 0 FOR 85000000.0;
		LEVEL 1 FOR 19000000.0;
		LEVEL 0 FOR 20000000.0;
		LEVEL 1 FOR 19000000.0;
		LEVEL 0 FOR 24000000.0;
		LEVEL 1 FOR 500000.0;
	}
}

TRANSITION_LIST("CLKSLOW")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1000;
			LEVEL 0 FOR 500000.0;
			LEVEL 1 FOR 500000.0;
		}
	}
}

TRANSITION_LIST("CONF[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000000000.0;
	}
}

TRANSITION_LIST("CONF[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 998000000.0;
		LEVEL 1 FOR 1500000.0;
		LEVEL 0 FOR 500000.0;
	}
}

TRANSITION_LIST("CONF[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000000000.0;
	}
}

TRANSITION_LIST("CONF[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 590500000.0;
		LEVEL 1 FOR 409000000.0;
		LEVEL 0 FOR 500000.0;
	}
}

TRANSITION_LIST("DFS[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 788000000.0;
		LEVEL 1 FOR 97000000.0;
		LEVEL 0 FOR 113000000.0;
		LEVEL 1 FOR 1500000.0;
		LEVEL 0 FOR 500000.0;
	}
}

TRANSITION_LIST("DFS[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 885000000.0;
		LEVEL 1 FOR 113000000.0;
		LEVEL 0 FOR 2000000.0;
	}
}

TRANSITION_LIST("DFS[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 885000000.0;
		LEVEL 0 FOR 113000000.0;
		LEVEL 1 FOR 2000000.0;
	}
}

TRANSITION_LIST("HBWon")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 998000000.0;
		LEVEL 1 FOR 1500000.0;
		LEVEL 0 FOR 500000.0;
	}
}

TRANSITION_LIST("nPush")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 408000000.0;
		LEVEL 0 FOR 21000000.0;
		LEVEL 1 FOR 192500000.0;
		LEVEL 0 FOR 15500000.0;
		LEVEL 1 FOR 363000000.0;
	}
}

TRANSITION_LIST("SEnDIFF")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000000000.0;
	}
}

TRANSITION_LIST("SRate[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 41500000.0;
		LEVEL 1 FOR 246000000.0;
		LEVEL 0 FOR 500500000.0;
		LEVEL 1 FOR 97000000.0;
		LEVEL 0 FOR 113000000.0;
		LEVEL 1 FOR 1500000.0;
		LEVEL 0 FOR 500000.0;
	}
}

TRANSITION_LIST("SRate[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 41500000.0;
		LEVEL 0 FOR 40000000.0;
		LEVEL 1 FOR 166000000.0;
		LEVEL 0 FOR 40000000.0;
		LEVEL 1 FOR 303000000.0;
		LEVEL 0 FOR 294500000.0;
		LEVEL 1 FOR 113000000.0;
		LEVEL 0 FOR 1500000.0;
		LEVEL 1 FOR 500000.0;
	}
}

TRANSITION_LIST("SRate[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1500000.0;
		LEVEL 1 FOR 40000000.0;
		LEVEL 0 FOR 20000000.0;
		LEVEL 1 FOR 20000000.0;
		LEVEL 0 FOR 166000000.0;
		LEVEL 1 FOR 20000000.0;
		LEVEL 0 FOR 20000000.0;
		LEVEL 1 FOR 20000000.0;
		LEVEL 0 FOR 283000000.0;
		LEVEL 1 FOR 294500000.0;
		LEVEL 0 FOR 113000000.0;
		LEVEL 1 FOR 1500000.0;
		LEVEL 0 FOR 500000.0;
	}
}

TRANSITION_LIST("SRnAVG")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 429500000.0;
		LEVEL 1 FOR 161000000.0;
		LEVEL 0 FOR 409500000.0;
	}
}

TRANSITION_LIST("Ta")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 30000000.0;
		LEVEL 0 FOR 10000000.0;
		LEVEL 1 FOR 10000000.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 10000000.0;
			LEVEL 1 FOR 10000000.0;
		}
		LEVEL 0 FOR 9500000.0;
		LEVEL 1 FOR 10000000.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 10000000.0;
			LEVEL 1 FOR 10000000.0;
		}
		LEVEL 0 FOR 10000000.0;
		LEVEL 1 FOR 33500000.0;
		LEVEL 0 FOR 10000000.0;
		LEVEL 1 FOR 10000000.0;
		NODE
		{
			REPEAT = 5;
			LEVEL 0 FOR 10000000.0;
			LEVEL 1 FOR 10000000.0;
		}
		LEVEL 0 FOR 10000000.0;
		LEVEL 1 FOR 63000000.0;
		LEVEL 0 FOR 10000000.0;
		LEVEL 1 FOR 10000000.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 10000000.0;
			LEVEL 1 FOR 10000000.0;
		}
		LEVEL 0 FOR 6500000.0;
		LEVEL 1 FOR 20000000.0;
		LEVEL 0 FOR 10000000.0;
		LEVEL 1 FOR 10000000.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 10000000.0;
			LEVEL 1 FOR 10000000.0;
		}
		LEVEL 0 FOR 6500000.0;
		LEVEL 1 FOR 105500000.0;
		LEVEL 0 FOR 10000000.0;
		LEVEL 1 FOR 10000000.0;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 10000000.0;
			LEVEL 1 FOR 10000000.0;
		}
		LEVEL 0 FOR 9500000.0;
		LEVEL 1 FOR 20000000.0;
		LEVEL 0 FOR 10000000.0;
		LEVEL 1 FOR 10000000.0;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 10000000.0;
			LEVEL 1 FOR 10000000.0;
		}
		LEVEL 0 FOR 9500000.0;
		LEVEL 1 FOR 62500000.0;
		LEVEL 0 FOR 10000000.0;
		LEVEL 1 FOR 10000000.0;
		LEVEL 0 FOR 9500000.0;
		LEVEL 1 FOR 10000000.0;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 10000000.0;
			LEVEL 1 FOR 10000000.0;
		}
		LEVEL 0 FOR 8500000.0;
		LEVEL 1 FOR 26000000.0;
	}
}

TRANSITION_LIST("Tb")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 25000000.0;
		LEVEL 0 FOR 10000000.0;
		LEVEL 1 FOR 10000000.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 10000000.0;
			LEVEL 1 FOR 10000000.0;
		}
		LEVEL 0 FOR 10000000.0;
		LEVEL 1 FOR 9500000.0;
		LEVEL 0 FOR 10000000.0;
		LEVEL 1 FOR 10000000.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 10000000.0;
			LEVEL 1 FOR 10000000.0;
		}
		LEVEL 0 FOR 10000000.0;
		LEVEL 1 FOR 42000000.0;
		NODE
		{
			REPEAT = 6;
			LEVEL 0 FOR 10000000.0;
			LEVEL 1 FOR 10000000.0;
		}
		LEVEL 0 FOR 10000000.0;
		LEVEL 1 FOR 53000000.0;
		LEVEL 0 FOR 8000000.0;
		LEVEL 1 FOR 10000000.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 10000000.0;
			LEVEL 1 FOR 10000000.0;
		}
		LEVEL 0 FOR 10000000.0;
		LEVEL 1 FOR 16500000.0;
		LEVEL 0 FOR 10000000.0;
		LEVEL 1 FOR 10000000.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 10000000.0;
			LEVEL 1 FOR 10000000.0;
		}
		LEVEL 0 FOR 10000000.0;
		LEVEL 1 FOR 118000000.0;
		LEVEL 0 FOR 10000000.0;
		LEVEL 1 FOR 10000000.0;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 10000000.0;
			LEVEL 1 FOR 10000000.0;
		}
		LEVEL 0 FOR 10000000.0;
		LEVEL 1 FOR 19500000.0;
		LEVEL 0 FOR 10000000.0;
		LEVEL 1 FOR 10000000.0;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 10000000.0;
			LEVEL 1 FOR 10000000.0;
		}
		LEVEL 0 FOR 10000000.0;
		LEVEL 1 FOR 49500000.0;
		LEVEL 0 FOR 10000000.0;
		LEVEL 1 FOR 10000000.0;
		LEVEL 0 FOR 10000000.0;
		LEVEL 1 FOR 9500000.0;
		LEVEL 0 FOR 10000000.0;
		LEVEL 1 FOR 10000000.0;
		LEVEL 0 FOR 7500000.0;
		LEVEL 1 FOR 32000000.0;
	}
}

DISPLAY_LINE
{
	CHANNEL = "CLKSLOW";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 0;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "CONF";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1;
	TREE_LEVEL = 0;
	CHILDREN = 2, 3, 4, 5;
}

DISPLAY_LINE
{
	CHANNEL = "CONF[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 2;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "CONF[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 3;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "CONF[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 4;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "CONF[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 5;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "DFS";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 6;
	TREE_LEVEL = 0;
	CHILDREN = 7, 8, 9;
}

DISPLAY_LINE
{
	CHANNEL = "DFS[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 7;
	TREE_LEVEL = 1;
	PARENT = 6;
}

DISPLAY_LINE
{
	CHANNEL = "DFS[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 8;
	TREE_LEVEL = 1;
	PARENT = 6;
}

DISPLAY_LINE
{
	CHANNEL = "DFS[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 9;
	TREE_LEVEL = 1;
	PARENT = 6;
}

DISPLAY_LINE
{
	CHANNEL = "Ta";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 10;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Tb";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 11;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "nPush";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 12;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "AQMODE";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 13;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "AVGcoder";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 14;
	TREE_LEVEL = 0;
	CHILDREN = 15, 16, 17;
}

DISPLAY_LINE
{
	CHANNEL = "AVGcoder[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 15;
	TREE_LEVEL = 1;
	PARENT = 14;
}

DISPLAY_LINE
{
	CHANNEL = "AVGcoder[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 16;
	TREE_LEVEL = 1;
	PARENT = 14;
}

DISPLAY_LINE
{
	CHANNEL = "AVGcoder[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 17;
	TREE_LEVEL = 1;
	PARENT = 14;
}

DISPLAY_LINE
{
	CHANNEL = "HBWon";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 18;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "SEnDIFF";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 19;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "SRate";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 20;
	TREE_LEVEL = 0;
	CHILDREN = 21, 22, 23;
}

DISPLAY_LINE
{
	CHANNEL = "SRate[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 21;
	TREE_LEVEL = 1;
	PARENT = 20;
}

DISPLAY_LINE
{
	CHANNEL = "SRate[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 22;
	TREE_LEVEL = 1;
	PARENT = 20;
}

DISPLAY_LINE
{
	CHANNEL = "SRate[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 23;
	TREE_LEVEL = 1;
	PARENT = 20;
}

DISPLAY_LINE
{
	CHANNEL = "SRnAVG";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Signed;
	TREE_INDEX = 24;
	TREE_LEVEL = 0;
}

TIME_BAR
{
	TIME = 29800;
	MASTER = TRUE;
}
;
