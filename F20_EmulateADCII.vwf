/*
WARNING: Do NOT edit the input and output ports in this file in a text
editor if you plan to continue editing the block that represents it in
the Block Editor! File corruption is VERY likely to occur.
*/

/*
Copyright (C) 1991-2010 Altera Corporation
Your use of Altera Corporation's design tools, logic functions 
and other software and tools, and its AMPP partner logic 
functions, and any output files from any of the foregoing 
(including device programming or simulation files), and any 
associated documentation or information are expressly subject 
to the terms and conditions of the Altera Program License 
Subscription Agreement, Altera MegaCore Function License 
Agreement, or other applicable license agreement, including, 
without limitation, that your use is for the sole purpose of 
programming logic devices manufactured by Altera and sold by 
Altera or its authorized distributors.  Please refer to the 
applicable agreement for further details.
*/

HEADER
{
	VERSION = 1;
	TIME_UNIT = ns;
	DATA_OFFSET = 0.0;
	DATA_DURATION = 100000.0;
	SIMULATION_TIME = 100000.0;
	GRID_PHASE = 0.0;
	GRID_PERIOD = 10.0;
	GRID_DUTY_CYCLE = 50;
}

SIGNAL("CNV")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("DATAI")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 24;
	LSB_INDEX = 0;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("DATAI[23]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "DATAI";
}

SIGNAL("DATAI[22]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "DATAI";
}

SIGNAL("DATAI[21]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "DATAI";
}

SIGNAL("DATAI[20]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "DATAI";
}

SIGNAL("DATAI[19]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "DATAI";
}

SIGNAL("DATAI[18]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "DATAI";
}

SIGNAL("DATAI[17]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "DATAI";
}

SIGNAL("DATAI[16]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "DATAI";
}

SIGNAL("DATAI[15]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "DATAI";
}

SIGNAL("DATAI[14]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "DATAI";
}

SIGNAL("DATAI[13]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "DATAI";
}

SIGNAL("DATAI[12]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "DATAI";
}

SIGNAL("DATAI[11]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "DATAI";
}

SIGNAL("DATAI[10]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "DATAI";
}

SIGNAL("DATAI[9]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "DATAI";
}

SIGNAL("DATAI[8]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "DATAI";
}

SIGNAL("DATAI[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "DATAI";
}

SIGNAL("DATAI[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "DATAI";
}

SIGNAL("DATAI[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "DATAI";
}

SIGNAL("DATAI[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "DATAI";
}

SIGNAL("DATAI[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "DATAI";
}

SIGNAL("DATAI[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "DATAI";
}

SIGNAL("DATAI[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "DATAI";
}

SIGNAL("DATAI[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "DATAI";
}

SIGNAL("SCK")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("SDO")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("test-clear_moy")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("test_clear-reg")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("test_sckcount")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 6;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("test_sckcount[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "test_sckcount";
}

SIGNAL("test_sckcount[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "test_sckcount";
}

SIGNAL("test_sckcount[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "test_sckcount";
}

SIGNAL("test_sckcount[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "test_sckcount";
}

SIGNAL("test_sckcount[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "test_sckcount";
}

SIGNAL("test_sckcount[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "test_sckcount";
}

TRANSITION_LIST("CNV")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 4900.0;
		LEVEL 1 FOR 100.0;
		NODE
		{
			REPEAT = 9;
			LEVEL 0 FOR 9900.0;
			LEVEL 1 FOR 100.0;
		}
		LEVEL 0 FOR 5000.0;
	}
}

TRANSITION_LIST("DATAI[23]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 46080.0;
		LEVEL 0 FOR 53920.0;
	}
}

TRANSITION_LIST("DATAI[22]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 100000.0;
	}
}

TRANSITION_LIST("DATAI[21]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 100000.0;
	}
}

TRANSITION_LIST("DATAI[20]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 46080.0;
		LEVEL 0 FOR 53920.0;
	}
}

TRANSITION_LIST("DATAI[19]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 100000.0;
	}
}

TRANSITION_LIST("DATAI[18]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 100000.0;
	}
}

TRANSITION_LIST("DATAI[17]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 46080.0;
		LEVEL 1 FOR 53920.0;
	}
}

TRANSITION_LIST("DATAI[16]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 46080.0;
		LEVEL 1 FOR 53920.0;
	}
}

TRANSITION_LIST("DATAI[15]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 46080.0;
		LEVEL 0 FOR 53920.0;
	}
}

TRANSITION_LIST("DATAI[14]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 100000.0;
	}
}

TRANSITION_LIST("DATAI[13]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 100000.0;
	}
}

TRANSITION_LIST("DATAI[12]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 46080.0;
		LEVEL 0 FOR 53920.0;
	}
}

TRANSITION_LIST("DATAI[11]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 100000.0;
	}
}

TRANSITION_LIST("DATAI[10]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 100000.0;
	}
}

TRANSITION_LIST("DATAI[9]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 100000.0;
	}
}

TRANSITION_LIST("DATAI[8]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 100000.0;
	}
}

TRANSITION_LIST("DATAI[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 100000.0;
	}
}

TRANSITION_LIST("DATAI[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 100000.0;
	}
}

TRANSITION_LIST("DATAI[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 100000.0;
	}
}

TRANSITION_LIST("DATAI[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 100000.0;
	}
}

TRANSITION_LIST("DATAI[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 100000.0;
	}
}

TRANSITION_LIST("DATAI[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 46080.0;
		LEVEL 1 FOR 53920.0;
	}
}

TRANSITION_LIST("DATAI[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 100000.0;
	}
}

TRANSITION_LIST("DATAI[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 100000.0;
	}
}

TRANSITION_LIST("SCK")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 15890.0;
		LEVEL 1 FOR 150.0;
		NODE
		{
			REPEAT = 23;
			LEVEL 0 FOR 150.0;
			LEVEL 1 FOR 150.0;
		}
		LEVEL 0 FOR 13430.0;
		LEVEL 1 FOR 150.0;
		NODE
		{
			REPEAT = 23;
			LEVEL 0 FOR 150.0;
			LEVEL 1 FOR 150.0;
		}
		LEVEL 0 FOR 13430.0;
		LEVEL 1 FOR 150.0;
		NODE
		{
			REPEAT = 23;
			LEVEL 0 FOR 150.0;
			LEVEL 1 FOR 150.0;
		}
		LEVEL 0 FOR 12150.0;
		LEVEL 1 FOR 150.0;
		NODE
		{
			REPEAT = 23;
			LEVEL 0 FOR 150.0;
			LEVEL 1 FOR 150.0;
		}
		LEVEL 0 FOR 3190.0;
		LEVEL 1 FOR 150.0;
		NODE
		{
			REPEAT = 23;
			LEVEL 0 FOR 150.0;
			LEVEL 1 FOR 150.0;
		}
		LEVEL 0 FOR 6660.0;
	}
}

TRANSITION_LIST("SDO")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 14900.0;
		LEVEL 1 FOR 990.0;
		LEVEL 0 FOR 600.0;
		LEVEL 1 FOR 900.0;
		LEVEL 0 FOR 600.0;
		LEVEL 1 FOR 300.0;
		LEVEL 0 FOR 600.0;
		LEVEL 1 FOR 1500.0;
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 300.0;
		LEVEL 0 FOR 300.0;
		LEVEL 1 FOR 14180.0;
		LEVEL 0 FOR 600.0;
		LEVEL 1 FOR 900.0;
		LEVEL 0 FOR 600.0;
		LEVEL 1 FOR 300.0;
		LEVEL 0 FOR 600.0;
		LEVEL 1 FOR 1500.0;
		LEVEL 0 FOR 1200.0;
		LEVEL 1 FOR 300.0;
		LEVEL 0 FOR 300.0;
		LEVEL 1 FOR 12230.0;
		LEVEL 0 FOR 2850.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 1200.0;
			LEVEL 0 FOR 1200.0;
		}
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 13200.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 1200.0;
			LEVEL 0 FOR 1200.0;
		}
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 4240.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 1200.0;
			LEVEL 0 FOR 1200.0;
		}
		LEVEL 1 FOR 1200.0;
		LEVEL 0 FOR 6810.0;
	}
}

TRANSITION_LIST("test-clear_moy")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 14900.0;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 100.0;
			LEVEL 0 FOR 19900.0;
		}
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 25000.0;
	}
}

TRANSITION_LIST("test_clear-reg")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 22790.0;
		LEVEL 1 FOR 2110.0;
		LEVEL 0 FOR 18370.0;
		LEVEL 1 FOR 1630.0;
		LEVEL 0 FOR 18850.0;
		LEVEL 1 FOR 1150.0;
		LEVEL 0 FOR 18050.0;
		LEVEL 1 FOR 1950.0;
		LEVEL 0 FOR 8290.0;
		LEVEL 1 FOR 1710.0;
		LEVEL 0 FOR 5100.0;
	}
}

TRANSITION_LIST("test_sckcount[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 100000.0;
	}
}

TRANSITION_LIST("test_sckcount[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 20390.0;
		LEVEL 1 FOR 4510.0;
		LEVEL 0 FOR 15970.0;
		LEVEL 1 FOR 4030.0;
		LEVEL 0 FOR 16450.0;
		LEVEL 1 FOR 3550.0;
		LEVEL 0 FOR 15650.0;
		LEVEL 1 FOR 4350.0;
		LEVEL 0 FOR 5890.0;
		LEVEL 1 FOR 4110.0;
		LEVEL 0 FOR 5100.0;
	}
}

TRANSITION_LIST("test_sckcount[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 17990.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 2400.0;
			LEVEL 0 FOR 18080.0;
		}
		LEVEL 1 FOR 2400.0;
		LEVEL 0 FOR 16800.0;
		LEVEL 1 FOR 2400.0;
		LEVEL 0 FOR 7840.0;
		LEVEL 1 FOR 2400.0;
		LEVEL 0 FOR 9210.0;
	}
}

TRANSITION_LIST("test_sckcount[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 16790.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 1200.0;
			LEVEL 0 FOR 1200.0;
		}
		LEVEL 1 FOR 3310.0;
		LEVEL 0 FOR 12370.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 1200.0;
			LEVEL 0 FOR 1200.0;
		}
		LEVEL 1 FOR 2830.0;
		LEVEL 0 FOR 12850.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 1200.0;
			LEVEL 0 FOR 1200.0;
		}
		LEVEL 1 FOR 2350.0;
		LEVEL 0 FOR 12050.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 1200.0;
			LEVEL 0 FOR 1200.0;
		}
		LEVEL 1 FOR 3150.0;
		LEVEL 0 FOR 2290.0;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 1200.0;
			LEVEL 0 FOR 1200.0;
		}
		LEVEL 1 FOR 2910.0;
		LEVEL 0 FOR 5100.0;
	}
}

TRANSITION_LIST("test_sckcount[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 16190.0;
		NODE
		{
			REPEAT = 5;
			LEVEL 1 FOR 600.0;
			LEVEL 0 FOR 600.0;
		}
		LEVEL 1 FOR 2710.0;
		LEVEL 0 FOR 11770.0;
		NODE
		{
			REPEAT = 5;
			LEVEL 1 FOR 600.0;
			LEVEL 0 FOR 600.0;
		}
		LEVEL 1 FOR 2230.0;
		LEVEL 0 FOR 12250.0;
		NODE
		{
			REPEAT = 5;
			LEVEL 1 FOR 600.0;
			LEVEL 0 FOR 600.0;
		}
		LEVEL 1 FOR 1750.0;
		LEVEL 0 FOR 11450.0;
		NODE
		{
			REPEAT = 5;
			LEVEL 1 FOR 600.0;
			LEVEL 0 FOR 600.0;
		}
		LEVEL 1 FOR 2550.0;
		LEVEL 0 FOR 1690.0;
		NODE
		{
			REPEAT = 5;
			LEVEL 1 FOR 600.0;
			LEVEL 0 FOR 600.0;
		}
		LEVEL 1 FOR 2310.0;
		LEVEL 0 FOR 5100.0;
	}
}

TRANSITION_LIST("test_sckcount[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 15890.0;
		NODE
		{
			REPEAT = 11;
			LEVEL 1 FOR 300.0;
			LEVEL 0 FOR 300.0;
		}
		LEVEL 1 FOR 2410.0;
		LEVEL 0 FOR 11470.0;
		NODE
		{
			REPEAT = 11;
			LEVEL 1 FOR 300.0;
			LEVEL 0 FOR 300.0;
		}
		LEVEL 1 FOR 1930.0;
		LEVEL 0 FOR 11950.0;
		NODE
		{
			REPEAT = 11;
			LEVEL 1 FOR 300.0;
			LEVEL 0 FOR 300.0;
		}
		LEVEL 1 FOR 1450.0;
		LEVEL 0 FOR 11150.0;
		NODE
		{
			REPEAT = 11;
			LEVEL 1 FOR 300.0;
			LEVEL 0 FOR 300.0;
		}
		LEVEL 1 FOR 2250.0;
		LEVEL 0 FOR 1390.0;
		NODE
		{
			REPEAT = 11;
			LEVEL 1 FOR 300.0;
			LEVEL 0 FOR 300.0;
		}
		LEVEL 1 FOR 2010.0;
		LEVEL 0 FOR 5100.0;
	}
}

DISPLAY_LINE
{
	CHANNEL = "CNV";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 0;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "DATAI";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1;
	TREE_LEVEL = 0;
	CHILDREN = 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25;
}

DISPLAY_LINE
{
	CHANNEL = "DATAI[23]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 2;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "DATAI[22]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 3;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "DATAI[21]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 4;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "DATAI[20]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 5;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "DATAI[19]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 6;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "DATAI[18]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 7;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "DATAI[17]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 8;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "DATAI[16]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 9;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "DATAI[15]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 10;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "DATAI[14]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 11;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "DATAI[13]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 12;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "DATAI[12]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 13;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "DATAI[11]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 14;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "DATAI[10]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 15;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "DATAI[9]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 16;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "DATAI[8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 17;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "DATAI[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 18;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "DATAI[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 19;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "DATAI[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 20;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "DATAI[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 21;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "DATAI[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 22;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "DATAI[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 23;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "DATAI[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 24;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "DATAI[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 25;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "SCK";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 26;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "SDO";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 27;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "test-clear_moy";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 28;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "test_clear-reg";
	EXPAND_STATUS = COLLAPSED;
	RADIX = ASCII;
	TREE_INDEX = 29;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "test_sckcount";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 30;
	TREE_LEVEL = 0;
	CHILDREN = 31, 32, 33, 34, 35, 36;
}

DISPLAY_LINE
{
	CHANNEL = "test_sckcount[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 31;
	TREE_LEVEL = 1;
	PARENT = 30;
}

DISPLAY_LINE
{
	CHANNEL = "test_sckcount[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 32;
	TREE_LEVEL = 1;
	PARENT = 30;
}

DISPLAY_LINE
{
	CHANNEL = "test_sckcount[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 33;
	TREE_LEVEL = 1;
	PARENT = 30;
}

DISPLAY_LINE
{
	CHANNEL = "test_sckcount[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 34;
	TREE_LEVEL = 1;
	PARENT = 30;
}

DISPLAY_LINE
{
	CHANNEL = "test_sckcount[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 35;
	TREE_LEVEL = 1;
	PARENT = 30;
}

DISPLAY_LINE
{
	CHANNEL = "test_sckcount[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 36;
	TREE_LEVEL = 1;
	PARENT = 30;
}

TIME_BAR
{
	TIME = 31175;
	MASTER = TRUE;
}
;
